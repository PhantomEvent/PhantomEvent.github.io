[{"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_thresholds": "uint256[]", "_tokens": "address[]", "i": "uint256", "delayThresholds": "mapping(address => uint256)"}, "info": ["PeggedTokenBridgeV2", "setDelayThresholds", "DelayThresholdUpdated", ["_tokens_element--variables", "_thresholds_element--variables"]], "related_expression": ["_tokens.length==_thresholds.length", "i=0", "i<_tokens.length", "delayThresholds[_tokens[i]]=_thresholds[i]", "i++", "delayThresholds[_tokens[i]]=_thresholds[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Expression", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_thresholds": "uint256[]", "_tokens": "address[]", "i": "uint256", "delayThresholds": "mapping(address => uint256)"}, "info": ["PeggedTokenBridgeV2", "setDelayThresholds", "DelayThresholdUpdated", ["_tokens_element--variables", "_thresholds_element--variables"]], "related_expression": ["_tokens.length==_thresholds.length", "i=0", "i<_tokens.length", "delayThresholds[_tokens[i]]=_thresholds[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernor"], "vars": {"_period": "uint256", "delayPeriod": "uint256"}, "info": ["PeggedTokenBridgeV2", "setDelayPeriod", "DelayPeriodUpdated", ["_period--variables"]], "related_expression": ["delayPeriod=_period"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"amount": "uint256", "block.timestamp": "uint256", "delayedTransfers": "mapping(bytes32 => DelayedTransfer.delayedTransfer)", "id": "bytes32", "receiver": "address", "token": "address"}, "info": ["PeggedTokenBridgeV2", "_addDelayedTransfer", "DelayedTransferAdded", ["id--variables"]], "related_expression": ["delayedTransfers[id].timestamp==0", "delayedTransfers[id]=delayedTransfer({receiver:receiver,token:token,amount:amount,timestamp:block.timestamp})"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"block.timestamp": "uint256", "delayPeriod": "uint256", "delayedTransfers": "mapping(bytes32 => DelayedTransfer.delayedTransfer)", "id": "bytes32", "transfer": "DelayedTransfer.delayedTransfer"}, "info": ["PeggedTokenBridgeV2", "_executeDelayedTransfer", "DelayedTransferExecuted", ["id--variables", "transfer_element--variables", "transfer_element--variables", "transfer_element--variables"]], "related_expression": ["transfer=delayedTransfers[id]", "transfer.timestamp>0", "block.timestamp>transfer.timestamp+delayPeriod", "deletedelayedTransfers[id]"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition", "Expression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["PeggedTokenBridgeV2", "_addGovernor", "GovernorAdded", ["_account--variables"]], "related_expression": ["!isGovernor(_account)", "governors[_account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["PeggedTokenBridgeV2", "_removeGovernor", "GovernorRemoved", ["_account--variables"]], "related_expression": ["isGovernor(_account)", "governors[_account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["PeggedTokenBridgeV2", "_transferOwnership", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernor"], "vars": {"_length": "uint256", "epochLength": "uint256"}, "info": ["PeggedTokenBridgeV2", "setEpochLength", "EpochLengthUpdated", ["_length--variables"]], "related_expression": ["epochLength=_length"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_caps": "uint256[]", "_tokens": "address[]", "i": "uint256", "epochVolumeCaps": "mapping(address => uint256)"}, "info": ["PeggedTokenBridgeV2", "setEpochVolumeCaps", "EpochVolumeUpdated", ["_tokens_element--variables", "_caps_element--variables"]], "related_expression": ["_tokens.length==_caps.length", "i=0", "i<_tokens.length", "epochVolumeCaps[_tokens[i]]=_caps[i]", "i++", "epochVolumeCaps[_tokens[i]]=_caps[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Expression", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_caps": "uint256[]", "_tokens": "address[]", "i": "uint256", "epochVolumeCaps": "mapping(address => uint256)"}, "info": ["PeggedTokenBridgeV2", "setEpochVolumeCaps", "EpochVolumeUpdated", ["_tokens_element--variables", "_caps_element--variables"]], "related_expression": ["_tokens.length==_caps.length", "i=0", "i<_tokens.length", "epochVolumeCaps[_tokens[i]]=_caps[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"account": "address", "pausers": "mapping(address => bool)"}, "info": ["PeggedTokenBridgeV2", "_addPauser", "PauserAdded", ["account--variables"]], "related_expression": ["!isPauser(account)", "pausers[account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"account": "address", "pausers": "mapping(address => bool)"}, "info": ["PeggedTokenBridgeV2", "_removePauser", "PauserRemoved", ["account--variables"]], "related_expression": ["isPauser(account)", "pausers[account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_paused": "bool"}, "info": ["PeggedTokenBridgeV2", "_pause", "Paused", ["TMP_211--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["whenPaused"], "vars": {"_paused": "bool"}, "info": ["PeggedTokenBridgeV2", "_unpause", "Unpaused", ["TMP_214--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "block.chainid": "uint256", "delayThreshold": "uint256", "delayThresholds": "mapping(address => uint256)", "domain": "bytes32", "mintId": "bytes32", "records": "mapping(bytes32 => bool)", "request": "PbPegged.Mint", "sigsVerifier": "ISigsVerifier", "supplies": "mapping(address => uint256)", "this": "address"}, "info": ["PeggedTokenBridgeV2", "mint", "Mint", ["mintId--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables"]], "related_expression": ["sigsVerifier.verifySigs(abi.encodePacked(domain,_request),_sigs,_signers,_powers)", "request=PbPegged.decMint(_request)", "mintId=keccak256(bytes)(abi.encodePacked(request.account,request.token,request.amount,request.depositor,request.refChainId,request.refId,address(this)))", "records[mintId]==false", "records[mintId]=true", "_updateVolume(request.token,request.amount)", "delayThreshold=delayThresholds[request.token]", "delayThreshold>0&&request.amount>delayThreshold", "_addDelayedTransfer(mintId,request.account,request.token,request.amount)", "supplies[request.token]+=request.amount"], "related_expression_type": ["CallExpression", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression", "AssignmentOperation_+="]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "block.chainid": "uint256", "delayThreshold": "uint256", "delayThresholds": "mapping(address => uint256)", "domain": "bytes32", "mintId": "bytes32", "records": "mapping(bytes32 => bool)", "request": "PbPegged.Mint", "sigsVerifier": "ISigsVerifier", "supplies": "mapping(address => uint256)", "this": "address"}, "info": ["PeggedTokenBridgeV2", "mint", "Mint", ["mintId--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables"]], "related_expression": ["sigsVerifier.verifySigs(abi.encodePacked(domain,_request),_sigs,_signers,_powers)", "request=PbPegged.decMint(_request)", "mintId=keccak256(bytes)(abi.encodePacked(request.account,request.token,request.amount,request.depositor,request.refChainId,request.refId,address(this)))", "records[mintId]==false", "records[mintId]=true", "_updateVolume(request.token,request.amount)", "delayThreshold=delayThresholds[request.token]", "not(delayThreshold>0&&request.amount>delayThreshold)", "IPeggedToken(request.token).mint(request.account,request.amount)", "supplies[request.token]+=request.amount"], "related_expression_type": ["CallExpression", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression", "AssignmentOperation_+="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_amount": "uint256", "_nonce": "uint64", "_toAccount": "address", "_toChainId": "uint64", "_token": "address", "block.chainid": "uint256", "burnId": "bytes32", "maxBurn": "mapping(address => uint256)", "minBurn": "mapping(address => uint256)", "msg.sender": "address", "records": "mapping(bytes32 => bool)", "supplies": "mapping(address => uint256)", "this": "address"}, "info": ["PeggedTokenBridgeV2", "_burn", "Burn", ["burnId--variables", "_token--variables", "msg.sender--variables", "_amount--variables", "_toChainId--variables", "_toAccount--variables", "_nonce--variables"]], "related_expression": ["_amount>minBurn[_token]", "maxBurn[_token]==0||_amount<=maxBurn[_token]", "supplies[_token]-=_amount", "burnId=keccak256(bytes)(abi.encodePacked(msg.sender,_token,_amount,_toChainId,_toAccount,_nonce,uint64(block.chainid),address(this)))", "records[burnId]==false", "records[burnId]=true"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_-=", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_amounts": "uint256[]", "_tokens": "address[]", "i": "uint256", "minBurn": "mapping(address => uint256)"}, "info": ["PeggedTokenBridgeV2", "setMinBurn", "MinBurnUpdated", ["_tokens_element--variables", "_amounts_element--variables"]], "related_expression": ["_tokens.length==_amounts.length", "i=0", "i++", "i<_tokens.length", "minBurn[_tokens[i]]=_amounts[i]", "minBurn[_tokens[i]]=_amounts[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_amounts": "uint256[]", "_tokens": "address[]", "i": "uint256", "minBurn": "mapping(address => uint256)"}, "info": ["PeggedTokenBridgeV2", "setMinBurn", "MinBurnUpdated", ["_tokens_element--variables", "_amounts_element--variables"]], "related_expression": ["_tokens.length==_amounts.length", "i=0", "i<_tokens.length", "minBurn[_tokens[i]]=_amounts[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_amounts": "uint256[]", "_tokens": "address[]", "i": "uint256", "maxBurn": "mapping(address => uint256)"}, "info": ["PeggedTokenBridgeV2", "setMaxBurn", "MaxBurnUpdated", ["_tokens_element--variables", "_amounts_element--variables"]], "related_expression": ["_tokens.length==_amounts.length", "i=0", "i<_tokens.length", "maxBurn[_tokens[i]]=_amounts[i]", "i++", "maxBurn[_tokens[i]]=_amounts[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Expression", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_amounts": "uint256[]", "_tokens": "address[]", "i": "uint256", "maxBurn": "mapping(address => uint256)"}, "info": ["PeggedTokenBridgeV2", "setMaxBurn", "MaxBurnUpdated", ["_tokens_element--variables", "_amounts_element--variables"]], "related_expression": ["_tokens.length==_amounts.length", "i=0", "i<_tokens.length", "maxBurn[_tokens[i]]=_amounts[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyOwner"], "vars": {"_supply": "uint256", "_token": "address", "supplies": "mapping(address => uint256)"}, "info": ["PeggedTokenBridgeV2", "setSupply", "SupplyUpdated", ["_token--variables", "_supply--variables"]], "related_expression": ["supplies[_token]=_supply"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyOwner"], "vars": {"_delta": "uint256", "_token": "address", "supplies": "mapping(address => uint256)"}, "info": ["PeggedTokenBridgeV2", "increaseSupply", "SupplyUpdated", ["_token--variables", "supplies_element--variables"]], "related_expression": ["supplies[_token]+=_delta"], "related_expression_type": ["AssignmentOperation_+="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyOwner"], "vars": {"_delta": "uint256", "_token": "address", "supplies": "mapping(address => uint256)"}, "info": ["PeggedTokenBridgeV2", "decreaseSupply", "SupplyUpdated", ["_token--variables", "supplies_element--variables"]], "related_expression": ["supplies[_token]-=_delta"], "related_expression_type": ["AssignmentOperation_-="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["DelayedTransfer", "_addGovernor", "GovernorAdded", ["_account--variables"]], "related_expression": ["!isGovernor(_account)", "governors[_account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["DelayedTransfer", "_removeGovernor", "GovernorRemoved", ["_account--variables"]], "related_expression": ["isGovernor(_account)", "governors[_account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["DelayedTransfer", "_transferOwnership", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_thresholds": "uint256[]", "_tokens": "address[]", "i": "uint256", "delayThresholds": "mapping(address => uint256)"}, "info": ["DelayedTransfer", "setDelayThresholds", "DelayThresholdUpdated", ["_tokens_element--variables", "_thresholds_element--variables"]], "related_expression": ["_tokens.length==_thresholds.length", "i=0", "delayThresholds[_tokens[i]]=_thresholds[i]", "i++", "i<_tokens.length", "delayThresholds[_tokens[i]]=_thresholds[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_thresholds": "uint256[]", "_tokens": "address[]", "i": "uint256", "delayThresholds": "mapping(address => uint256)"}, "info": ["DelayedTransfer", "setDelayThresholds", "DelayThresholdUpdated", ["_tokens_element--variables", "_thresholds_element--variables"]], "related_expression": ["_tokens.length==_thresholds.length", "i=0", "i<_tokens.length", "delayThresholds[_tokens[i]]=_thresholds[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernor"], "vars": {"_period": "uint256", "delayPeriod": "uint256"}, "info": ["DelayedTransfer", "setDelayPeriod", "DelayPeriodUpdated", ["_period--variables"]], "related_expression": ["delayPeriod=_period"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"amount": "uint256", "block.timestamp": "uint256", "delayedTransfers": "mapping(bytes32 => DelayedTransfer.delayedTransfer)", "id": "bytes32", "receiver": "address", "token": "address"}, "info": ["DelayedTransfer", "_addDelayedTransfer", "DelayedTransferAdded", ["id--variables"]], "related_expression": ["delayedTransfers[id].timestamp==0", "delayedTransfers[id]=delayedTransfer({receiver:receiver,token:token,amount:amount,timestamp:block.timestamp})"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"block.timestamp": "uint256", "delayPeriod": "uint256", "delayedTransfers": "mapping(bytes32 => DelayedTransfer.delayedTransfer)", "id": "bytes32", "transfer": "DelayedTransfer.delayedTransfer"}, "info": ["DelayedTransfer", "_executeDelayedTransfer", "DelayedTransferExecuted", ["id--variables", "transfer_element--variables", "transfer_element--variables", "transfer_element--variables"]], "related_expression": ["transfer=delayedTransfers[id]", "transfer.timestamp>0", "block.timestamp>transfer.timestamp+delayPeriod", "deletedelayedTransfers[id]"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition", "Expression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["Governor", "_transferOwnership", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["Governor", "_addGovernor", "GovernorAdded", ["_account--variables"]], "related_expression": ["!isGovernor(_account)", "governors[_account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["Governor", "_removeGovernor", "GovernorRemoved", ["_account--variables"]], "related_expression": ["isGovernor(_account)", "governors[_account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_paused": "bool"}, "info": ["Pauser", "_pause", "Paused", ["TMP_371--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["whenPaused"], "vars": {"_paused": "bool"}, "info": ["Pauser", "_unpause", "Unpaused", ["TMP_374--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["Pauser", "_transferOwnership", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"account": "address", "pausers": "mapping(address => bool)"}, "info": ["Pauser", "_addPauser", "PauserAdded", ["account--variables"]], "related_expression": ["!isPauser(account)", "pausers[account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"account": "address", "pausers": "mapping(address => bool)"}, "info": ["Pauser", "_removePauser", "PauserRemoved", ["account--variables"]], "related_expression": ["isPauser(account)", "pausers[account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["VolumeControl", "_addGovernor", "GovernorAdded", ["_account--variables"]], "related_expression": ["!isGovernor(_account)", "governors[_account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["VolumeControl", "_removeGovernor", "GovernorRemoved", ["_account--variables"]], "related_expression": ["isGovernor(_account)", "governors[_account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["VolumeControl", "_transferOwnership", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernor"], "vars": {"_length": "uint256", "epochLength": "uint256"}, "info": ["VolumeControl", "setEpochLength", "EpochLengthUpdated", ["_length--variables"]], "related_expression": ["epochLength=_length"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_caps": "uint256[]", "_tokens": "address[]", "i": "uint256", "epochVolumeCaps": "mapping(address => uint256)"}, "info": ["VolumeControl", "setEpochVolumeCaps", "EpochVolumeUpdated", ["_tokens_element--variables", "_caps_element--variables"]], "related_expression": ["_tokens.length==_caps.length", "i=0", "i<_tokens.length", "epochVolumeCaps[_tokens[i]]=_caps[i]", "i++", "epochVolumeCaps[_tokens[i]]=_caps[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Expression", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_caps": "uint256[]", "_tokens": "address[]", "i": "uint256", "epochVolumeCaps": "mapping(address => uint256)"}, "info": ["VolumeControl", "setEpochVolumeCaps", "EpochVolumeUpdated", ["_tokens_element--variables", "_caps_element--variables"]], "related_expression": ["_tokens.length==_caps.length", "i=0", "i<_tokens.length", "epochVolumeCaps[_tokens[i]]=_caps[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["Ownable", "_transferOwnership", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_paused": "bool"}, "info": ["Pausable", "_pause", "Paused", ["TMP_476--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["whenPaused"], "vars": {"_paused": "bool"}, "info": ["Pausable", "_unpause", "Unpaused", ["TMP_479--variables"]], "related_expression": [], "related_expression_type": []}]