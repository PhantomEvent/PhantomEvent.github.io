[{"isloop": false, "loop_info": [], "modifier": [], "vars": {"amount": "uint192", "amountUSD": "uint256", "block.number": "uint256", "blockStamp": "uint256", "bucketIdx": "int256", "buckets": "mapping(int256 => uint256)", "ceilUSD": "uint256", "differenceBlocks": "uint256", "maxWithdrawals": "uint256", "periods": "uint256", "rateBlocks": "uint256", "rateWithdrawals": "uint256", "tokenAddress": "address", "withdrawals": "uint256"}, "info": ["Hermez", "_processInstantWithdrawal", "UpdateBucketWithdraw", ["TMP_17--variables", "blockStamp--variables", "withdrawals--variables"]], "related_expression": ["not(amountUSD==0)", "bucketIdx=_findBucketIdx(amountUSD)", "not(bucketIdx==-1)", "(ceilUSD,blockStamp,withdrawals,rateBlocks,rateWithdrawals,maxWithdrawals)=unpackBucket(buckets[bucketIdx])", "differenceBlocks=block.number.sub(blockStamp)", "periods=differenceBlocks.div(rateBlocks)", "withdrawals=withdrawals.add(periods.mul(rateWithdrawals))", "withdrawals>=maxWithdrawals", "withdrawals=maxWithdrawals", "blockStamp=block.number", "not(withdrawals==0)", "withdrawals=withdrawals.sub(1)", "buckets[bucketIdx]=packBucket(ceilUSD,blockStamp,withdrawals,rateBlocks,rateWithdrawals,maxWithdrawals)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"amount": "uint192", "amountUSD": "uint256", "block.number": "uint256", "blockStamp": "uint256", "bucketIdx": "int256", "buckets": "mapping(int256 => uint256)", "ceilUSD": "uint256", "differenceBlocks": "uint256", "maxWithdrawals": "uint256", "periods": "uint256", "rateBlocks": "uint256", "rateWithdrawals": "uint256", "tokenAddress": "address", "withdrawals": "uint256"}, "info": ["Hermez", "_processInstantWithdrawal", "UpdateBucketWithdraw", ["TMP_17--variables", "blockStamp--variables", "withdrawals--variables"]], "related_expression": ["not(amountUSD==0)", "bucketIdx=_findBucketIdx(amountUSD)", "not(bucketIdx==-1)", "(ceilUSD,blockStamp,withdrawals,rateBlocks,rateWithdrawals,maxWithdrawals)=unpackBucket(buckets[bucketIdx])", "differenceBlocks=block.number.sub(blockStamp)", "periods=differenceBlocks.div(rateBlocks)", "withdrawals=withdrawals.add(periods.mul(rateWithdrawals))", "not(withdrawals>=maxWithdrawals)", "blockStamp=blockStamp.add(periods.mul(rateBlocks))", "not(withdrawals==0)", "withdrawals=withdrawals.sub(1)", "buckets[bucketIdx]=packBucket(ceilUSD,blockStamp,withdrawals,rateBlocks,rateWithdrawals,maxWithdrawals)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [4, 9], "modifier": ["onlyGovernance"], "vars": {"_MAX_BUCKETS": "uint256", "block.number": "uint256", "ceilUSD": "uint256", "i": "uint256", "maxWithdrawals": "uint256", "n": "uint256", "newBuckets": "uint256[]", "rateBlocks": "uint256", "rateWithdrawals": "uint256", "withdrawals": "uint256", "buckets": "mapping(int256 => uint256)", "nBuckets": "uint256"}, "info": ["Hermez", "updateBucketsParameters", "UpdateBucketsParameters", ["newBuckets--variables"]], "related_expression": ["n=newBuckets.length", "n<=_MAX_BUCKETS", "nBuckets=n", "i=0", "(ceilUSD,withdrawals,rateBlocks,rateWithdrawals,maxWithdrawals)=unpackBucket(newBuckets[i])", "withdrawals<=maxWithdrawals", "rateBlocks>0", "buckets[int256(i)]=packBucket(ceilUSD,block.number,withdrawals,rateBlocks,rateWithdrawals,maxWithdrawals)", "i++", "i<n"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "Condition", "AssignmentOperation_=", "Expression", "Condition"]}, {"isloop": true, "loop_info": [4, 4], "modifier": ["onlyGovernance"], "vars": {"_MAX_BUCKETS": "uint256", "block.number": "uint256", "ceilUSD": "uint256", "i": "uint256", "maxWithdrawals": "uint256", "n": "uint256", "newBuckets": "uint256[]", "rateBlocks": "uint256", "rateWithdrawals": "uint256", "withdrawals": "uint256", "buckets": "mapping(int256 => uint256)", "nBuckets": "uint256"}, "info": ["Hermez", "updateBucketsParameters", "UpdateBucketsParameters", ["newBuckets--variables"]], "related_expression": ["n=newBuckets.length", "n<=_MAX_BUCKETS", "nBuckets=n", "i=0", "not(i<n)"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"]}, {"isloop": true, "loop_info": [2, 4], "modifier": ["onlyGovernance"], "vars": {"addressArray": "address[]", "i": "uint256", "valueArray": "uint64[]", "tokenExchange": "mapping(address => uint64)"}, "info": ["Hermez", "updateTokenExchange", "UpdateTokenExchange", ["addressArray--variables", "valueArray--variables"]], "related_expression": ["addressArray.length==valueArray.length", "i=0", "i<addressArray.length", "tokenExchange[addressArray[i]]=valueArray[i]", "i++"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Expression"]}, {"isloop": true, "loop_info": [2, 2], "modifier": ["onlyGovernance"], "vars": {"addressArray": "address[]", "i": "uint256", "valueArray": "uint64[]", "tokenExchange": "mapping(address => uint64)"}, "info": ["Hermez", "updateTokenExchange", "UpdateTokenExchange", ["addressArray--variables", "valueArray--variables"]], "related_expression": ["addressArray.length==valueArray.length", "i=0", "not(i<addressArray.length)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernance"], "vars": {"_MAX_WITHDRAWAL_DELAY": "uint256", "newWithdrawalDelay": "uint64", "withdrawalDelay": "uint64"}, "info": ["Hermez", "updateWithdrawalDelay", "UpdateWithdrawalDelay", ["newWithdrawalDelay--variables"]], "related_expression": ["newWithdrawalDelay<=_MAX_WITHDRAWAL_DELAY", "withdrawalDelay=newWithdrawalDelay"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernance"], "vars": {"withdrawDelayerContract": "IWithdrawalDelayer", "withdrawalDelay": "uint64", "buckets": "mapping(int256 => uint256)", "nBuckets": "uint256"}, "info": ["Hermez", "safeMode", "SafeMode", []], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"msg.sender": "address", "rollupVerifiers": "Hermez.VerifierRollup[]", "withdrawVerifier": "VerifierWithdrawInterface"}, "info": ["Hermez", "updateVerifiers", "hermezV2", []], "related_expression": ["msg.sender==address(0xb6D3f1056c015962fA66A4020E50522B58292D1E)", "rollupVerifiers[0].maxTx==344"], "related_expression_type": ["Condition", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": ["initializer"], "vars": {"_RESERVED_IDX": "uint48", "_feeAddToken": "uint256", "_forgeL1L2BatchTimeout": "uint8", "_hermezAuctionContract": "address", "_hermezGovernanceAddress": "address", "_poseidon2Elements": "address", "_poseidon3Elements": "address", "_poseidon4Elements": "address", "_tokenHEZ": "address", "_verifiers": "address[]", "_verifiersParams": "uint256[]", "_withdrawDelayerContract": "address", "_withdrawVerifier": "address", "_withdrawalDelay": "uint64", "tokenList": "address[]", "feeAddToken": "uint256", "forgeL1L2BatchTimeout": "uint8", "hermezAuctionContract": "IHermezAuctionProtocol", "lastIdx": "uint48", "nextL1FillingQueue": "uint32", "tokenHEZ": "address", "withdrawVerifier": "VerifierWithdrawInterface"}, "info": ["Hermez", "initializeHermez", "InitializeHermezEvent", ["_forgeL1L2BatchTimeout--variables", "_feeAddToken--variables", "_withdrawalDelay--variables"]], "related_expression": ["_hermezAuctionContract!=address(0)&&_withdrawDelayerContract!=address(0)", "forgeL1L2BatchTimeout=_forgeL1L2BatchTimeout", "feeAddToken=_feeAddToken", "_initializeWithdraw(_hermezGovernanceAddress,_withdrawalDelay,_withdrawDelayerContract)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"block.number": "uint256", "forgeL1L2BatchTimeout": "uint8", "hermezAuctionContract": "IHermezAuctionProtocol", "input": "uint256", "l1Batch": "bool", "l1L2TxsData": "bytes", "l1UserTxsLen": "uint16", "lastForgedBatch": "uint32", "lastL1L2Batch": "uint64", "msg.sender": "address", "newExitRoot": "uint256", "newLastIdx": "uint48", "newStRoot": "uint256", "proofA": "uint256[2]", "proofB": "uint256[2][2]", "proofC": "uint256[2]", "rollupVerifiers": "Hermez.VerifierRollup[]", "tx.origin": "address", "verifierIdx": "uint8", "exitRootsMap": "mapping(uint32 => uint256)", "l1L2TxsDataHashMap": "mapping(uint32 => bytes32)", "lastIdx": "uint48", "stateRootMap": "mapping(uint32 => uint256)"}, "info": ["Hermez", "forgeBatch", "ForgeBatch", ["lastForgedBatch--variables", "l1UserTxsLen--variables"]], "related_expression": ["msg.sender==tx.origin", "hermezAuctionContract.canForge(msg.sender,block.number)==true", "!l1Batch", "block.number<(lastL1L2Batch+forgeL1L2BatchTimeout)", "rollupVerifiers[verifierIdx].verifierInterface.verifyProof(proofA,proofB,proofC,(input))", "lastForgedBatch++", "stateRootMap[lastForgedBatch]=newStRoot", "exitRootsMap[lastForgedBatch]=newExitRoot", "l1L2TxsDataHashMap[lastForgedBatch]=sha256(bytes)(l1L2TxsData)", "l1Batch", "l1UserTxsLen=_clearQueue()"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Expression", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"block.number": "uint256", "forgeL1L2BatchTimeout": "uint8", "hermezAuctionContract": "IHermezAuctionProtocol", "input": "uint256", "l1Batch": "bool", "l1L2TxsData": "bytes", "l1UserTxsLen": "uint16", "lastForgedBatch": "uint32", "lastL1L2Batch": "uint64", "msg.sender": "address", "newExitRoot": "uint256", "newLastIdx": "uint48", "newStRoot": "uint256", "proofA": "uint256[2]", "proofB": "uint256[2][2]", "proofC": "uint256[2]", "rollupVerifiers": "Hermez.VerifierRollup[]", "tx.origin": "address", "verifierIdx": "uint8", "exitRootsMap": "mapping(uint32 => uint256)", "l1L2TxsDataHashMap": "mapping(uint32 => bytes32)", "lastIdx": "uint48", "stateRootMap": "mapping(uint32 => uint256)"}, "info": ["Hermez", "forgeBatch", "ForgeBatch", ["lastForgedBatch--variables", "l1UserTxsLen--variables"]], "related_expression": ["msg.sender==tx.origin", "hermezAuctionContract.canForge(msg.sender,block.number)==true", "!l1Batch", "block.number<(lastL1L2Batch+forgeL1L2BatchTimeout)", "rollupVerifiers[verifierIdx].verifierInterface.verifyProof(proofA,proofB,proofC,(input))", "lastForgedBatch++", "stateRootMap[lastForgedBatch]=newStRoot", "exitRootsMap[lastForgedBatch]=newExitRoot", "l1L2TxsDataHashMap[lastForgedBatch]=sha256(bytes)(l1L2TxsData)", "not(l1Batch)"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Expression", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"block.number": "uint256", "forgeL1L2BatchTimeout": "uint8", "hermezAuctionContract": "IHermezAuctionProtocol", "input": "uint256", "l1Batch": "bool", "l1L2TxsData": "bytes", "l1UserTxsLen": "uint16", "lastForgedBatch": "uint32", "lastL1L2Batch": "uint64", "msg.sender": "address", "newExitRoot": "uint256", "newLastIdx": "uint48", "newStRoot": "uint256", "proofA": "uint256[2]", "proofB": "uint256[2][2]", "proofC": "uint256[2]", "rollupVerifiers": "Hermez.VerifierRollup[]", "tx.origin": "address", "verifierIdx": "uint8", "exitRootsMap": "mapping(uint32 => uint256)", "l1L2TxsDataHashMap": "mapping(uint32 => bytes32)", "lastIdx": "uint48", "stateRootMap": "mapping(uint32 => uint256)"}, "info": ["Hermez", "forgeBatch", "ForgeBatch", ["lastForgedBatch--variables", "l1UserTxsLen--variables"]], "related_expression": ["msg.sender==tx.origin", "hermezAuctionContract.canForge(msg.sender,block.number)==true", "not(!l1Batch)", "rollupVerifiers[verifierIdx].verifierInterface.verifyProof(proofA,proofB,proofC,(input))", "lastForgedBatch++", "stateRootMap[lastForgedBatch]=newStRoot", "exitRootsMap[lastForgedBatch]=newExitRoot", "l1L2TxsDataHashMap[lastForgedBatch]=sha256(bytes)(l1L2TxsData)", "l1Batch", "l1UserTxsLen=_clearQueue()"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Expression", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"block.number": "uint256", "forgeL1L2BatchTimeout": "uint8", "hermezAuctionContract": "IHermezAuctionProtocol", "input": "uint256", "l1Batch": "bool", "l1L2TxsData": "bytes", "l1UserTxsLen": "uint16", "lastForgedBatch": "uint32", "lastL1L2Batch": "uint64", "msg.sender": "address", "newExitRoot": "uint256", "newLastIdx": "uint48", "newStRoot": "uint256", "proofA": "uint256[2]", "proofB": "uint256[2][2]", "proofC": "uint256[2]", "rollupVerifiers": "Hermez.VerifierRollup[]", "tx.origin": "address", "verifierIdx": "uint8", "exitRootsMap": "mapping(uint32 => uint256)", "l1L2TxsDataHashMap": "mapping(uint32 => bytes32)", "lastIdx": "uint48", "stateRootMap": "mapping(uint32 => uint256)"}, "info": ["Hermez", "forgeBatch", "ForgeBatch", ["lastForgedBatch--variables", "l1UserTxsLen--variables"]], "related_expression": ["msg.sender==tx.origin", "hermezAuctionContract.canForge(msg.sender,block.number)==true", "not(!l1Batch)", "rollupVerifiers[verifierIdx].verifierInterface.verifyProof(proofA,proofB,proofC,(input))", "lastForgedBatch++", "stateRootMap[lastForgedBatch]=newStRoot", "exitRootsMap[lastForgedBatch]=newExitRoot", "l1L2TxsDataHashMap[lastForgedBatch]=sha256(bytes)(l1L2TxsData)", "not(l1Batch)"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Expression", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"amount": "uint192", "arrayState": "uint256[4]", "babyPubKey": "uint256", "exitNullifierMap": "mapping(uint32 => mapping(uint48 => bool))", "exitRoot": "uint256", "exitRootsMap": "mapping(uint32 => uint256)", "idx": "uint48", "instantWithdraw": "bool", "msg.sender": "address", "numExitRoot": "uint32", "siblings": "uint256[]", "stateHash": "uint256", "tokenID": "uint32", "tokenList": "address[]"}, "info": ["Hermez", "withdrawMerkleProof", "WithdrawEvent", ["idx--variables", "numExitRoot--variables", "instantWithdraw--variables"]], "related_expression": ["instantWithdraw", "_processInstantWithdrawal(tokenList[tokenID],amount)", "exitRoot=exitRootsMap[numExitRoot]", "exitNullifierMap[numExitRoot][idx]==false", "_smtVerifier(exitRoot,siblings,idx,stateHash)==true", "exitNullifierMap[numExitRoot][idx]=true", "_withdrawFunds(amount,tokenID,instantWithdraw)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "Condition", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"amount": "uint192", "arrayState": "uint256[4]", "babyPubKey": "uint256", "exitNullifierMap": "mapping(uint32 => mapping(uint48 => bool))", "exitRoot": "uint256", "exitRootsMap": "mapping(uint32 => uint256)", "idx": "uint48", "instantWithdraw": "bool", "msg.sender": "address", "numExitRoot": "uint32", "siblings": "uint256[]", "stateHash": "uint256", "tokenID": "uint32", "tokenList": "address[]"}, "info": ["Hermez", "withdrawMerkleProof", "WithdrawEvent", ["idx--variables", "numExitRoot--variables", "instantWithdraw--variables"]], "related_expression": ["not(instantWithdraw)", "exitRoot=exitRootsMap[numExitRoot]", "exitNullifierMap[numExitRoot][idx]==false", "_smtVerifier(exitRoot,siblings,idx,stateHash)==true", "exitNullifierMap[numExitRoot][idx]=true", "_withdrawFunds(amount,tokenID,instantWithdraw)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_RFIELD": "uint256", "amount": "uint192", "exitNullifierMap": "mapping(uint32 => mapping(uint48 => bool))", "exitRoot": "uint256", "exitRootsMap": "mapping(uint32 => uint256)", "idx": "uint48", "input": "uint256", "instantWithdraw": "bool", "msg.sender": "address", "numExitRoot": "uint32", "proofA": "uint256[2]", "proofB": "uint256[2][2]", "proofC": "uint256[2]", "tokenID": "uint32", "tokenList": "address[]", "withdrawVerifier": "VerifierWithdrawInterface"}, "info": ["Hermez", "withdrawCircuit", "WithdrawEvent", ["idx--variables", "numExitRoot--variables", "instantWithdraw--variables"]], "related_expression": ["instantWithdraw", "_processInstantWithdrawal(tokenList[tokenID],amount)", "exitNullifierMap[numExitRoot][idx]==false", "exitRoot=exitRootsMap[numExitRoot]", "input=uint256(sha256(bytes)(abi.encodePacked(exitRoot,msg.sender,tokenID,amount,idx)))%_RFIELD", "withdrawVerifier.verifyProof(proofA,proofB,proofC,(input))==true", "exitNullifierMap[numExitRoot][idx]=true", "_withdrawFunds(amount,tokenID,instantWithdraw)"], "related_expression_type": ["Condition", "Condition", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_RFIELD": "uint256", "amount": "uint192", "exitNullifierMap": "mapping(uint32 => mapping(uint48 => bool))", "exitRoot": "uint256", "exitRootsMap": "mapping(uint32 => uint256)", "idx": "uint48", "input": "uint256", "instantWithdraw": "bool", "msg.sender": "address", "numExitRoot": "uint32", "proofA": "uint256[2]", "proofB": "uint256[2][2]", "proofC": "uint256[2]", "tokenID": "uint32", "tokenList": "address[]", "withdrawVerifier": "VerifierWithdrawInterface"}, "info": ["Hermez", "withdrawCircuit", "WithdrawEvent", ["idx--variables", "numExitRoot--variables", "instantWithdraw--variables"]], "related_expression": ["not(instantWithdraw)", "exitNullifierMap[numExitRoot][idx]==false", "exitRoot=exitRootsMap[numExitRoot]", "input=uint256(sha256(bytes)(abi.encodePacked(exitRoot,msg.sender,tokenID,amount,idx)))%_RFIELD", "withdrawVerifier.verifyProof(proofA,proofB,proofC,(input))==true", "exitNullifierMap[numExitRoot][idx]=true", "_withdrawFunds(amount,tokenID,instantWithdraw)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernance"], "vars": {"ABSOLUTE_MAX_L1L2BATCHTIMEOUT": "uint8", "newForgeL1L2BatchTimeout": "uint8", "forgeL1L2BatchTimeout": "uint8"}, "info": ["Hermez", "updateForgeL1L2BatchTimeout", "UpdateForgeL1L2BatchTimeout", ["newForgeL1L2BatchTimeout--variables"]], "related_expression": ["newForgeL1L2BatchTimeout<=ABSOLUTE_MAX_L1L2BATCHTIMEOUT", "forgeL1L2BatchTimeout=newForgeL1L2BatchTimeout"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernance"], "vars": {"newFeeAddToken": "uint256", "feeAddToken": "uint256"}, "info": ["Hermez", "updateFeeAddToken", "UpdateFeeAddToken", ["newFeeAddToken--variables"]], "related_expression": ["feeAddToken=newFeeAddToken"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_LIMIT_TOKENS": "uint256", "currentTokens": "uint256", "feeAddToken": "uint256", "hermezGovernanceAddress": "address", "msg.sender": "address", "permit": "bytes", "tokenAddress": "address", "tokenHEZ": "address", "tokenList": "address[]", "tokenMap": "mapping(address => uint256)"}, "info": ["Hermez", "addToken", "AddToken", ["tokenAddress--variables", "TMP_393--variables"]], "related_expression": ["IERC20(tokenAddress).totalSupply()>0", "currentTokens=tokenList.length", "currentTokens<_LIMIT_TOKENS", "tokenAddress!=address(0)", "tokenMap[tokenAddress]==0", "msg.sender!=hermezGovernanceAddress", "permit.length!=0", "tokenList.push(tokenAddress)", "tokenMap[tokenAddress]=currentTokens"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "Condition", "Condition", "Condition", "Condition", "CallExpression", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_LIMIT_TOKENS": "uint256", "currentTokens": "uint256", "feeAddToken": "uint256", "hermezGovernanceAddress": "address", "msg.sender": "address", "permit": "bytes", "tokenAddress": "address", "tokenHEZ": "address", "tokenList": "address[]", "tokenMap": "mapping(address => uint256)"}, "info": ["Hermez", "addToken", "AddToken", ["tokenAddress--variables", "TMP_393--variables"]], "related_expression": ["IERC20(tokenAddress).totalSupply()>0", "currentTokens=tokenList.length", "currentTokens<_LIMIT_TOKENS", "tokenAddress!=address(0)", "tokenMap[tokenAddress]==0", "msg.sender!=hermezGovernanceAddress", "not(permit.length!=0)", "tokenList.push(tokenAddress)", "tokenMap[tokenAddress]=currentTokens"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "Condition", "Condition", "Condition", "Condition", "CallExpression", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_LIMIT_TOKENS": "uint256", "currentTokens": "uint256", "feeAddToken": "uint256", "hermezGovernanceAddress": "address", "msg.sender": "address", "permit": "bytes", "tokenAddress": "address", "tokenHEZ": "address", "tokenList": "address[]", "tokenMap": "mapping(address => uint256)"}, "info": ["Hermez", "addToken", "AddToken", ["tokenAddress--variables", "TMP_393--variables"]], "related_expression": ["IERC20(tokenAddress).totalSupply()>0", "currentTokens=tokenList.length", "currentTokens<_LIMIT_TOKENS", "tokenAddress!=address(0)", "tokenMap[tokenAddress]==0", "not(msg.sender!=hermezGovernanceAddress)", "tokenList.push(tokenAddress)", "tokenMap[tokenAddress]=currentTokens"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "Condition", "Condition", "Condition", "CallExpression", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_L1_USER_TOTALBYTES": "uint256", "_MAX_L1_USER_TX": "uint256", "amountF": "uint40", "babyPubKey": "uint256", "currentPosition": "uint256", "ethAddress": "address", "fromIdx": "uint48", "l1Tx": "bytes", "loadAmountF": "uint40", "mapL1TxQueue": "mapping(uint32 => bytes)", "nextL1FillingQueue": "uint32", "toIdx": "uint48", "tokenID": "uint32"}, "info": ["Hermez", "_l1QueueAddTx", "L1UserTxEvent", ["nextL1FillingQueue--variables", "TMP_409--variables", "l1Tx--variables"]], "related_expression": ["l1Tx=abi.encodePacked(ethAddress,babyPubKey,fromIdx,loadAmountF,amountF,tokenID,toIdx)", "currentPosition=mapL1TxQueue[nextL1FillingQueue].length/_L1_USER_TOTALBYTES", "_concatStorage(mapL1TxQueue[nextL1FillingQueue],l1Tx)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"amount": "uint192", "amountUSD": "uint256", "block.number": "uint256", "blockStamp": "uint256", "bucketIdx": "int256", "buckets": "mapping(int256 => uint256)", "ceilUSD": "uint256", "differenceBlocks": "uint256", "maxWithdrawals": "uint256", "periods": "uint256", "rateBlocks": "uint256", "rateWithdrawals": "uint256", "tokenAddress": "address", "withdrawals": "uint256"}, "info": ["InstantWithdrawManager", "_processInstantWithdrawal", "UpdateBucketWithdraw", ["TMP_894--variables", "blockStamp--variables", "withdrawals--variables"]], "related_expression": ["not(amountUSD==0)", "bucketIdx=_findBucketIdx(amountUSD)", "not(bucketIdx==-1)", "(ceilUSD,blockStamp,withdrawals,rateBlocks,rateWithdrawals,maxWithdrawals)=unpackBucket(buckets[bucketIdx])", "differenceBlocks=block.number.sub(blockStamp)", "periods=differenceBlocks.div(rateBlocks)", "withdrawals=withdrawals.add(periods.mul(rateWithdrawals))", "withdrawals>=maxWithdrawals", "withdrawals=maxWithdrawals", "blockStamp=block.number", "not(withdrawals==0)", "withdrawals=withdrawals.sub(1)", "buckets[bucketIdx]=packBucket(ceilUSD,blockStamp,withdrawals,rateBlocks,rateWithdrawals,maxWithdrawals)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"amount": "uint192", "amountUSD": "uint256", "block.number": "uint256", "blockStamp": "uint256", "bucketIdx": "int256", "buckets": "mapping(int256 => uint256)", "ceilUSD": "uint256", "differenceBlocks": "uint256", "maxWithdrawals": "uint256", "periods": "uint256", "rateBlocks": "uint256", "rateWithdrawals": "uint256", "tokenAddress": "address", "withdrawals": "uint256"}, "info": ["InstantWithdrawManager", "_processInstantWithdrawal", "UpdateBucketWithdraw", ["TMP_894--variables", "blockStamp--variables", "withdrawals--variables"]], "related_expression": ["not(amountUSD==0)", "bucketIdx=_findBucketIdx(amountUSD)", "not(bucketIdx==-1)", "(ceilUSD,blockStamp,withdrawals,rateBlocks,rateWithdrawals,maxWithdrawals)=unpackBucket(buckets[bucketIdx])", "differenceBlocks=block.number.sub(blockStamp)", "periods=differenceBlocks.div(rateBlocks)", "withdrawals=withdrawals.add(periods.mul(rateWithdrawals))", "not(withdrawals>=maxWithdrawals)", "blockStamp=blockStamp.add(periods.mul(rateBlocks))", "not(withdrawals==0)", "withdrawals=withdrawals.sub(1)", "buckets[bucketIdx]=packBucket(ceilUSD,blockStamp,withdrawals,rateBlocks,rateWithdrawals,maxWithdrawals)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [4, 9], "modifier": ["onlyGovernance"], "vars": {"_MAX_BUCKETS": "uint256", "block.number": "uint256", "ceilUSD": "uint256", "i": "uint256", "maxWithdrawals": "uint256", "n": "uint256", "newBuckets": "uint256[]", "rateBlocks": "uint256", "rateWithdrawals": "uint256", "withdrawals": "uint256", "buckets": "mapping(int256 => uint256)", "nBuckets": "uint256"}, "info": ["InstantWithdrawManager", "updateBucketsParameters", "UpdateBucketsParameters", ["newBuckets--variables"]], "related_expression": ["n=newBuckets.length", "n<=_MAX_BUCKETS", "nBuckets=n", "i=0", "(ceilUSD,withdrawals,rateBlocks,rateWithdrawals,maxWithdrawals)=unpackBucket(newBuckets[i])", "withdrawals<=maxWithdrawals", "rateBlocks>0", "buckets[int256(i)]=packBucket(ceilUSD,block.number,withdrawals,rateBlocks,rateWithdrawals,maxWithdrawals)", "i++", "i<n"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "Condition", "AssignmentOperation_=", "Expression", "Condition"]}, {"isloop": true, "loop_info": [4, 4], "modifier": ["onlyGovernance"], "vars": {"_MAX_BUCKETS": "uint256", "block.number": "uint256", "ceilUSD": "uint256", "i": "uint256", "maxWithdrawals": "uint256", "n": "uint256", "newBuckets": "uint256[]", "rateBlocks": "uint256", "rateWithdrawals": "uint256", "withdrawals": "uint256", "buckets": "mapping(int256 => uint256)", "nBuckets": "uint256"}, "info": ["InstantWithdrawManager", "updateBucketsParameters", "UpdateBucketsParameters", ["newBuckets--variables"]], "related_expression": ["n=newBuckets.length", "n<=_MAX_BUCKETS", "nBuckets=n", "i=0", "not(i<n)"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"]}, {"isloop": true, "loop_info": [2, 4], "modifier": ["onlyGovernance"], "vars": {"addressArray": "address[]", "i": "uint256", "valueArray": "uint64[]", "tokenExchange": "mapping(address => uint64)"}, "info": ["InstantWithdrawManager", "updateTokenExchange", "UpdateTokenExchange", ["addressArray--variables", "valueArray--variables"]], "related_expression": ["addressArray.length==valueArray.length", "i=0", "tokenExchange[addressArray[i]]=valueArray[i]", "i++", "i<addressArray.length"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Expression", "Condition"]}, {"isloop": true, "loop_info": [2, 2], "modifier": ["onlyGovernance"], "vars": {"addressArray": "address[]", "i": "uint256", "valueArray": "uint64[]", "tokenExchange": "mapping(address => uint64)"}, "info": ["InstantWithdrawManager", "updateTokenExchange", "UpdateTokenExchange", ["addressArray--variables", "valueArray--variables"]], "related_expression": ["addressArray.length==valueArray.length", "i=0", "not(i<addressArray.length)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernance"], "vars": {"_MAX_WITHDRAWAL_DELAY": "uint256", "newWithdrawalDelay": "uint64", "withdrawalDelay": "uint64"}, "info": ["InstantWithdrawManager", "updateWithdrawalDelay", "UpdateWithdrawalDelay", ["newWithdrawalDelay--variables"]], "related_expression": ["newWithdrawalDelay<=_MAX_WITHDRAWAL_DELAY", "withdrawalDelay=newWithdrawalDelay"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernance"], "vars": {"withdrawDelayerContract": "IWithdrawalDelayer", "withdrawalDelay": "uint64", "buckets": "mapping(int256 => uint256)", "nBuckets": "uint256"}, "info": ["InstantWithdrawManager", "safeMode", "SafeMode", []], "related_expression": [], "related_expression_type": []}]