[{"isloop": false, "loop_info": [], "modifier": ["nonReentrant", "whenNotPaused"], "vars": {"_amount": "uint256", "_token": "address", "addseq": "uint64", "minAdd": "mapping(address => uint256)", "msg.sender": "address", "this": "address"}, "info": ["Bridge", "addLiquidity", "LiquidityAdded", ["addseq--variables", "msg.sender--variables", "_token--variables", "_amount--variables"]], "related_expression": ["_amount>minAdd[_token]", "addseq+=1", "IERC20(_token).safeTransferFrom(msg.sender,address(this),_amount)"], "related_expression_type": ["Condition", "AssignmentOperation_+=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["nonReentrant", "whenNotPaused"], "vars": {"_amount": "uint256", "addseq": "uint64", "minAdd": "mapping(address => uint256)", "msg.sender": "address", "msg.value": "uint256", "nativeWrap": "address"}, "info": ["Bridge", "addNativeLiquidity", "LiquidityAdded", ["addseq--variables", "msg.sender--variables", "nativeWrap--variables", "_amount--variables"]], "related_expression": ["msg.value==_amount", "nativeWrap!=address(0)", "_amount>minAdd[nativeWrap]", "addseq+=1", "IWETH(nativeWrap).deposit{value:_amount}()"], "related_expression_type": ["Condition", "Condition", "Condition", "AssignmentOperation_+=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_powers": "uint256[]", "_signers": "address[]", "_sigs": "bytes[]", "_wdmsg": "bytes", "block.chainid": "uint256", "delayThreshold": "uint256", "delayThresholds": "mapping(address => uint256)", "domain": "bytes32", "this": "address", "wdId": "bytes32", "wdmsg": "PbPool.WithdrawMsg", "withdraws": "mapping(bytes32 => bool)"}, "info": ["Bridge", "withdraw", "WithdrawDone", ["wdId--variables", "wdmsg_element--variables", "wdmsg_element--variables", "wdmsg_element--variables", "wdmsg_element--variables", "wdmsg_element--variables"]], "related_expression": ["verifySigs(abi.encodePacked(domain,_wdmsg),_sigs,_signers,_powers)", "wdmsg=PbPool.decWithdrawMsg(_wdmsg)", "wdId=keccak256(bytes)(abi.encodePacked(wdmsg.chainid,wdmsg.seqnum,wdmsg.receiver,wdmsg.token,wdmsg.amount))", "withdraws[wdId]==false", "withdraws[wdId]=true", "_updateVolume(wdmsg.token,wdmsg.amount)", "delayThreshold=delayThresholds[wdmsg.token]", "delayThreshold>0&&wdmsg.amount>delayThreshold", "_addDelayedTransfer(wdId,wdmsg.receiver,wdmsg.token,wdmsg.amount)"], "related_expression_type": ["CallExpression", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_powers": "uint256[]", "_signers": "address[]", "_sigs": "bytes[]", "_wdmsg": "bytes", "block.chainid": "uint256", "delayThreshold": "uint256", "delayThresholds": "mapping(address => uint256)", "domain": "bytes32", "this": "address", "wdId": "bytes32", "wdmsg": "PbPool.WithdrawMsg", "withdraws": "mapping(bytes32 => bool)"}, "info": ["Bridge", "withdraw", "WithdrawDone", ["wdId--variables", "wdmsg_element--variables", "wdmsg_element--variables", "wdmsg_element--variables", "wdmsg_element--variables", "wdmsg_element--variables"]], "related_expression": ["verifySigs(abi.encodePacked(domain,_wdmsg),_sigs,_signers,_powers)", "wdmsg=PbPool.decWithdrawMsg(_wdmsg)", "wdId=keccak256(bytes)(abi.encodePacked(wdmsg.chainid,wdmsg.seqnum,wdmsg.receiver,wdmsg.token,wdmsg.amount))", "withdraws[wdId]==false", "withdraws[wdId]=true", "_updateVolume(wdmsg.token,wdmsg.amount)", "delayThreshold=delayThresholds[wdmsg.token]", "not(delayThreshold>0&&wdmsg.amount>delayThreshold)", "_sendToken(wdmsg.receiver,wdmsg.token,wdmsg.amount)"], "related_expression_type": ["CallExpression", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_amounts": "uint256[]", "_tokens": "address[]", "i": "uint256", "minAdd": "mapping(address => uint256)"}, "info": ["Bridge", "setMinAdd", "MinAddUpdated", ["_tokens_element--variables", "_amounts_element--variables"]], "related_expression": ["_tokens.length==_amounts.length", "i=0", "i++", "i<_tokens.length", "minAdd[_tokens[i]]=_amounts[i]", "minAdd[_tokens[i]]=_amounts[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_amounts": "uint256[]", "_tokens": "address[]", "i": "uint256", "minAdd": "mapping(address => uint256)"}, "info": ["Bridge", "setMinAdd", "MinAddUpdated", ["_tokens_element--variables", "_amounts_element--variables"]], "related_expression": ["_tokens.length==_amounts.length", "i=0", "i<_tokens.length", "minAdd[_tokens[i]]=_amounts[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_thresholds": "uint256[]", "_tokens": "address[]", "i": "uint256", "delayThresholds": "mapping(address => uint256)"}, "info": ["Bridge", "setDelayThresholds", "DelayThresholdUpdated", ["_tokens_element--variables", "_thresholds_element--variables"]], "related_expression": ["_tokens.length==_thresholds.length", "i=0", "i++", "i<_tokens.length", "delayThresholds[_tokens[i]]=_thresholds[i]", "delayThresholds[_tokens[i]]=_thresholds[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_thresholds": "uint256[]", "_tokens": "address[]", "i": "uint256", "delayThresholds": "mapping(address => uint256)"}, "info": ["Bridge", "setDelayThresholds", "DelayThresholdUpdated", ["_tokens_element--variables", "_thresholds_element--variables"]], "related_expression": ["_tokens.length==_thresholds.length", "i=0", "i<_tokens.length", "delayThresholds[_tokens[i]]=_thresholds[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernor"], "vars": {"_period": "uint256", "delayPeriod": "uint256"}, "info": ["Bridge", "setDelayPeriod", "DelayPeriodUpdated", ["_period--variables"]], "related_expression": ["delayPeriod=_period"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"amount": "uint256", "block.timestamp": "uint256", "delayedTransfers": "mapping(bytes32 => DelayedTransfer.delayedTransfer)", "id": "bytes32", "receiver": "address", "token": "address"}, "info": ["Bridge", "_addDelayedTransfer", "DelayedTransferAdded", ["id--variables"]], "related_expression": ["delayedTransfers[id].timestamp==0", "delayedTransfers[id]=delayedTransfer({receiver:receiver,token:token,amount:amount,timestamp:block.timestamp})"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"block.timestamp": "uint256", "delayPeriod": "uint256", "delayedTransfers": "mapping(bytes32 => DelayedTransfer.delayedTransfer)", "id": "bytes32", "transfer": "DelayedTransfer.delayedTransfer"}, "info": ["Bridge", "_executeDelayedTransfer", "DelayedTransferExecuted", ["id--variables", "transfer_element--variables", "transfer_element--variables", "transfer_element--variables"]], "related_expression": ["transfer=delayedTransfers[id]", "transfer.timestamp>0", "block.timestamp>transfer.timestamp+delayPeriod", "deletedelayedTransfers[id]"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition", "Expression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["Bridge", "_addGovernor", "GovernorAdded", ["_account--variables"]], "related_expression": ["!isGovernor(_account)", "governors[_account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["Bridge", "_removeGovernor", "GovernorRemoved", ["_account--variables"]], "related_expression": ["isGovernor(_account)", "governors[_account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["Bridge", "_setOwner", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernor"], "vars": {"_length": "uint256", "epochLength": "uint256"}, "info": ["Bridge", "setEpochLength", "EpochLengthUpdated", ["_length--variables"]], "related_expression": ["epochLength=_length"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_caps": "uint256[]", "_tokens": "address[]", "i": "uint256", "epochVolumeCaps": "mapping(address => uint256)"}, "info": ["Bridge", "setEpochVolumeCaps", "EpochVolumeUpdated", ["_tokens_element--variables", "_caps_element--variables"]], "related_expression": ["_tokens.length==_caps.length", "i=0", "i<_tokens.length", "epochVolumeCaps[_tokens[i]]=_caps[i]", "i++", "epochVolumeCaps[_tokens[i]]=_caps[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Expression", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_caps": "uint256[]", "_tokens": "address[]", "i": "uint256", "epochVolumeCaps": "mapping(address => uint256)"}, "info": ["Bridge", "setEpochVolumeCaps", "EpochVolumeUpdated", ["_tokens_element--variables", "_caps_element--variables"]], "related_expression": ["_tokens.length==_caps.length", "i=0", "i<_tokens.length", "epochVolumeCaps[_tokens[i]]=_caps[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"account": "address", "pausers": "mapping(address => bool)"}, "info": ["Bridge", "_addPauser", "PauserAdded", ["account--variables"]], "related_expression": ["!isPauser(account)", "pausers[account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"account": "address", "pausers": "mapping(address => bool)"}, "info": ["Bridge", "_removePauser", "PauserRemoved", ["account--variables"]], "related_expression": ["isPauser(account)", "pausers[account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_paused": "bool"}, "info": ["Bridge", "_pause", "Paused", ["TMP_128--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["whenPaused"], "vars": {"_paused": "bool"}, "info": ["Bridge", "_unpause", "Unpaused", ["TMP_131--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["onlyOwner"], "vars": {"block.timestamp": "uint256", "noticePeriod": "uint256", "resetTime": "uint256"}, "info": ["Bridge", "notifyResetSigners", "ResetNotification", ["resetTime--variables"]], "related_expression": ["resetTime=block.timestamp+noticePeriod"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": true, "loop_info": [3, 6], "modifier": [], "vars": {"_powers": "uint256[]", "_signers": "address[]", "i": "uint256", "prev": "address", "ssHash": "bytes32"}, "info": ["Bridge", "_updateSigners", "SignersUpdated", ["_signers--variables", "_powers--variables"]], "related_expression": ["_signers.length==_powers.length", "prev=address(0)", "i=0", "prev=_signers[i]", "i++", "i<_signers.length", "_signers[i]>prev", "ssHash=keccak256(bytes)(abi.encodePacked(_signers,_powers))"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Expression", "Condition", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [3, 3], "modifier": [], "vars": {"_powers": "uint256[]", "_signers": "address[]", "i": "uint256", "prev": "address", "ssHash": "bytes32"}, "info": ["Bridge", "_updateSigners", "SignersUpdated", ["_signers--variables", "_powers--variables"]], "related_expression": ["_signers.length==_powers.length", "prev=address(0)", "i=0", "not(i<_signers.length)", "ssHash=keccak256(bytes)(abi.encodePacked(_signers,_powers))"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["nonReentrant", "whenNotPaused"], "vars": {"_amount": "uint256", "_dstChainId": "uint64", "_maxSlippage": "uint32", "_nonce": "uint64", "_receiver": "address", "_token": "address", "msg.sender": "address", "this": "address", "transferId": "bytes32"}, "info": ["Bridge", "send", "Send", ["transferId--variables", "msg.sender--variables", "_receiver--variables", "_token--variables", "_amount--variables", "_dstChainId--variables", "_nonce--variables", "_maxSlippage--variables"]], "related_expression": ["transferId=_send(_receiver,_token,_amount,_dstChainId,_nonce,_maxSlippage)", "IERC20(_token).safeTransferFrom(msg.sender,address(this),_amount)"], "related_expression_type": ["AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["nonReentrant", "whenNotPaused"], "vars": {"_amount": "uint256", "_dstChainId": "uint64", "_maxSlippage": "uint32", "_nonce": "uint64", "_receiver": "address", "msg.sender": "address", "msg.value": "uint256", "nativeWrap": "address", "transferId": "bytes32"}, "info": ["Bridge", "sendNative", "Send", ["transferId--variables", "msg.sender--variables", "_receiver--variables", "nativeWrap--variables", "_amount--variables", "_dstChainId--variables", "_nonce--variables", "_maxSlippage--variables"]], "related_expression": ["msg.value==_amount", "nativeWrap!=address(0)", "transferId=_send(_receiver,nativeWrap,_amount,_dstChainId,_nonce,_maxSlippage)", "IWETH(nativeWrap).deposit{value:_amount}()"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_powers": "uint256[]", "_relayRequest": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "block.chainid": "uint256", "delayThreshold": "uint256", "delayThresholds": "mapping(address => uint256)", "domain": "bytes32", "request": "PbBridge.Relay", "this": "address", "transferId": "bytes32", "transfers": "mapping(bytes32 => bool)"}, "info": ["Bridge", "relay", "Relay", ["transferId--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables"]], "related_expression": ["verifySigs(abi.encodePacked(domain,_relayRequest),_sigs,_signers,_powers)", "request=PbBridge.decRelay(_relayRequest)", "transferId=keccak256(bytes)(abi.encodePacked(request.sender,request.receiver,request.token,request.amount,request.srcChainId,request.dstChainId,request.srcTransferId))", "transfers[transferId]==false", "transfers[transferId]=true", "_updateVolume(request.token,request.amount)", "delayThreshold=delayThresholds[request.token]", "delayThreshold>0&&request.amount>delayThreshold", "_addDelayedTransfer(transferId,request.receiver,request.token,request.amount)"], "related_expression_type": ["CallExpression", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_powers": "uint256[]", "_relayRequest": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "block.chainid": "uint256", "delayThreshold": "uint256", "delayThresholds": "mapping(address => uint256)", "domain": "bytes32", "request": "PbBridge.Relay", "this": "address", "transferId": "bytes32", "transfers": "mapping(bytes32 => bool)"}, "info": ["Bridge", "relay", "Relay", ["transferId--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables"]], "related_expression": ["verifySigs(abi.encodePacked(domain,_relayRequest),_sigs,_signers,_powers)", "request=PbBridge.decRelay(_relayRequest)", "transferId=keccak256(bytes)(abi.encodePacked(request.sender,request.receiver,request.token,request.amount,request.srcChainId,request.dstChainId,request.srcTransferId))", "transfers[transferId]==false", "transfers[transferId]=true", "_updateVolume(request.token,request.amount)", "delayThreshold=delayThresholds[request.token]", "not(delayThreshold>0&&request.amount>delayThreshold)", "_sendToken(request.receiver,request.token,request.amount)"], "related_expression_type": ["CallExpression", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_amounts": "uint256[]", "_tokens": "address[]", "i": "uint256", "minSend": "mapping(address => uint256)"}, "info": ["Bridge", "setMinSend", "MinSendUpdated", ["_tokens_element--variables", "_amounts_element--variables"]], "related_expression": ["_tokens.length==_amounts.length", "i=0", "minSend[_tokens[i]]=_amounts[i]", "i++", "i<_tokens.length", "minSend[_tokens[i]]=_amounts[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_amounts": "uint256[]", "_tokens": "address[]", "i": "uint256", "minSend": "mapping(address => uint256)"}, "info": ["Bridge", "setMinSend", "MinSendUpdated", ["_tokens_element--variables", "_amounts_element--variables"]], "related_expression": ["_tokens.length==_amounts.length", "i=0", "i<_tokens.length", "minSend[_tokens[i]]=_amounts[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_amounts": "uint256[]", "_tokens": "address[]", "i": "uint256", "maxSend": "mapping(address => uint256)"}, "info": ["Bridge", "setMaxSend", "MaxSendUpdated", ["_tokens_element--variables", "_amounts_element--variables"]], "related_expression": ["_tokens.length==_amounts.length", "i=0", "maxSend[_tokens[i]]=_amounts[i]", "i++", "i<_tokens.length", "maxSend[_tokens[i]]=_amounts[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_amounts": "uint256[]", "_tokens": "address[]", "i": "uint256", "maxSend": "mapping(address => uint256)"}, "info": ["Bridge", "setMaxSend", "MaxSendUpdated", ["_tokens_element--variables", "_amounts_element--variables"]], "related_expression": ["_tokens.length==_amounts.length", "i=0", "i<_tokens.length", "maxSend[_tokens[i]]=_amounts[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_thresholds": "uint256[]", "_tokens": "address[]", "i": "uint256", "delayThresholds": "mapping(address => uint256)"}, "info": ["Pool", "setDelayThresholds", "DelayThresholdUpdated", ["_tokens_element--variables", "_thresholds_element--variables"]], "related_expression": ["_tokens.length==_thresholds.length", "i=0", "i<_tokens.length", "delayThresholds[_tokens[i]]=_thresholds[i]", "i++", "delayThresholds[_tokens[i]]=_thresholds[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Expression", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_thresholds": "uint256[]", "_tokens": "address[]", "i": "uint256", "delayThresholds": "mapping(address => uint256)"}, "info": ["Pool", "setDelayThresholds", "DelayThresholdUpdated", ["_tokens_element--variables", "_thresholds_element--variables"]], "related_expression": ["_tokens.length==_thresholds.length", "i=0", "i<_tokens.length", "delayThresholds[_tokens[i]]=_thresholds[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernor"], "vars": {"_period": "uint256", "delayPeriod": "uint256"}, "info": ["Pool", "setDelayPeriod", "DelayPeriodUpdated", ["_period--variables"]], "related_expression": ["delayPeriod=_period"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"amount": "uint256", "block.timestamp": "uint256", "delayedTransfers": "mapping(bytes32 => DelayedTransfer.delayedTransfer)", "id": "bytes32", "receiver": "address", "token": "address"}, "info": ["Pool", "_addDelayedTransfer", "DelayedTransferAdded", ["id--variables"]], "related_expression": ["delayedTransfers[id].timestamp==0", "delayedTransfers[id]=delayedTransfer({receiver:receiver,token:token,amount:amount,timestamp:block.timestamp})"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"block.timestamp": "uint256", "delayPeriod": "uint256", "delayedTransfers": "mapping(bytes32 => DelayedTransfer.delayedTransfer)", "id": "bytes32", "transfer": "DelayedTransfer.delayedTransfer"}, "info": ["Pool", "_executeDelayedTransfer", "DelayedTransferExecuted", ["id--variables", "transfer_element--variables", "transfer_element--variables", "transfer_element--variables"]], "related_expression": ["transfer=delayedTransfers[id]", "transfer.timestamp>0", "block.timestamp>transfer.timestamp+delayPeriod", "deletedelayedTransfers[id]"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition", "Expression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["Pool", "_addGovernor", "GovernorAdded", ["_account--variables"]], "related_expression": ["!isGovernor(_account)", "governors[_account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["Pool", "_removeGovernor", "GovernorRemoved", ["_account--variables"]], "related_expression": ["isGovernor(_account)", "governors[_account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["Pool", "_setOwner", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernor"], "vars": {"_length": "uint256", "epochLength": "uint256"}, "info": ["Pool", "setEpochLength", "EpochLengthUpdated", ["_length--variables"]], "related_expression": ["epochLength=_length"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_caps": "uint256[]", "_tokens": "address[]", "i": "uint256", "epochVolumeCaps": "mapping(address => uint256)"}, "info": ["Pool", "setEpochVolumeCaps", "EpochVolumeUpdated", ["_tokens_element--variables", "_caps_element--variables"]], "related_expression": ["_tokens.length==_caps.length", "i=0", "i++", "i<_tokens.length", "epochVolumeCaps[_tokens[i]]=_caps[i]", "epochVolumeCaps[_tokens[i]]=_caps[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_caps": "uint256[]", "_tokens": "address[]", "i": "uint256", "epochVolumeCaps": "mapping(address => uint256)"}, "info": ["Pool", "setEpochVolumeCaps", "EpochVolumeUpdated", ["_tokens_element--variables", "_caps_element--variables"]], "related_expression": ["_tokens.length==_caps.length", "i=0", "i<_tokens.length", "epochVolumeCaps[_tokens[i]]=_caps[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"account": "address", "pausers": "mapping(address => bool)"}, "info": ["Pool", "_addPauser", "PauserAdded", ["account--variables"]], "related_expression": ["!isPauser(account)", "pausers[account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"account": "address", "pausers": "mapping(address => bool)"}, "info": ["Pool", "_removePauser", "PauserRemoved", ["account--variables"]], "related_expression": ["isPauser(account)", "pausers[account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_paused": "bool"}, "info": ["Pool", "_pause", "Paused", ["TMP_344--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["whenPaused"], "vars": {"_paused": "bool"}, "info": ["Pool", "_unpause", "Unpaused", ["TMP_347--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["onlyOwner"], "vars": {"block.timestamp": "uint256", "noticePeriod": "uint256", "resetTime": "uint256"}, "info": ["Pool", "notifyResetSigners", "ResetNotification", ["resetTime--variables"]], "related_expression": ["resetTime=block.timestamp+noticePeriod"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": true, "loop_info": [3, 6], "modifier": [], "vars": {"_powers": "uint256[]", "_signers": "address[]", "i": "uint256", "prev": "address", "ssHash": "bytes32"}, "info": ["Pool", "_updateSigners", "SignersUpdated", ["_signers--variables", "_powers--variables"]], "related_expression": ["_signers.length==_powers.length", "prev=address(0)", "i=0", "_signers[i]>prev", "prev=_signers[i]", "i++", "i<_signers.length", "ssHash=keccak256(bytes)(abi.encodePacked(_signers,_powers))"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [3, 3], "modifier": [], "vars": {"_powers": "uint256[]", "_signers": "address[]", "i": "uint256", "prev": "address", "ssHash": "bytes32"}, "info": ["Pool", "_updateSigners", "SignersUpdated", ["_signers--variables", "_powers--variables"]], "related_expression": ["_signers.length==_powers.length", "prev=address(0)", "i=0", "not(i<_signers.length)", "ssHash=keccak256(bytes)(abi.encodePacked(_signers,_powers))"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["nonReentrant", "whenNotPaused"], "vars": {"_amount": "uint256", "_token": "address", "addseq": "uint64", "minAdd": "mapping(address => uint256)", "msg.sender": "address", "this": "address"}, "info": ["Pool", "addLiquidity", "LiquidityAdded", ["addseq--variables", "msg.sender--variables", "_token--variables", "_amount--variables"]], "related_expression": ["_amount>minAdd[_token]", "addseq+=1", "IERC20(_token).safeTransferFrom(msg.sender,address(this),_amount)"], "related_expression_type": ["Condition", "AssignmentOperation_+=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["nonReentrant", "whenNotPaused"], "vars": {"_amount": "uint256", "addseq": "uint64", "minAdd": "mapping(address => uint256)", "msg.sender": "address", "msg.value": "uint256", "nativeWrap": "address"}, "info": ["Pool", "addNativeLiquidity", "LiquidityAdded", ["addseq--variables", "msg.sender--variables", "nativeWrap--variables", "_amount--variables"]], "related_expression": ["msg.value==_amount", "nativeWrap!=address(0)", "_amount>minAdd[nativeWrap]", "addseq+=1", "IWETH(nativeWrap).deposit{value:_amount}()"], "related_expression_type": ["Condition", "Condition", "Condition", "AssignmentOperation_+=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_powers": "uint256[]", "_signers": "address[]", "_sigs": "bytes[]", "_wdmsg": "bytes", "block.chainid": "uint256", "delayThreshold": "uint256", "delayThresholds": "mapping(address => uint256)", "domain": "bytes32", "this": "address", "wdId": "bytes32", "wdmsg": "PbPool.WithdrawMsg", "withdraws": "mapping(bytes32 => bool)"}, "info": ["Pool", "withdraw", "WithdrawDone", ["wdId--variables", "wdmsg_element--variables", "wdmsg_element--variables", "wdmsg_element--variables", "wdmsg_element--variables", "wdmsg_element--variables"]], "related_expression": ["verifySigs(abi.encodePacked(domain,_wdmsg),_sigs,_signers,_powers)", "wdmsg=PbPool.decWithdrawMsg(_wdmsg)", "wdId=keccak256(bytes)(abi.encodePacked(wdmsg.chainid,wdmsg.seqnum,wdmsg.receiver,wdmsg.token,wdmsg.amount))", "withdraws[wdId]==false", "withdraws[wdId]=true", "_updateVolume(wdmsg.token,wdmsg.amount)", "delayThreshold=delayThresholds[wdmsg.token]", "delayThreshold>0&&wdmsg.amount>delayThreshold", "_addDelayedTransfer(wdId,wdmsg.receiver,wdmsg.token,wdmsg.amount)"], "related_expression_type": ["CallExpression", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_powers": "uint256[]", "_signers": "address[]", "_sigs": "bytes[]", "_wdmsg": "bytes", "block.chainid": "uint256", "delayThreshold": "uint256", "delayThresholds": "mapping(address => uint256)", "domain": "bytes32", "this": "address", "wdId": "bytes32", "wdmsg": "PbPool.WithdrawMsg", "withdraws": "mapping(bytes32 => bool)"}, "info": ["Pool", "withdraw", "WithdrawDone", ["wdId--variables", "wdmsg_element--variables", "wdmsg_element--variables", "wdmsg_element--variables", "wdmsg_element--variables", "wdmsg_element--variables"]], "related_expression": ["verifySigs(abi.encodePacked(domain,_wdmsg),_sigs,_signers,_powers)", "wdmsg=PbPool.decWithdrawMsg(_wdmsg)", "wdId=keccak256(bytes)(abi.encodePacked(wdmsg.chainid,wdmsg.seqnum,wdmsg.receiver,wdmsg.token,wdmsg.amount))", "withdraws[wdId]==false", "withdraws[wdId]=true", "_updateVolume(wdmsg.token,wdmsg.amount)", "delayThreshold=delayThresholds[wdmsg.token]", "not(delayThreshold>0&&wdmsg.amount>delayThreshold)", "_sendToken(wdmsg.receiver,wdmsg.token,wdmsg.amount)"], "related_expression_type": ["CallExpression", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_amounts": "uint256[]", "_tokens": "address[]", "i": "uint256", "minAdd": "mapping(address => uint256)"}, "info": ["Pool", "setMinAdd", "MinAddUpdated", ["_tokens_element--variables", "_amounts_element--variables"]], "related_expression": ["_tokens.length==_amounts.length", "i=0", "i<_tokens.length", "minAdd[_tokens[i]]=_amounts[i]", "i++", "minAdd[_tokens[i]]=_amounts[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Expression", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_amounts": "uint256[]", "_tokens": "address[]", "i": "uint256", "minAdd": "mapping(address => uint256)"}, "info": ["Pool", "setMinAdd", "MinAddUpdated", ["_tokens_element--variables", "_amounts_element--variables"]], "related_expression": ["_tokens.length==_amounts.length", "i=0", "i<_tokens.length", "minAdd[_tokens[i]]=_amounts[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["Signers", "_setOwner", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyOwner"], "vars": {"block.timestamp": "uint256", "noticePeriod": "uint256", "resetTime": "uint256"}, "info": ["Signers", "notifyResetSigners", "ResetNotification", ["resetTime--variables"]], "related_expression": ["resetTime=block.timestamp+noticePeriod"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": true, "loop_info": [3, 6], "modifier": [], "vars": {"_powers": "uint256[]", "_signers": "address[]", "i": "uint256", "prev": "address", "ssHash": "bytes32"}, "info": ["Signers", "_updateSigners", "SignersUpdated", ["_signers--variables", "_powers--variables"]], "related_expression": ["_signers.length==_powers.length", "prev=address(0)", "i=0", "prev=_signers[i]", "i++", "i<_signers.length", "_signers[i]>prev", "ssHash=keccak256(bytes)(abi.encodePacked(_signers,_powers))"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Expression", "Condition", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [3, 3], "modifier": [], "vars": {"_powers": "uint256[]", "_signers": "address[]", "i": "uint256", "prev": "address", "ssHash": "bytes32"}, "info": ["Signers", "_updateSigners", "SignersUpdated", ["_signers--variables", "_powers--variables"]], "related_expression": ["_signers.length==_powers.length", "prev=address(0)", "i=0", "not(i<_signers.length)", "ssHash=keccak256(bytes)(abi.encodePacked(_signers,_powers))"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["DelayedTransfer", "_addGovernor", "GovernorAdded", ["_account--variables"]], "related_expression": ["!isGovernor(_account)", "governors[_account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["DelayedTransfer", "_removeGovernor", "GovernorRemoved", ["_account--variables"]], "related_expression": ["isGovernor(_account)", "governors[_account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["DelayedTransfer", "_setOwner", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_thresholds": "uint256[]", "_tokens": "address[]", "i": "uint256", "delayThresholds": "mapping(address => uint256)"}, "info": ["DelayedTransfer", "setDelayThresholds", "DelayThresholdUpdated", ["_tokens_element--variables", "_thresholds_element--variables"]], "related_expression": ["_tokens.length==_thresholds.length", "i=0", "delayThresholds[_tokens[i]]=_thresholds[i]", "i++", "i<_tokens.length", "delayThresholds[_tokens[i]]=_thresholds[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_thresholds": "uint256[]", "_tokens": "address[]", "i": "uint256", "delayThresholds": "mapping(address => uint256)"}, "info": ["DelayedTransfer", "setDelayThresholds", "DelayThresholdUpdated", ["_tokens_element--variables", "_thresholds_element--variables"]], "related_expression": ["_tokens.length==_thresholds.length", "i=0", "i<_tokens.length", "delayThresholds[_tokens[i]]=_thresholds[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernor"], "vars": {"_period": "uint256", "delayPeriod": "uint256"}, "info": ["DelayedTransfer", "setDelayPeriod", "DelayPeriodUpdated", ["_period--variables"]], "related_expression": ["delayPeriod=_period"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"amount": "uint256", "block.timestamp": "uint256", "delayedTransfers": "mapping(bytes32 => DelayedTransfer.delayedTransfer)", "id": "bytes32", "receiver": "address", "token": "address"}, "info": ["DelayedTransfer", "_addDelayedTransfer", "DelayedTransferAdded", ["id--variables"]], "related_expression": ["delayedTransfers[id].timestamp==0", "delayedTransfers[id]=delayedTransfer({receiver:receiver,token:token,amount:amount,timestamp:block.timestamp})"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"block.timestamp": "uint256", "delayPeriod": "uint256", "delayedTransfers": "mapping(bytes32 => DelayedTransfer.delayedTransfer)", "id": "bytes32", "transfer": "DelayedTransfer.delayedTransfer"}, "info": ["DelayedTransfer", "_executeDelayedTransfer", "DelayedTransferExecuted", ["id--variables", "transfer_element--variables", "transfer_element--variables", "transfer_element--variables"]], "related_expression": ["transfer=delayedTransfers[id]", "transfer.timestamp>0", "block.timestamp>transfer.timestamp+delayPeriod", "deletedelayedTransfers[id]"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition", "Expression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["Governor", "_setOwner", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["Governor", "_addGovernor", "GovernorAdded", ["_account--variables"]], "related_expression": ["!isGovernor(_account)", "governors[_account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["Governor", "_removeGovernor", "GovernorRemoved", ["_account--variables"]], "related_expression": ["isGovernor(_account)", "governors[_account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_paused": "bool"}, "info": ["Pauser", "_pause", "Paused", ["TMP_770--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["whenPaused"], "vars": {"_paused": "bool"}, "info": ["Pauser", "_unpause", "Unpaused", ["TMP_773--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["Pauser", "_setOwner", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"account": "address", "pausers": "mapping(address => bool)"}, "info": ["Pauser", "_addPauser", "PauserAdded", ["account--variables"]], "related_expression": ["!isPauser(account)", "pausers[account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"account": "address", "pausers": "mapping(address => bool)"}, "info": ["Pauser", "_removePauser", "PauserRemoved", ["account--variables"]], "related_expression": ["isPauser(account)", "pausers[account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["VolumeControl", "_addGovernor", "GovernorAdded", ["_account--variables"]], "related_expression": ["!isGovernor(_account)", "governors[_account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["VolumeControl", "_removeGovernor", "GovernorRemoved", ["_account--variables"]], "related_expression": ["isGovernor(_account)", "governors[_account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["VolumeControl", "_setOwner", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernor"], "vars": {"_length": "uint256", "epochLength": "uint256"}, "info": ["VolumeControl", "setEpochLength", "EpochLengthUpdated", ["_length--variables"]], "related_expression": ["epochLength=_length"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_caps": "uint256[]", "_tokens": "address[]", "i": "uint256", "epochVolumeCaps": "mapping(address => uint256)"}, "info": ["VolumeControl", "setEpochVolumeCaps", "EpochVolumeUpdated", ["_tokens_element--variables", "_caps_element--variables"]], "related_expression": ["_tokens.length==_caps.length", "i=0", "epochVolumeCaps[_tokens[i]]=_caps[i]", "i++", "i<_tokens.length", "epochVolumeCaps[_tokens[i]]=_caps[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_caps": "uint256[]", "_tokens": "address[]", "i": "uint256", "epochVolumeCaps": "mapping(address => uint256)"}, "info": ["VolumeControl", "setEpochVolumeCaps", "EpochVolumeUpdated", ["_tokens_element--variables", "_caps_element--variables"]], "related_expression": ["_tokens.length==_caps.length", "i=0", "i<_tokens.length", "epochVolumeCaps[_tokens[i]]=_caps[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["Ownable", "_setOwner", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_paused": "bool"}, "info": ["Pausable", "_pause", "Paused", ["TMP_875--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["whenPaused"], "vars": {"_paused": "bool"}, "info": ["Pausable", "_unpause", "Unpaused", ["TMP_878--variables"]], "related_expression": [], "related_expression_type": []}]