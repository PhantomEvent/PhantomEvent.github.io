[{"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_thresholds": "uint256[]", "_tokens": "address[]", "i": "uint256", "delayThresholds": "mapping(address => uint256)"}, "info": ["OriginalTokenVaultV2", "setDelayThresholds", "DelayThresholdUpdated", ["_tokens_element--variables", "_thresholds_element--variables"]], "related_expression": ["_tokens.length==_thresholds.length", "i=0", "delayThresholds[_tokens[i]]=_thresholds[i]", "i++", "i<_tokens.length", "delayThresholds[_tokens[i]]=_thresholds[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_thresholds": "uint256[]", "_tokens": "address[]", "i": "uint256", "delayThresholds": "mapping(address => uint256)"}, "info": ["OriginalTokenVaultV2", "setDelayThresholds", "DelayThresholdUpdated", ["_tokens_element--variables", "_thresholds_element--variables"]], "related_expression": ["_tokens.length==_thresholds.length", "i=0", "i<_tokens.length", "delayThresholds[_tokens[i]]=_thresholds[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernor"], "vars": {"_period": "uint256", "delayPeriod": "uint256"}, "info": ["OriginalTokenVaultV2", "setDelayPeriod", "DelayPeriodUpdated", ["_period--variables"]], "related_expression": ["delayPeriod=_period"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"amount": "uint256", "block.timestamp": "uint256", "delayedTransfers": "mapping(bytes32 => DelayedTransfer.delayedTransfer)", "id": "bytes32", "receiver": "address", "token": "address"}, "info": ["OriginalTokenVaultV2", "_addDelayedTransfer", "DelayedTransferAdded", ["id--variables"]], "related_expression": ["delayedTransfers[id].timestamp==0", "delayedTransfers[id]=delayedTransfer({receiver:receiver,token:token,amount:amount,timestamp:block.timestamp})"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"block.timestamp": "uint256", "delayPeriod": "uint256", "delayedTransfers": "mapping(bytes32 => DelayedTransfer.delayedTransfer)", "id": "bytes32", "transfer": "DelayedTransfer.delayedTransfer"}, "info": ["OriginalTokenVaultV2", "_executeDelayedTransfer", "DelayedTransferExecuted", ["id--variables", "transfer_element--variables", "transfer_element--variables", "transfer_element--variables"]], "related_expression": ["transfer=delayedTransfers[id]", "transfer.timestamp>0", "block.timestamp>transfer.timestamp+delayPeriod", "deletedelayedTransfers[id]"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition", "Expression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["OriginalTokenVaultV2", "_addGovernor", "GovernorAdded", ["_account--variables"]], "related_expression": ["!isGovernor(_account)", "governors[_account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["OriginalTokenVaultV2", "_removeGovernor", "GovernorRemoved", ["_account--variables"]], "related_expression": ["isGovernor(_account)", "governors[_account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["OriginalTokenVaultV2", "_setOwner", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernor"], "vars": {"_length": "uint256", "epochLength": "uint256"}, "info": ["OriginalTokenVaultV2", "setEpochLength", "EpochLengthUpdated", ["_length--variables"]], "related_expression": ["epochLength=_length"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_caps": "uint256[]", "_tokens": "address[]", "i": "uint256", "epochVolumeCaps": "mapping(address => uint256)"}, "info": ["OriginalTokenVaultV2", "setEpochVolumeCaps", "EpochVolumeUpdated", ["_tokens_element--variables", "_caps_element--variables"]], "related_expression": ["_tokens.length==_caps.length", "i=0", "i<_tokens.length", "epochVolumeCaps[_tokens[i]]=_caps[i]", "i++", "epochVolumeCaps[_tokens[i]]=_caps[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Expression", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_caps": "uint256[]", "_tokens": "address[]", "i": "uint256", "epochVolumeCaps": "mapping(address => uint256)"}, "info": ["OriginalTokenVaultV2", "setEpochVolumeCaps", "EpochVolumeUpdated", ["_tokens_element--variables", "_caps_element--variables"]], "related_expression": ["_tokens.length==_caps.length", "i=0", "i<_tokens.length", "epochVolumeCaps[_tokens[i]]=_caps[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"account": "address", "pausers": "mapping(address => bool)"}, "info": ["OriginalTokenVaultV2", "_addPauser", "PauserAdded", ["account--variables"]], "related_expression": ["!isPauser(account)", "pausers[account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"account": "address", "pausers": "mapping(address => bool)"}, "info": ["OriginalTokenVaultV2", "_removePauser", "PauserRemoved", ["account--variables"]], "related_expression": ["isPauser(account)", "pausers[account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_paused": "bool"}, "info": ["OriginalTokenVaultV2", "_pause", "Paused", ["TMP_211--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["whenPaused"], "vars": {"_paused": "bool"}, "info": ["OriginalTokenVaultV2", "_unpause", "Unpaused", ["TMP_214--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["nonReentrant", "whenNotPaused"], "vars": {"_amount": "uint256", "_mintAccount": "address", "_mintChainId": "uint64", "_nonce": "uint64", "_token": "address", "depId": "bytes32", "msg.sender": "address", "this": "address"}, "info": ["OriginalTokenVaultV2", "deposit", "Deposited", ["depId--variables", "msg.sender--variables", "_token--variables", "_amount--variables", "_mintChainId--variables", "_mintAccount--variables", "_nonce--variables"]], "related_expression": ["depId=_deposit(_token,_amount,_mintChainId,_mintAccount,_nonce)", "IERC20(_token).safeTransferFrom(msg.sender,address(this),_amount)"], "related_expression_type": ["AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["nonReentrant", "whenNotPaused"], "vars": {"_amount": "uint256", "_mintAccount": "address", "_mintChainId": "uint64", "_nonce": "uint64", "depId": "bytes32", "msg.sender": "address", "msg.value": "uint256", "nativeWrap": "address"}, "info": ["OriginalTokenVaultV2", "depositNative", "Deposited", ["depId--variables", "msg.sender--variables", "nativeWrap--variables", "_amount--variables", "_mintChainId--variables", "_mintAccount--variables", "_nonce--variables"]], "related_expression": ["msg.value==_amount", "nativeWrap!=address(0)", "depId=_deposit(nativeWrap,_amount,_mintChainId,_mintAccount,_nonce)", "IWETH(nativeWrap).deposit{value:_amount}()"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "block.chainid": "uint256", "delayThreshold": "uint256", "delayThresholds": "mapping(address => uint256)", "domain": "bytes32", "records": "mapping(bytes32 => bool)", "request": "PbPegged.Withdraw", "sigsVerifier": "ISigsVerifier", "this": "address", "wdId": "bytes32"}, "info": ["OriginalTokenVaultV2", "withdraw", "Withdrawn", ["wdId--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables"]], "related_expression": ["sigsVerifier.verifySigs(abi.encodePacked(domain,_request),_sigs,_signers,_powers)", "request=PbPegged.decWithdraw(_request)", "wdId=keccak256(bytes)(abi.encodePacked(request.receiver,request.token,request.amount,request.burnAccount,request.refChainId,request.refId,address(this)))", "records[wdId]==false", "records[wdId]=true", "_updateVolume(request.token,request.amount)", "delayThreshold=delayThresholds[request.token]", "delayThreshold>0&&request.amount>delayThreshold", "_addDelayedTransfer(wdId,request.receiver,request.token,request.amount)"], "related_expression_type": ["CallExpression", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "block.chainid": "uint256", "delayThreshold": "uint256", "delayThresholds": "mapping(address => uint256)", "domain": "bytes32", "records": "mapping(bytes32 => bool)", "request": "PbPegged.Withdraw", "sigsVerifier": "ISigsVerifier", "this": "address", "wdId": "bytes32"}, "info": ["OriginalTokenVaultV2", "withdraw", "Withdrawn", ["wdId--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables", "request_element--variables"]], "related_expression": ["sigsVerifier.verifySigs(abi.encodePacked(domain,_request),_sigs,_signers,_powers)", "request=PbPegged.decWithdraw(_request)", "wdId=keccak256(bytes)(abi.encodePacked(request.receiver,request.token,request.amount,request.burnAccount,request.refChainId,request.refId,address(this)))", "records[wdId]==false", "records[wdId]=true", "_updateVolume(request.token,request.amount)", "delayThreshold=delayThresholds[request.token]", "not(delayThreshold>0&&request.amount>delayThreshold)", "_sendToken(request.receiver,request.token,request.amount)"], "related_expression_type": ["CallExpression", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_amounts": "uint256[]", "_tokens": "address[]", "i": "uint256", "minDeposit": "mapping(address => uint256)"}, "info": ["OriginalTokenVaultV2", "setMinDeposit", "MinDepositUpdated", ["_tokens_element--variables", "_amounts_element--variables"]], "related_expression": ["_tokens.length==_amounts.length", "i=0", "i++", "i<_tokens.length", "minDeposit[_tokens[i]]=_amounts[i]", "minDeposit[_tokens[i]]=_amounts[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_amounts": "uint256[]", "_tokens": "address[]", "i": "uint256", "minDeposit": "mapping(address => uint256)"}, "info": ["OriginalTokenVaultV2", "setMinDeposit", "MinDepositUpdated", ["_tokens_element--variables", "_amounts_element--variables"]], "related_expression": ["_tokens.length==_amounts.length", "i=0", "i<_tokens.length", "minDeposit[_tokens[i]]=_amounts[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_amounts": "uint256[]", "_tokens": "address[]", "i": "uint256", "maxDeposit": "mapping(address => uint256)"}, "info": ["OriginalTokenVaultV2", "setMaxDeposit", "MaxDepositUpdated", ["_tokens_element--variables", "_amounts_element--variables"]], "related_expression": ["_tokens.length==_amounts.length", "i=0", "maxDeposit[_tokens[i]]=_amounts[i]", "i++", "i<_tokens.length", "maxDeposit[_tokens[i]]=_amounts[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_amounts": "uint256[]", "_tokens": "address[]", "i": "uint256", "maxDeposit": "mapping(address => uint256)"}, "info": ["OriginalTokenVaultV2", "setMaxDeposit", "MaxDepositUpdated", ["_tokens_element--variables", "_amounts_element--variables"]], "related_expression": ["_tokens.length==_amounts.length", "i=0", "i<_tokens.length", "maxDeposit[_tokens[i]]=_amounts[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["DelayedTransfer", "_addGovernor", "GovernorAdded", ["_account--variables"]], "related_expression": ["!isGovernor(_account)", "governors[_account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["DelayedTransfer", "_removeGovernor", "GovernorRemoved", ["_account--variables"]], "related_expression": ["isGovernor(_account)", "governors[_account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["DelayedTransfer", "_setOwner", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_thresholds": "uint256[]", "_tokens": "address[]", "i": "uint256", "delayThresholds": "mapping(address => uint256)"}, "info": ["DelayedTransfer", "setDelayThresholds", "DelayThresholdUpdated", ["_tokens_element--variables", "_thresholds_element--variables"]], "related_expression": ["_tokens.length==_thresholds.length", "i=0", "i++", "i<_tokens.length", "delayThresholds[_tokens[i]]=_thresholds[i]", "delayThresholds[_tokens[i]]=_thresholds[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_thresholds": "uint256[]", "_tokens": "address[]", "i": "uint256", "delayThresholds": "mapping(address => uint256)"}, "info": ["DelayedTransfer", "setDelayThresholds", "DelayThresholdUpdated", ["_tokens_element--variables", "_thresholds_element--variables"]], "related_expression": ["_tokens.length==_thresholds.length", "i=0", "i<_tokens.length", "delayThresholds[_tokens[i]]=_thresholds[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernor"], "vars": {"_period": "uint256", "delayPeriod": "uint256"}, "info": ["DelayedTransfer", "setDelayPeriod", "DelayPeriodUpdated", ["_period--variables"]], "related_expression": ["delayPeriod=_period"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"amount": "uint256", "block.timestamp": "uint256", "delayedTransfers": "mapping(bytes32 => DelayedTransfer.delayedTransfer)", "id": "bytes32", "receiver": "address", "token": "address"}, "info": ["DelayedTransfer", "_addDelayedTransfer", "DelayedTransferAdded", ["id--variables"]], "related_expression": ["delayedTransfers[id].timestamp==0", "delayedTransfers[id]=delayedTransfer({receiver:receiver,token:token,amount:amount,timestamp:block.timestamp})"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"block.timestamp": "uint256", "delayPeriod": "uint256", "delayedTransfers": "mapping(bytes32 => DelayedTransfer.delayedTransfer)", "id": "bytes32", "transfer": "DelayedTransfer.delayedTransfer"}, "info": ["DelayedTransfer", "_executeDelayedTransfer", "DelayedTransferExecuted", ["id--variables", "transfer_element--variables", "transfer_element--variables", "transfer_element--variables"]], "related_expression": ["transfer=delayedTransfers[id]", "transfer.timestamp>0", "block.timestamp>transfer.timestamp+delayPeriod", "deletedelayedTransfers[id]"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition", "Expression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["Governor", "_setOwner", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["Governor", "_addGovernor", "GovernorAdded", ["_account--variables"]], "related_expression": ["!isGovernor(_account)", "governors[_account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["Governor", "_removeGovernor", "GovernorRemoved", ["_account--variables"]], "related_expression": ["isGovernor(_account)", "governors[_account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["Ownable", "_setOwner", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_paused": "bool"}, "info": ["Pauser", "_pause", "Paused", ["TMP_392--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["whenPaused"], "vars": {"_paused": "bool"}, "info": ["Pauser", "_unpause", "Unpaused", ["TMP_395--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["Pauser", "_setOwner", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"account": "address", "pausers": "mapping(address => bool)"}, "info": ["Pauser", "_addPauser", "PauserAdded", ["account--variables"]], "related_expression": ["!isPauser(account)", "pausers[account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"account": "address", "pausers": "mapping(address => bool)"}, "info": ["Pauser", "_removePauser", "PauserRemoved", ["account--variables"]], "related_expression": ["isPauser(account)", "pausers[account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["VolumeControl", "_addGovernor", "GovernorAdded", ["_account--variables"]], "related_expression": ["!isGovernor(_account)", "governors[_account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "info": ["VolumeControl", "_removeGovernor", "GovernorRemoved", ["_account--variables"]], "related_expression": ["isGovernor(_account)", "governors[_account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_owner": "address", "newOwner": "address", "oldOwner": "address"}, "info": ["VolumeControl", "_setOwner", "OwnershipTransferred", ["oldOwner--variables", "newOwner--variables"]], "related_expression": ["oldOwner=_owner", "_owner=newOwner"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyGovernor"], "vars": {"_length": "uint256", "epochLength": "uint256"}, "info": ["VolumeControl", "setEpochLength", "EpochLengthUpdated", ["_length--variables"]], "related_expression": ["epochLength=_length"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_caps": "uint256[]", "_tokens": "address[]", "i": "uint256", "epochVolumeCaps": "mapping(address => uint256)"}, "info": ["VolumeControl", "setEpochVolumeCaps", "EpochVolumeUpdated", ["_tokens_element--variables", "_caps_element--variables"]], "related_expression": ["_tokens.length==_caps.length", "i=0", "epochVolumeCaps[_tokens[i]]=_caps[i]", "i++", "i<_tokens.length", "epochVolumeCaps[_tokens[i]]=_caps[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_="]}, {"isloop": true, "loop_info": [2], "modifier": ["onlyGovernor"], "vars": {"_caps": "uint256[]", "_tokens": "address[]", "i": "uint256", "epochVolumeCaps": "mapping(address => uint256)"}, "info": ["VolumeControl", "setEpochVolumeCaps", "EpochVolumeUpdated", ["_tokens_element--variables", "_caps_element--variables"]], "related_expression": ["_tokens.length==_caps.length", "i=0", "i<_tokens.length", "epochVolumeCaps[_tokens[i]]=_caps[i]"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_paused": "bool"}, "info": ["Pausable", "_pause", "Paused", ["TMP_480--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["whenPaused"], "vars": {"_paused": "bool"}, "info": ["Pausable", "_unpause", "Unpaused", ["TMP_483--variables"]], "related_expression": [], "related_expression_type": []}]