[{"isloop": false, "loop_info": [], "modifier": [], "vars": {"msg.sender": "address", "owner": "address"}, "info": ["BoringOwnable", "constructor", "OwnershipTransferred", ["TMP_29--variables", "msg.sender--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["onlyOwner"], "vars": {"direct": "bool", "newOwner": "address", "owner": "address", "renounce": "bool", "pendingOwner": "address"}, "info": ["BoringOwnable", "transferOwnership", "OwnershipTransferred", ["owner--variables", "newOwner--variables"]], "related_expression": ["direct", "newOwner!=address(0)||renounce"], "related_expression_type": ["Condition", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_pendingOwner": "address", "msg.sender": "address", "owner": "address", "pendingOwner": "address"}, "info": ["BoringOwnable", "claimOwnership", "OwnershipTransferred", ["owner--variables", "_pendingOwner--variables"]], "related_expression": ["_pendingOwner=pendingOwner", "msg.sender==_pendingOwner"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"msg.sender": "address", "owner": "address"}, "info": ["MiniChefV2", "constructor", "OwnershipTransferred", ["TMP_133--variables", "msg.sender--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["onlyOwner"], "vars": {"direct": "bool", "newOwner": "address", "owner": "address", "renounce": "bool", "pendingOwner": "address"}, "info": ["MiniChefV2", "transferOwnership", "OwnershipTransferred", ["owner--variables", "newOwner--variables"]], "related_expression": ["direct", "newOwner!=address(0)||renounce"], "related_expression_type": ["Condition", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_pendingOwner": "address", "msg.sender": "address", "owner": "address", "pendingOwner": "address"}, "info": ["MiniChefV2", "claimOwnership", "OwnershipTransferred", ["owner--variables", "_pendingOwner--variables"]], "related_expression": ["_pendingOwner=pendingOwner", "msg.sender==_pendingOwner"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": ["onlyOwner"], "vars": {"_lpToken": "IERC20", "_rewarder": "IRewarder", "allocPoint": "uint256", "block.timestamp": "uint256", "lpToken": "IERC20[]", "poolInfo": "MiniChefV2.PoolInfo[]", "rewarder": "IRewarder[]", "totalAllocPoint": "uint256"}, "info": ["MiniChefV2", "add", "LogPoolAddition", ["TMP_159--variables", "allocPoint--variables", "_lpToken--variables", "_rewarder--variables"]], "related_expression": ["totalAllocPoint=totalAllocPoint.add(allocPoint)", "lpToken.push(_lpToken)", "rewarder.push(_rewarder)", "poolInfo.push(PoolInfo({allocPoint:allocPoint.to64(),lastRewardTime:block.timestamp.to64(),accSynapsePerShare:0}))"], "related_expression_type": ["AssignmentOperation_=", "CallExpression", "CallExpression", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["onlyOwner"], "vars": {"_allocPoint": "uint256", "_pid": "uint256", "_rewarder": "IRewarder", "overwrite": "bool", "poolInfo": "MiniChefV2.PoolInfo[]", "rewarder": "IRewarder[]", "totalAllocPoint": "uint256"}, "info": ["MiniChefV2", "set", "LogSetPool", ["_pid--variables", "_allocPoint--variables", "_rewarder--variables", "overwrite--variables"]], "related_expression": ["totalAllocPoint=totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint)", "poolInfo[_pid].allocPoint=_allocPoint.to64()", "overwrite", "rewarder[_pid]=_rewarder", "overwrite"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": ["onlyOwner"], "vars": {"_allocPoint": "uint256", "_pid": "uint256", "_rewarder": "IRewarder", "overwrite": "bool", "poolInfo": "MiniChefV2.PoolInfo[]", "rewarder": "IRewarder[]", "totalAllocPoint": "uint256"}, "info": ["MiniChefV2", "set", "LogSetPool", ["_pid--variables", "_allocPoint--variables", "_rewarder--variables", "overwrite--variables"]], "related_expression": ["totalAllocPoint=totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint)", "poolInfo[_pid].allocPoint=_allocPoint.to64()", "not(overwrite)", "overwrite"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "Condition", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": ["onlyOwner"], "vars": {"_allocPoint": "uint256", "_pid": "uint256", "_rewarder": "IRewarder", "overwrite": "bool", "poolInfo": "MiniChefV2.PoolInfo[]", "rewarder": "IRewarder[]", "totalAllocPoint": "uint256"}, "info": ["MiniChefV2", "set", "LogSetPool", ["_pid--variables", "_allocPoint--variables", "rewarder_element--variables", "overwrite--variables"]], "related_expression": ["totalAllocPoint=totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint)", "poolInfo[_pid].allocPoint=_allocPoint.to64()", "overwrite", "rewarder[_pid]=_rewarder", "not(overwrite)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": ["onlyOwner"], "vars": {"_allocPoint": "uint256", "_pid": "uint256", "_rewarder": "IRewarder", "overwrite": "bool", "poolInfo": "MiniChefV2.PoolInfo[]", "rewarder": "IRewarder[]", "totalAllocPoint": "uint256"}, "info": ["MiniChefV2", "set", "LogSetPool", ["_pid--variables", "_allocPoint--variables", "rewarder_element--variables", "overwrite--variables"]], "related_expression": ["totalAllocPoint=totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint)", "poolInfo[_pid].allocPoint=_allocPoint.to64()", "not(overwrite)", "not(overwrite)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "Condition", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": ["onlyOwner"], "vars": {"_synapsePerSecond": "uint256", "synapsePerSecond": "uint256"}, "info": ["MiniChefV2", "setSynapsePerSecond", "LogSynapsePerSecond", ["_synapsePerSecond--variables"]], "related_expression": ["synapsePerSecond=_synapsePerSecond"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"ACC_SYNAPSE_PRECISION": "uint256", "block.timestamp": "uint256", "lpSupply": "uint256", "lpToken": "IERC20[]", "pid": "uint256", "pool": "MiniChefV2.PoolInfo", "poolInfo": "MiniChefV2.PoolInfo[]", "synapsePerSecond": "uint256", "synapseReward": "uint256", "this": "address", "time": "uint256", "totalAllocPoint": "uint256"}, "info": ["MiniChefV2", "updatePool", "LogUpdatePool", ["pid--variables", "pool_element--variables", "lpSupply--variables", "pool_element--variables"]], "related_expression": ["pool=poolInfo[pid]", "block.timestamp>pool.lastRewardTime", "lpSupply=lpToken[pid].balanceOf(address(this))", "lpSupply>0", "time=block.timestamp.sub(pool.lastRewardTime)", "synapseReward=time.mul(synapsePerSecond).mul(pool.allocPoint)/totalAllocPoint", "pool.accSynapsePerShare=pool.accSynapsePerShare.add((synapseReward.mul(ACC_SYNAPSE_PRECISION)/lpSupply).to128())", "pool.lastRewardTime=block.timestamp.to64()", "poolInfo[pid]=pool"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"ACC_SYNAPSE_PRECISION": "uint256", "block.timestamp": "uint256", "lpSupply": "uint256", "lpToken": "IERC20[]", "pid": "uint256", "pool": "MiniChefV2.PoolInfo", "poolInfo": "MiniChefV2.PoolInfo[]", "synapsePerSecond": "uint256", "synapseReward": "uint256", "this": "address", "time": "uint256", "totalAllocPoint": "uint256"}, "info": ["MiniChefV2", "updatePool", "LogUpdatePool", ["pid--variables", "pool_element--variables", "lpSupply--variables", "pool_element--variables"]], "related_expression": ["pool=poolInfo[pid]", "block.timestamp>pool.lastRewardTime", "lpSupply=lpToken[pid].balanceOf(address(this))", "not(lpSupply>0)", "pool.lastRewardTime=block.timestamp.to64()", "poolInfo[pid]=pool"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"ACC_SYNAPSE_PRECISION": "uint256", "_rewarder": "IRewarder", "amount": "uint256", "lpToken": "IERC20[]", "msg.sender": "address", "pid": "uint256", "pool": "MiniChefV2.PoolInfo", "rewarder": "IRewarder[]", "this": "address", "to": "address", "user": "MiniChefV2.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MiniChefV2.UserInfo))"}, "info": ["MiniChefV2", "deposit", "Deposit", ["msg.sender--variables", "pid--variables", "amount--variables", "to--variables"]], "related_expression": ["pool=updatePool(pid)", "user=userInfo[pid][to]", "user.amount=user.amount.add(amount)", "user.rewardDebt=user.rewardDebt.add(int256(amount.mul(pool.accSynapsePerShare)/ACC_SYNAPSE_PRECISION))", "_rewarder=rewarder[pid]", "address(_rewarder)!=address(0)", "_rewarder.onSynapseReward(pid,to,to,0,user.amount)", "lpToken[pid].safeTransferFrom(msg.sender,address(this),amount)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"ACC_SYNAPSE_PRECISION": "uint256", "_rewarder": "IRewarder", "amount": "uint256", "lpToken": "IERC20[]", "msg.sender": "address", "pid": "uint256", "pool": "MiniChefV2.PoolInfo", "rewarder": "IRewarder[]", "this": "address", "to": "address", "user": "MiniChefV2.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MiniChefV2.UserInfo))"}, "info": ["MiniChefV2", "deposit", "Deposit", ["msg.sender--variables", "pid--variables", "amount--variables", "to--variables"]], "related_expression": ["pool=updatePool(pid)", "user=userInfo[pid][to]", "user.amount=user.amount.add(amount)", "user.rewardDebt=user.rewardDebt.add(int256(amount.mul(pool.accSynapsePerShare)/ACC_SYNAPSE_PRECISION))", "_rewarder=rewarder[pid]", "not(address(_rewarder)!=address(0))", "lpToken[pid].safeTransferFrom(msg.sender,address(this),amount)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"ACC_SYNAPSE_PRECISION": "uint256", "_rewarder": "IRewarder", "amount": "uint256", "lpToken": "IERC20[]", "msg.sender": "address", "pid": "uint256", "pool": "MiniChefV2.PoolInfo", "rewarder": "IRewarder[]", "to": "address", "user": "MiniChefV2.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MiniChefV2.UserInfo))"}, "info": ["MiniChefV2", "withdraw", "Withdraw", ["msg.sender--variables", "pid--variables", "amount--variables", "to--variables"]], "related_expression": ["pool=updatePool(pid)", "user=userInfo[pid][msg.sender]", "user.rewardDebt=user.rewardDebt.sub(int256(amount.mul(pool.accSynapsePerShare)/ACC_SYNAPSE_PRECISION))", "user.amount=user.amount.sub(amount)", "_rewarder=rewarder[pid]", "address(_rewarder)!=address(0)", "_rewarder.onSynapseReward(pid,msg.sender,to,0,user.amount)", "lpToken[pid].safeTransfer(to,amount)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"ACC_SYNAPSE_PRECISION": "uint256", "_rewarder": "IRewarder", "amount": "uint256", "lpToken": "IERC20[]", "msg.sender": "address", "pid": "uint256", "pool": "MiniChefV2.PoolInfo", "rewarder": "IRewarder[]", "to": "address", "user": "MiniChefV2.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MiniChefV2.UserInfo))"}, "info": ["MiniChefV2", "withdraw", "Withdraw", ["msg.sender--variables", "pid--variables", "amount--variables", "to--variables"]], "related_expression": ["pool=updatePool(pid)", "user=userInfo[pid][msg.sender]", "user.rewardDebt=user.rewardDebt.sub(int256(amount.mul(pool.accSynapsePerShare)/ACC_SYNAPSE_PRECISION))", "user.amount=user.amount.sub(amount)", "_rewarder=rewarder[pid]", "not(address(_rewarder)!=address(0))", "lpToken[pid].safeTransfer(to,amount)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"ACC_SYNAPSE_PRECISION": "uint256", "SYNAPSE": "IERC20", "_pendingSynapse": "uint256", "_rewarder": "IRewarder", "accumulatedSynapse": "int256", "msg.sender": "address", "pid": "uint256", "pool": "MiniChefV2.PoolInfo", "rewarder": "IRewarder[]", "to": "address", "user": "MiniChefV2.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MiniChefV2.UserInfo))"}, "info": ["MiniChefV2", "harvest", "Harvest", ["msg.sender--variables", "pid--variables", "_pendingSynapse--variables"]], "related_expression": ["pool=updatePool(pid)", "user=userInfo[pid][msg.sender]", "accumulatedSynapse=int256(user.amount.mul(pool.accSynapsePerShare)/ACC_SYNAPSE_PRECISION)", "_pendingSynapse=accumulatedSynapse.sub(user.rewardDebt).toUInt256()", "user.rewardDebt=accumulatedSynapse", "_pendingSynapse!=0", "SYNAPSE.safeTransfer(to,_pendingSynapse)", "_rewarder=rewarder[pid]", "address(_rewarder)!=address(0)", "_rewarder.onSynapseReward(pid,msg.sender,to,_pendingSynapse,user.amount)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"ACC_SYNAPSE_PRECISION": "uint256", "SYNAPSE": "IERC20", "_pendingSynapse": "uint256", "_rewarder": "IRewarder", "accumulatedSynapse": "int256", "msg.sender": "address", "pid": "uint256", "pool": "MiniChefV2.PoolInfo", "rewarder": "IRewarder[]", "to": "address", "user": "MiniChefV2.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MiniChefV2.UserInfo))"}, "info": ["MiniChefV2", "harvest", "Harvest", ["msg.sender--variables", "pid--variables", "_pendingSynapse--variables"]], "related_expression": ["pool=updatePool(pid)", "user=userInfo[pid][msg.sender]", "accumulatedSynapse=int256(user.amount.mul(pool.accSynapsePerShare)/ACC_SYNAPSE_PRECISION)", "_pendingSynapse=accumulatedSynapse.sub(user.rewardDebt).toUInt256()", "user.rewardDebt=accumulatedSynapse", "_pendingSynapse!=0", "SYNAPSE.safeTransfer(to,_pendingSynapse)", "_rewarder=rewarder[pid]", "not(address(_rewarder)!=address(0))"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression", "AssignmentOperation_=", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"ACC_SYNAPSE_PRECISION": "uint256", "SYNAPSE": "IERC20", "_pendingSynapse": "uint256", "_rewarder": "IRewarder", "accumulatedSynapse": "int256", "msg.sender": "address", "pid": "uint256", "pool": "MiniChefV2.PoolInfo", "rewarder": "IRewarder[]", "to": "address", "user": "MiniChefV2.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MiniChefV2.UserInfo))"}, "info": ["MiniChefV2", "harvest", "Harvest", ["msg.sender--variables", "pid--variables", "_pendingSynapse--variables"]], "related_expression": ["pool=updatePool(pid)", "user=userInfo[pid][msg.sender]", "accumulatedSynapse=int256(user.amount.mul(pool.accSynapsePerShare)/ACC_SYNAPSE_PRECISION)", "_pendingSynapse=accumulatedSynapse.sub(user.rewardDebt).toUInt256()", "user.rewardDebt=accumulatedSynapse", "not(_pendingSynapse!=0)", "_rewarder=rewarder[pid]", "address(_rewarder)!=address(0)", "_rewarder.onSynapseReward(pid,msg.sender,to,_pendingSynapse,user.amount)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"ACC_SYNAPSE_PRECISION": "uint256", "SYNAPSE": "IERC20", "_pendingSynapse": "uint256", "_rewarder": "IRewarder", "accumulatedSynapse": "int256", "msg.sender": "address", "pid": "uint256", "pool": "MiniChefV2.PoolInfo", "rewarder": "IRewarder[]", "to": "address", "user": "MiniChefV2.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MiniChefV2.UserInfo))"}, "info": ["MiniChefV2", "harvest", "Harvest", ["msg.sender--variables", "pid--variables", "_pendingSynapse--variables"]], "related_expression": ["pool=updatePool(pid)", "user=userInfo[pid][msg.sender]", "accumulatedSynapse=int256(user.amount.mul(pool.accSynapsePerShare)/ACC_SYNAPSE_PRECISION)", "_pendingSynapse=accumulatedSynapse.sub(user.rewardDebt).toUInt256()", "user.rewardDebt=accumulatedSynapse", "not(_pendingSynapse!=0)", "_rewarder=rewarder[pid]", "not(address(_rewarder)!=address(0))"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"ACC_SYNAPSE_PRECISION": "uint256", "SYNAPSE": "IERC20", "_pendingSynapse": "uint256", "_rewarder": "IRewarder", "accumulatedSynapse": "int256", "amount": "uint256", "lpToken": "IERC20[]", "msg.sender": "address", "pid": "uint256", "pool": "MiniChefV2.PoolInfo", "rewarder": "IRewarder[]", "to": "address", "user": "MiniChefV2.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MiniChefV2.UserInfo))"}, "info": ["MiniChefV2", "withdrawAndHarvest", "Withdraw", ["msg.sender--variables", "pid--variables", "amount--variables", "to--variables"]], "related_expression": ["pool=updatePool(pid)", "user=userInfo[pid][msg.sender]", "user.rewardDebt=accumulatedSynapse.sub(int256(amount.mul(pool.accSynapsePerShare)/ACC_SYNAPSE_PRECISION))", "user.amount=user.amount.sub(amount)", "SYNAPSE.safeTransfer(to,_pendingSynapse)", "_rewarder=rewarder[pid]", "address(_rewarder)!=address(0)", "_rewarder.onSynapseReward(pid,msg.sender,to,_pendingSynapse,user.amount)", "lpToken[pid].safeTransfer(to,amount)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"ACC_SYNAPSE_PRECISION": "uint256", "SYNAPSE": "IERC20", "_pendingSynapse": "uint256", "_rewarder": "IRewarder", "accumulatedSynapse": "int256", "amount": "uint256", "lpToken": "IERC20[]", "msg.sender": "address", "pid": "uint256", "pool": "MiniChefV2.PoolInfo", "rewarder": "IRewarder[]", "to": "address", "user": "MiniChefV2.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MiniChefV2.UserInfo))"}, "info": ["MiniChefV2", "withdrawAndHarvest", "Withdraw", ["msg.sender--variables", "pid--variables", "amount--variables", "to--variables"]], "related_expression": ["pool=updatePool(pid)", "user=userInfo[pid][msg.sender]", "user.rewardDebt=accumulatedSynapse.sub(int256(amount.mul(pool.accSynapsePerShare)/ACC_SYNAPSE_PRECISION))", "user.amount=user.amount.sub(amount)", "SYNAPSE.safeTransfer(to,_pendingSynapse)", "_rewarder=rewarder[pid]", "not(address(_rewarder)!=address(0))", "lpToken[pid].safeTransfer(to,amount)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"ACC_SYNAPSE_PRECISION": "uint256", "SYNAPSE": "IERC20", "_pendingSynapse": "uint256", "_rewarder": "IRewarder", "accumulatedSynapse": "int256", "amount": "uint256", "lpToken": "IERC20[]", "msg.sender": "address", "pid": "uint256", "pool": "MiniChefV2.PoolInfo", "rewarder": "IRewarder[]", "to": "address", "user": "MiniChefV2.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MiniChefV2.UserInfo))"}, "info": ["MiniChefV2", "withdrawAndHarvest", "Harvest", ["msg.sender--variables", "pid--variables", "_pendingSynapse--variables"]], "related_expression": ["pool=updatePool(pid)", "user=userInfo[pid][msg.sender]", "accumulatedSynapse=int256(user.amount.mul(pool.accSynapsePerShare)/ACC_SYNAPSE_PRECISION)", "_pendingSynapse=accumulatedSynapse.sub(user.rewardDebt).toUInt256()", "user.rewardDebt=accumulatedSynapse.sub(int256(amount.mul(pool.accSynapsePerShare)/ACC_SYNAPSE_PRECISION))", "user.amount=user.amount.sub(amount)", "SYNAPSE.safeTransfer(to,_pendingSynapse)", "_rewarder=rewarder[pid]", "address(_rewarder)!=address(0)", "_rewarder.onSynapseReward(pid,msg.sender,to,_pendingSynapse,user.amount)", "lpToken[pid].safeTransfer(to,amount)", "Withdraw(msg.sender,pid,amount,to)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression", "CallExpression", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"ACC_SYNAPSE_PRECISION": "uint256", "SYNAPSE": "IERC20", "_pendingSynapse": "uint256", "_rewarder": "IRewarder", "accumulatedSynapse": "int256", "amount": "uint256", "lpToken": "IERC20[]", "msg.sender": "address", "pid": "uint256", "pool": "MiniChefV2.PoolInfo", "rewarder": "IRewarder[]", "to": "address", "user": "MiniChefV2.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MiniChefV2.UserInfo))"}, "info": ["MiniChefV2", "withdrawAndHarvest", "Harvest", ["msg.sender--variables", "pid--variables", "_pendingSynapse--variables"]], "related_expression": ["pool=updatePool(pid)", "user=userInfo[pid][msg.sender]", "accumulatedSynapse=int256(user.amount.mul(pool.accSynapsePerShare)/ACC_SYNAPSE_PRECISION)", "_pendingSynapse=accumulatedSynapse.sub(user.rewardDebt).toUInt256()", "user.rewardDebt=accumulatedSynapse.sub(int256(amount.mul(pool.accSynapsePerShare)/ACC_SYNAPSE_PRECISION))", "user.amount=user.amount.sub(amount)", "SYNAPSE.safeTransfer(to,_pendingSynapse)", "_rewarder=rewarder[pid]", "not(address(_rewarder)!=address(0))", "lpToken[pid].safeTransfer(to,amount)", "Withdraw(msg.sender,pid,amount,to)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_rewarder": "IRewarder", "amount": "uint256", "lpToken": "IERC20[]", "msg.sender": "address", "pid": "uint256", "rewarder": "IRewarder[]", "to": "address", "user": "MiniChefV2.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MiniChefV2.UserInfo))"}, "info": ["MiniChefV2", "emergencyWithdraw", "EmergencyWithdraw", ["msg.sender--variables", "pid--variables", "amount--variables", "to--variables"]], "related_expression": ["user=userInfo[pid][msg.sender]", "amount=user.amount", "user.amount=0", "user.rewardDebt=0", "_rewarder=rewarder[pid]", "address(_rewarder)!=address(0)", "_rewarder.onSynapseReward(pid,msg.sender,to,0,0)", "lpToken[pid].safeTransfer(to,amount)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_rewarder": "IRewarder", "amount": "uint256", "lpToken": "IERC20[]", "msg.sender": "address", "pid": "uint256", "rewarder": "IRewarder[]", "to": "address", "user": "MiniChefV2.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MiniChefV2.UserInfo))"}, "info": ["MiniChefV2", "emergencyWithdraw", "EmergencyWithdraw", ["msg.sender--variables", "pid--variables", "amount--variables", "to--variables"]], "related_expression": ["user=userInfo[pid][msg.sender]", "amount=user.amount", "user.amount=0", "user.rewardDebt=0", "_rewarder=rewarder[pid]", "not(address(_rewarder)!=address(0))", "lpToken[pid].safeTransfer(to,amount)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression"]}]