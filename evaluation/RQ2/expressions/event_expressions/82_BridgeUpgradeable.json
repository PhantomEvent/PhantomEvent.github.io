[{"isloop": false, "loop_info": [], "modifier": [], "vars": {"newImplementation": "address"}, "info": ["BridgeUpgradeable", "_upgradeTo", "Upgraded", ["newImplementation--variables"]], "related_expression": ["_setImplementation(newImplementation)"], "related_expression_type": ["CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"newAdmin": "address"}, "info": ["BridgeUpgradeable", "_changeAdmin", "AdminChanged", ["TMP_49--variables", "newAdmin--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"data": "bytes", "forceCall": "bool", "newBeacon": "address"}, "info": ["BridgeUpgradeable", "_upgradeBeaconToAndCall", "BeaconUpgraded", ["newBeacon--variables"]], "related_expression": ["_setBeacon(newBeacon)"], "related_expression_type": ["CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_roles": "mapping(bytes32 => AccessControlUpgradeable.RoleData)", "adminRole": "bytes32", "previousAdminRole": "bytes32", "role": "bytes32"}, "info": ["BridgeUpgradeable", "_setRoleAdmin", "RoleAdminChanged", ["role--variables", "previousAdminRole--variables", "adminRole--variables"]], "related_expression": ["previousAdminRole=getRoleAdmin(role)", "_roles[role].adminRole=adminRole"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_roles": "mapping(bytes32 => AccessControlUpgradeable.RoleData)", "account": "address", "role": "bytes32"}, "info": ["BridgeUpgradeable", "_grantRole", "RoleGranted", ["role--variables", "account--variables", "TMP_107--variables"]], "related_expression": ["!hasRole(role,account)", "_roles[role].members[account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_roles": "mapping(bytes32 => AccessControlUpgradeable.RoleData)", "account": "address", "role": "bytes32"}, "info": ["BridgeUpgradeable", "_revokeRole", "RoleRevoked", ["role--variables", "account--variables", "TMP_110--variables"]], "related_expression": ["hasRole(role,account)", "_roles[role].members[account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_paused": "bool"}, "info": ["BridgeUpgradeable", "_pause", "Paused", ["TMP_124--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["whenPaused"], "vars": {"_paused": "bool"}, "info": ["BridgeUpgradeable", "_unpause", "Unpaused", ["TMP_127--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["nonReentrant", "getRoleAdmin", "onlyRole"], "vars": {"RELAYER_ROLE": "bytes32", "_voter": "IVoterUpgradeable", "account": "address", "role": "bytes32", "totalRelayers": "uint256"}, "info": ["BridgeUpgradeable", "grantRole", "RelayerAdded", ["account--variables"]], "related_expression": ["super.grantRole(role,account)", "role==RELAYER_ROLE&&_voter.balanceOf(account)==0", "_voter.mint(account)"], "related_expression_type": ["CallExpression", "Condition", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["nonReentrant", "getRoleAdmin", "onlyRole"], "vars": {"RELAYER_ROLE": "bytes32", "_voter": "IVoterUpgradeable", "account": "address", "role": "bytes32", "totalRelayers": "uint256"}, "info": ["BridgeUpgradeable", "revokeRole", "RelayerRemoved", ["account--variables"]], "related_expression": ["super.revokeRole(role,account)", "role==RELAYER_ROLE&&_voter.balanceOf(account)==1000000000000000000", "_voter.burn(account)"], "related_expression_type": ["CallExpression", "Condition", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["onlyRole", "isWhitelistEnabled"], "vars": {"DEFAULT_ADMIN_ROLE": "bytes32", "_beneficiary": "address", "_whitelist": "mapping(address => bool)"}, "info": ["BridgeUpgradeable", "addToWhitelist", "AddedWhitelist", ["_beneficiary--variables"]], "related_expression": ["_whitelist[_beneficiary]=true"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyRole", "isWhitelistEnabled"], "vars": {"DEFAULT_ADMIN_ROLE": "bytes32", "_beneficiary": "address", "_whitelist": "mapping(address => bool)"}, "info": ["BridgeUpgradeable", "removeFromWhitelist", "RemovedWhitelist", ["_beneficiary--variables"]], "related_expression": ["_whitelist[_beneficiary]=false"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyRole"], "vars": {"DEFAULT_ADMIN_ROLE": "bytes32", "value": "bool", "_whitelistEnabled": "bool"}, "info": ["BridgeUpgradeable", "setWhitelisting", "WhitelistingSetting", ["value--variables"]], "related_expression": ["_whitelistEnabled=value"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyRole"], "vars": {"DEFAULT_ADMIN_ROLE": "bytes32", "destChainId": "uint8", "isUnsupported": "bool", "_unsupportedChains": "mapping(uint8 => bool)"}, "info": ["BridgeUpgradeable", "setUnsupportedChain", "UnsupportedChain", ["destChainId--variables", "isUnsupported--variables"]], "related_expression": ["_unsupportedChains[destChainId]=isUnsupported"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyRole"], "vars": {"DEFAULT_ADMIN_ROLE": "bytes32", "_quorum": "uint64", "newQuorum": "uint256"}, "info": ["BridgeUpgradeable", "adminChangeQuorum", "quorumChanged", ["_quorum--variables"]], "related_expression": ["_quorum=uint64(newQuorum)"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyRole"], "vars": {"DEFAULT_ADMIN_ROLE": "bytes32", "newExpiry": "uint256", "_expiry": "uint256"}, "info": ["BridgeUpgradeable", "adminChangeExpiry", "expiryChanged", ["newExpiry--variables"]], "related_expression": ["_expiry=newExpiry"], "related_expression_type": ["AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["nonReentrant", "onlyRole"], "vars": {"EMERGENCY_ROLE": "bytes32", "amount": "uint256", "handler": "IERCHandler", "handlerAddress": "address", "recipient": "address", "tokenAddress": "address"}, "info": ["BridgeUpgradeable", "adminWithdraw", "AdminWithdraw", ["handlerAddress--variables", "tokenAddress--variables", "recipient--variables", "amount--variables"]], "related_expression": ["handler=IERCHandler(handlerAddress)", "handler.withdraw(tokenAddress,recipient,amount)"], "related_expression_type": ["AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["nonReentrant", "onlyRole"], "vars": {"EMERGENCY_ROLE": "bytes32", "amount": "uint256", "handler": "IERCHandler", "handlerAddress": "address", "recipient": "address", "tokenAddress": "address"}, "info": ["BridgeUpgradeable", "adminWithdrawFees", "AdminWithdraw", ["handlerAddress--variables", "tokenAddress--variables", "recipient--variables", "amount--variables"]], "related_expression": ["handler=IERCHandler(handlerAddress)", "handler.withdrawFees(tokenAddress,recipient,amount)"], "related_expression_type": ["AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["notUnsupportedChain", "whenNotPaused"], "vars": {"_depositCounts": "mapping(uint8 => uint64)", "_destChainID": "uint8", "_genericWhitelist": "mapping(address => bool)", "_resourceID": "bytes32", "_resourceIDToHandlerAddress": "mapping(bytes32 => address)", "_sequencerWhitelist": "mapping(address => bool)", "depositNonce": "uint64", "msg.sender": "address"}, "info": ["BridgeUpgradeable", "genericDeposit", "Deposit", ["_destChainID--variables", "_resourceID--variables", "depositNonce--variables", "0--uint256"]], "related_expression": ["notUnsupportedChain(_destChainID)", "_genericWhitelist[_resourceIDToHandlerAddress[_resourceID]]==true||_sequencerWhitelist[_resourceIDToHandlerAddress[_resourceID]]==true", "_resourceIDToHandlerAddress[_resourceID]==msg.sender", "depositNonce=++_depositCounts[_destChainID]"], "related_expression_type": ["CallExpression", "Condition", "Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_depositCounts": "mapping(uint8 => uint64)", "_resourceIDToHandlerAddress": "mapping(bytes32 => address)", "data": "bytes", "dataTx": "bytes[]", "depositHandler": "IDepositExecute", "destinationChainID": "uint8", "feeTokenAddress": "address", "flags": "uint256[]", "msg.sender": "address", "path": "address[]", "resourceID": "bytes32", "swapDetails": "IDepositExecute.SwapInfo"}, "info": ["BridgeUpgradeable", "_deposit", "Deposit", ["destinationChainID--variables", "resourceID--variables", "swapDetails_element--variables", "swapDetails_element--variables"]], "related_expression": ["swapDetails=unpackDepositData(data)", "swapDetails.depositer=msg.sender", "swapDetails.flags=flags", "swapDetails.path=path", "swapDetails.feeTokenAddress=feeTokenAddress", "swapDetails.dataTx=dataTx", "swapDetails.handler=_resourceIDToHandlerAddress[resourceID]", "swapDetails.handler!=address(0)", "swapDetails.depositNonce=++_depositCounts[destinationChainID]", "depositHandler=IDepositExecute(swapDetails.handler)", "depositHandler.deposit(resourceID,destinationChainID,swapDetails.depositNonce,swapDetails)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"amount": "uint256", "depositHandler": "ILiquidityPool", "handler": "address", "msg.sender": "address", "tokenAddress": "address"}, "info": ["BridgeUpgradeable", "stake", "Stake", ["msg.sender--variables", "amount--variables", "tokenAddress--variables"]], "related_expression": ["depositHandler.stake(msg.sender,tokenAddress,amount)"], "related_expression_type": ["CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["nonReentrant", "whenNotPaused"], "vars": {"WETH": "address", "amount": "uint256", "depositHandler": "ILiquidityPool", "ercHandler": "IERCHandler", "handler": "address", "msg.sender": "address", "msg.value": "uint256"}, "info": ["BridgeUpgradeable", "stakeETH", "Stake", ["msg.sender--variables", "amount--variables", "WETH--variables"]], "related_expression": ["depositHandler=ILiquidityPool(handler)", "ercHandler=IERCHandler(handler)", "WETH=ercHandler._WETH()", "amount=msg.value", "amount>0", "IWETH(WETH).deposit{value:amount}()", "IWETH(WETH).transfer(handler,amount)", "depositHandler.stakeETH(msg.sender,WETH,amount)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression", "Condition", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"amount": "uint256", "depositHandler": "ILiquidityPool", "handler": "address", "msg.sender": "address", "tokenAddress": "address"}, "info": ["BridgeUpgradeable", "unstake", "Unstake", ["msg.sender--variables", "amount--variables", "tokenAddress--variables"]], "related_expression": ["depositHandler.unstake(msg.sender,tokenAddress,amount)"], "related_expression_type": ["CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["nonReentrant", "whenNotPaused"], "vars": {"WETH": "address", "amount": "uint256", "depositHandler": "ILiquidityPool", "ercHandler": "IERCHandler", "handler": "address", "msg.sender": "address"}, "info": ["BridgeUpgradeable", "unstakeETH", "Unstake", ["msg.sender--variables", "amount--variables", "WETH--variables"]], "related_expression": ["depositHandler=ILiquidityPool(handler)", "ercHandler=IERCHandler(handler)", "WETH=ercHandler._WETH()", "depositHandler.unstakeETH(msg.sender,WETH,amount)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["isResourceID", "onlyRole", "whenNotPaused"], "vars": {"RELAYER_ROLE": "bytes32", "_expiry": "uint256", "_isNonceExecuted": "mapping(uint8 => mapping(uint64 => bool))", "_nonceCheckpoint": "mapping(uint8 => uint64)", "_proposals": "mapping(bytes32 => uint256)", "_quorum": "uint64", "_voter": "IVoterUpgradeable", "block.number": "uint256", "chainID": "uint8", "dataHash": "bytes32", "depositNonce": "uint64", "id": "uint256", "msg.sender": "address", "proposalHash": "bytes32", "resourceID": "bytes32"}, "info": ["BridgeUpgradeable", "voteProposal", "ProposalEvent", ["chainID--variables", "depositNonce--variables", "ProposalStatus_element--variables", "dataHash--variables"]], "related_expression": ["(!_isNonceExecuted[chainID][depositNonce])&&(_nonceCheckpoint[chainID]<depositNonce)", "proposalHash=keccak256(bytes)(abi.encodePacked(chainID,depositNonce,dataHash,resourceID))", "_proposals[proposalHash]==0"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": ["isResourceID", "onlyRole", "whenNotPaused"], "vars": {"RELAYER_ROLE": "bytes32", "_expiry": "uint256", "_isNonceExecuted": "mapping(uint8 => mapping(uint64 => bool))", "_nonceCheckpoint": "mapping(uint8 => uint64)", "_proposals": "mapping(bytes32 => uint256)", "_quorum": "uint64", "_voter": "IVoterUpgradeable", "block.number": "uint256", "chainID": "uint8", "dataHash": "bytes32", "depositNonce": "uint64", "id": "uint256", "msg.sender": "address", "proposalHash": "bytes32", "resourceID": "bytes32"}, "info": ["BridgeUpgradeable", "voteProposal", "ProposalEvent", ["chainID--variables", "depositNonce--variables", "TMP_327--variables", "dataHash--variables"]], "related_expression": ["(!_isNonceExecuted[chainID][depositNonce])&&(_nonceCheckpoint[chainID]<depositNonce)", "proposalHash=keccak256(bytes)(abi.encodePacked(chainID,depositNonce,dataHash,resourceID))", "not(_proposals[proposalHash]==0)", "_voter.fetchIsExpired(_proposals[proposalHash])", "_voter.setStatus(_proposals[proposalHash])"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "Condition", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["isResourceID", "onlyRole", "whenNotPaused"], "vars": {"RELAYER_ROLE": "bytes32", "_expiry": "uint256", "_isNonceExecuted": "mapping(uint8 => mapping(uint64 => bool))", "_nonceCheckpoint": "mapping(uint8 => uint64)", "_proposals": "mapping(bytes32 => uint256)", "_quorum": "uint64", "_voter": "IVoterUpgradeable", "block.number": "uint256", "chainID": "uint8", "dataHash": "bytes32", "depositNonce": "uint64", "id": "uint256", "msg.sender": "address", "proposalHash": "bytes32", "resourceID": "bytes32"}, "info": ["BridgeUpgradeable", "voteProposal", "ProposalVote", ["chainID--variables", "depositNonce--variables", "TMP_332--variables", "dataHash--variables"]], "related_expression": ["(!_isNonceExecuted[chainID][depositNonce])&&(_nonceCheckpoint[chainID]<depositNonce)", "proposalHash=keccak256(bytes)(abi.encodePacked(chainID,depositNonce,dataHash,resourceID))", "_proposals[proposalHash]==0", "id=_voter.createProposal(block.number+_expiry,_quorum)", "_proposals[proposalHash]=id", "ProposalEvent(chainID,depositNonce,IVoterUpgradeable.ProposalStatus.Active,dataHash)", "_voter.getStatus(_proposals[proposalHash])!=IVoterUpgradeable.ProposalStatus.Cancelled", "_voter.vote(_proposals[proposalHash],1,msg.sender)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "CallExpression", "Condition", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["isResourceID", "onlyRole", "whenNotPaused"], "vars": {"RELAYER_ROLE": "bytes32", "_expiry": "uint256", "_isNonceExecuted": "mapping(uint8 => mapping(uint64 => bool))", "_nonceCheckpoint": "mapping(uint8 => uint64)", "_proposals": "mapping(bytes32 => uint256)", "_quorum": "uint64", "_voter": "IVoterUpgradeable", "block.number": "uint256", "chainID": "uint8", "dataHash": "bytes32", "depositNonce": "uint64", "id": "uint256", "msg.sender": "address", "proposalHash": "bytes32", "resourceID": "bytes32"}, "info": ["BridgeUpgradeable", "voteProposal", "ProposalVote", ["chainID--variables", "depositNonce--variables", "TMP_332--variables", "dataHash--variables"]], "related_expression": ["(!_isNonceExecuted[chainID][depositNonce])&&(_nonceCheckpoint[chainID]<depositNonce)", "proposalHash=keccak256(bytes)(abi.encodePacked(chainID,depositNonce,dataHash,resourceID))", "not(_proposals[proposalHash]==0)", "not(_voter.fetchIsExpired(_proposals[proposalHash]))", "_voter.getStatus(_proposals[proposalHash])!=IVoterUpgradeable.ProposalStatus.Cancelled", "_voter.vote(_proposals[proposalHash],1,msg.sender)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "Condition", "Condition", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["isResourceID", "onlyRole", "whenNotPaused"], "vars": {"RELAYER_ROLE": "bytes32", "_expiry": "uint256", "_isNonceExecuted": "mapping(uint8 => mapping(uint64 => bool))", "_nonceCheckpoint": "mapping(uint8 => uint64)", "_proposals": "mapping(bytes32 => uint256)", "_quorum": "uint64", "_voter": "IVoterUpgradeable", "block.number": "uint256", "chainID": "uint8", "dataHash": "bytes32", "depositNonce": "uint64", "id": "uint256", "msg.sender": "address", "proposalHash": "bytes32", "resourceID": "bytes32"}, "info": ["BridgeUpgradeable", "voteProposal", "ProposalEvent", ["chainID--variables", "depositNonce--variables", "TMP_336--variables", "dataHash--variables"]], "related_expression": ["(!_isNonceExecuted[chainID][depositNonce])&&(_nonceCheckpoint[chainID]<depositNonce)", "proposalHash=keccak256(bytes)(abi.encodePacked(chainID,depositNonce,dataHash,resourceID))", "_proposals[proposalHash]==0", "id=_voter.createProposal(block.number+_expiry,_quorum)", "_proposals[proposalHash]=id", "ProposalEvent(chainID,depositNonce,IVoterUpgradeable.ProposalStatus.Active,dataHash)", "_voter.getStatus(_proposals[proposalHash])!=IVoterUpgradeable.ProposalStatus.Cancelled", "_voter.vote(_proposals[proposalHash],1,msg.sender)", "ProposalVote(chainID,depositNonce,_voter.getStatus(_proposals[proposalHash]),dataHash)", "_voter.getStatus(_proposals[proposalHash])==IVoterUpgradeable.ProposalStatus.Passed"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "CallExpression", "Condition", "CallExpression", "CallExpression", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": ["isResourceID", "onlyRole", "whenNotPaused"], "vars": {"RELAYER_ROLE": "bytes32", "_expiry": "uint256", "_isNonceExecuted": "mapping(uint8 => mapping(uint64 => bool))", "_nonceCheckpoint": "mapping(uint8 => uint64)", "_proposals": "mapping(bytes32 => uint256)", "_quorum": "uint64", "_voter": "IVoterUpgradeable", "block.number": "uint256", "chainID": "uint8", "dataHash": "bytes32", "depositNonce": "uint64", "id": "uint256", "msg.sender": "address", "proposalHash": "bytes32", "resourceID": "bytes32"}, "info": ["BridgeUpgradeable", "voteProposal", "ProposalEvent", ["chainID--variables", "depositNonce--variables", "TMP_336--variables", "dataHash--variables"]], "related_expression": ["(!_isNonceExecuted[chainID][depositNonce])&&(_nonceCheckpoint[chainID]<depositNonce)", "proposalHash=keccak256(bytes)(abi.encodePacked(chainID,depositNonce,dataHash,resourceID))", "not(_proposals[proposalHash]==0)", "not(_voter.fetchIsExpired(_proposals[proposalHash]))", "_voter.getStatus(_proposals[proposalHash])!=IVoterUpgradeable.ProposalStatus.Cancelled", "_voter.vote(_proposals[proposalHash],1,msg.sender)", "ProposalVote(chainID,depositNonce,_voter.getStatus(_proposals[proposalHash]),dataHash)", "_voter.getStatus(_proposals[proposalHash])==IVoterUpgradeable.ProposalStatus.Passed"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "Condition", "Condition", "CallExpression", "CallExpression", "Condition"]}, {"isloop": false, "loop_info": [], "modifier": ["onlyRole", "whenNotPaused"], "vars": {"RELAYER_ROLE": "bytes32", "_genericWhitelist": "mapping(address => bool)", "_isNonceExecuted": "mapping(uint8 => mapping(uint64 => bool))", "_nonceCheckpoint": "mapping(uint8 => uint64)", "_proposals": "mapping(bytes32 => uint256)", "_resourceIDToHandlerAddress": "mapping(bytes32 => address)", "_sequencerWhitelist": "mapping(address => bool)", "_voter": "IVoterUpgradeable", "chainID": "uint8", "currentStatus": "IVoterUpgradeable.ProposalStatus", "data": "bytes", "dataHash": "bytes32", "dataTx": "bytes[]", "depositHandler": "IDepositExecute", "depositNonce": "uint64", "flags": "uint256[]", "genericHandler": "IGenericHandler", "path": "address[]", "proposalHash": "bytes32", "resourceID": "bytes32", "sequencerHandler": "ISequencerHandler", "settlementToken": "address", "swapDetails": "IDepositExecute.SwapInfo"}, "info": ["BridgeUpgradeable", "executeProposal", "ProposalEvent", ["chainID--variables", "depositNonce--variables", "ProposalStatus_element--variables", "dataHash--variables"]], "related_expression": ["(!_isNonceExecuted[chainID][depositNonce])&&(_nonceCheckpoint[chainID]<depositNonce)", "dataHash=keccak256(bytes)(abi.encodePacked(_resourceIDToHandlerAddress[resourceID],data))", "proposalHash=keccak256(bytes)(abi.encodePacked(chainID,depositNonce,dataHash,resourceID))", "_genericWhitelist[_resourceIDToHandlerAddress[resourceID]]", "genericHandler=IGenericHandler(_resourceIDToHandlerAddress[resourceID])", "genericHandler.executeProposal(data)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["onlyRole", "whenNotPaused"], "vars": {"RELAYER_ROLE": "bytes32", "_genericWhitelist": "mapping(address => bool)", "_isNonceExecuted": "mapping(uint8 => mapping(uint64 => bool))", "_nonceCheckpoint": "mapping(uint8 => uint64)", "_proposals": "mapping(bytes32 => uint256)", "_resourceIDToHandlerAddress": "mapping(bytes32 => address)", "_sequencerWhitelist": "mapping(address => bool)", "_voter": "IVoterUpgradeable", "chainID": "uint8", "currentStatus": "IVoterUpgradeable.ProposalStatus", "data": "bytes", "dataHash": "bytes32", "dataTx": "bytes[]", "depositHandler": "IDepositExecute", "depositNonce": "uint64", "flags": "uint256[]", "genericHandler": "IGenericHandler", "path": "address[]", "proposalHash": "bytes32", "resourceID": "bytes32", "sequencerHandler": "ISequencerHandler", "settlementToken": "address", "swapDetails": "IDepositExecute.SwapInfo"}, "info": ["BridgeUpgradeable", "executeProposal", "SequencerEvent", ["chainID--variables", "depositNonce--variables", "ProposalStatus_element--variables", "dataHash--variables"]], "related_expression": ["(!_isNonceExecuted[chainID][depositNonce])&&(_nonceCheckpoint[chainID]<depositNonce)", "dataHash=keccak256(bytes)(abi.encodePacked(_resourceIDToHandlerAddress[resourceID],data))", "proposalHash=keccak256(bytes)(abi.encodePacked(chainID,depositNonce,dataHash,resourceID))", "not(_genericWhitelist[_resourceIDToHandlerAddress[resourceID]])", "_sequencerWhitelist[_resourceIDToHandlerAddress[resourceID]]", "sequencerHandler=ISequencerHandler(_resourceIDToHandlerAddress[resourceID])", "sequencerHandler.executeProposal(data)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["onlyRole", "whenNotPaused"], "vars": {"RELAYER_ROLE": "bytes32", "_genericWhitelist": "mapping(address => bool)", "_isNonceExecuted": "mapping(uint8 => mapping(uint64 => bool))", "_nonceCheckpoint": "mapping(uint8 => uint64)", "_proposals": "mapping(bytes32 => uint256)", "_resourceIDToHandlerAddress": "mapping(bytes32 => address)", "_sequencerWhitelist": "mapping(address => bool)", "_voter": "IVoterUpgradeable", "chainID": "uint8", "currentStatus": "IVoterUpgradeable.ProposalStatus", "data": "bytes", "dataHash": "bytes32", "dataTx": "bytes[]", "depositHandler": "IDepositExecute", "depositNonce": "uint64", "flags": "uint256[]", "genericHandler": "IGenericHandler", "path": "address[]", "proposalHash": "bytes32", "resourceID": "bytes32", "sequencerHandler": "ISequencerHandler", "settlementToken": "address", "swapDetails": "IDepositExecute.SwapInfo"}, "info": ["BridgeUpgradeable", "executeProposal", "Settlement", ["chainID--variables", "depositNonce--variables", "settlementToken--variables", "swapDetails_element--variables", "ProposalStatus_element--variables"]], "related_expression": ["(!_isNonceExecuted[chainID][depositNonce])&&(_nonceCheckpoint[chainID]<depositNonce)", "dataHash=keccak256(bytes)(abi.encodePacked(_resourceIDToHandlerAddress[resourceID],data))", "proposalHash=keccak256(bytes)(abi.encodePacked(chainID,depositNonce,dataHash,resourceID))", "not(_genericWhitelist[_resourceIDToHandlerAddress[resourceID]])", "not(_sequencerWhitelist[_resourceIDToHandlerAddress[resourceID]])", "swapDetails=unpackDepositData(data)", "swapDetails.dataTx=dataTx", "swapDetails.flags=flags", "swapDetails.path=path", "swapDetails.index=chainID", "swapDetails.depositNonce=depositNonce", "depositHandler=IDepositExecute(_resourceIDToHandlerAddress[resourceID])", "(settlementToken,swapDetails.returnAmount)=depositHandler.executeProposal(swapDetails,resourceID)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": ["onlyRole", "whenNotPaused"], "vars": {"RELAYER_ROLE": "bytes32", "_genericWhitelist": "mapping(address => bool)", "_isNonceExecuted": "mapping(uint8 => mapping(uint64 => bool))", "_nonceCheckpoint": "mapping(uint8 => uint64)", "_proposals": "mapping(bytes32 => uint256)", "_resourceIDToHandlerAddress": "mapping(bytes32 => address)", "_sequencerWhitelist": "mapping(address => bool)", "_voter": "IVoterUpgradeable", "chainID": "uint8", "currentStatus": "IVoterUpgradeable.ProposalStatus", "data": "bytes", "dataHash": "bytes32", "dataTx": "bytes[]", "depositHandler": "IDepositExecute", "depositNonce": "uint64", "flags": "uint256[]", "genericHandler": "IGenericHandler", "path": "address[]", "proposalHash": "bytes32", "resourceID": "bytes32", "sequencerHandler": "ISequencerHandler", "settlementToken": "address", "swapDetails": "IDepositExecute.SwapInfo"}, "info": ["BridgeUpgradeable", "executeProposal", "ProposalEvent", ["chainID--variables", "depositNonce--variables", "ProposalStatus_element--variables", "dataHash--variables"]], "related_expression": ["(!_isNonceExecuted[chainID][depositNonce])&&(_nonceCheckpoint[chainID]<depositNonce)", "dataHash=keccak256(bytes)(abi.encodePacked(_resourceIDToHandlerAddress[resourceID],data))", "proposalHash=keccak256(bytes)(abi.encodePacked(chainID,depositNonce,dataHash,resourceID))", "not(_genericWhitelist[_resourceIDToHandlerAddress[resourceID]])", "not(_sequencerWhitelist[_resourceIDToHandlerAddress[resourceID]])", "swapDetails=unpackDepositData(data)", "swapDetails.index=chainID", "swapDetails.depositNonce=depositNonce", "depositHandler=IDepositExecute(_resourceIDToHandlerAddress[resourceID])", "Settlement(chainID,depositNonce,settlementToken,swapDetails.returnAmount,IVoterUpgradeable.ProposalStatus.Executed)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_roles": "mapping(bytes32 => AccessControlUpgradeable.RoleData)", "adminRole": "bytes32", "previousAdminRole": "bytes32", "role": "bytes32"}, "info": ["AccessControlUpgradeable", "_setRoleAdmin", "RoleAdminChanged", ["role--variables", "previousAdminRole--variables", "adminRole--variables"]], "related_expression": ["previousAdminRole=getRoleAdmin(role)", "_roles[role].adminRole=adminRole"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_roles": "mapping(bytes32 => AccessControlUpgradeable.RoleData)", "account": "address", "role": "bytes32"}, "info": ["AccessControlUpgradeable", "_grantRole", "RoleGranted", ["role--variables", "account--variables", "TMP_461--variables"]], "related_expression": ["!hasRole(role,account)", "_roles[role].members[account]=true"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"_roles": "mapping(bytes32 => AccessControlUpgradeable.RoleData)", "account": "address", "role": "bytes32"}, "info": ["AccessControlUpgradeable", "_revokeRole", "RoleRevoked", ["role--variables", "account--variables", "TMP_464--variables"]], "related_expression": ["hasRole(role,account)", "_roles[role].members[account]=false"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"newImplementation": "address"}, "info": ["ERC1967UpgradeUpgradeable", "_upgradeTo", "Upgraded", ["newImplementation--variables"]], "related_expression": ["_setImplementation(newImplementation)"], "related_expression_type": ["CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"newAdmin": "address"}, "info": ["ERC1967UpgradeUpgradeable", "_changeAdmin", "AdminChanged", ["TMP_508--variables", "newAdmin--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"data": "bytes", "forceCall": "bool", "newBeacon": "address"}, "info": ["ERC1967UpgradeUpgradeable", "_upgradeBeaconToAndCall", "BeaconUpgraded", ["newBeacon--variables"]], "related_expression": ["_setBeacon(newBeacon)"], "related_expression_type": ["CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"newImplementation": "address"}, "info": ["UUPSUpgradeable", "_upgradeTo", "Upgraded", ["newImplementation--variables"]], "related_expression": ["_setImplementation(newImplementation)"], "related_expression_type": ["CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"newAdmin": "address"}, "info": ["UUPSUpgradeable", "_changeAdmin", "AdminChanged", ["TMP_575--variables", "newAdmin--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": [], "vars": {"data": "bytes", "forceCall": "bool", "newBeacon": "address"}, "info": ["UUPSUpgradeable", "_upgradeBeaconToAndCall", "BeaconUpgraded", ["newBeacon--variables"]], "related_expression": ["_setBeacon(newBeacon)"], "related_expression_type": ["CallExpression"]}, {"isloop": false, "loop_info": [], "modifier": ["whenNotPaused"], "vars": {"_paused": "bool"}, "info": ["PausableUpgradeable", "_pause", "Paused", ["TMP_634--variables"]], "related_expression": [], "related_expression_type": []}, {"isloop": false, "loop_info": [], "modifier": ["whenPaused"], "vars": {"_paused": "bool"}, "info": ["PausableUpgradeable", "_unpause", "Unpaused", ["TMP_637--variables"]], "related_expression": [], "related_expression_type": []}]