[{"name": "onlyInitializing", "arguments": [], "related_expression": ["_initializing"], "vars": {"_initializing": "bool"}, "related_expression_type": ["Condition"]}, {"name": "onlyProxy", "arguments": [], "related_expression": ["address(this)!=__self", "_getImplementation()==__self"], "vars": {"__self": "address", "this": "address"}, "related_expression_type": ["Condition", "Condition"]}, {"name": "onlyRole", "arguments": ["role--bytes32"], "related_expression": [], "vars": {"role": "bytes32"}, "related_expression_type": []}, {"name": "getRoleAdmin", "arguments": ["role--bytes32"], "related_expression": [], "vars": {"_roles": "mapping(bytes32 => AccessControlUpgradeable.RoleData)", "role": "bytes32"}, "related_expression_type": []}, {"name": "initializer", "arguments": [], "related_expression": ["_isConstructor()", "!_initialized"], "vars": {"_initialized": "bool", "_initializing": "bool", "isTopLevelCall": "bool"}, "related_expression_type": ["Condition", "Condition"]}, {"name": "isBridge", "arguments": [], "related_expression": ["msg.sender==bridge"], "vars": {"bridge": "address", "msg.sender": "address"}, "related_expression_type": ["Condition"]}, {"name": "isValidquorum", "arguments": ["quorum--uint64"], "related_expression": ["(quorum>0)&&(quorum<=10000)"], "vars": {"quorum": "uint64"}, "related_expression_type": ["Condition"]}, {"name": "isvalidIssue", "arguments": ["_issue--uint256"], "related_expression": ["issueMap[_issue].status==ProposalStatus.Active"], "vars": {"_issue": "uint256", "issueMap": "mapping(uint256 => VoterUpgradeable.issueStruct)"}, "related_expression_type": ["Condition"]}, {"name": "isNotVoted", "arguments": ["_issue--uint256", "relayer--address"], "related_expression": ["!hasVoted[_issue][relayer].voted"], "vars": {"_issue": "uint256", "hasVoted": "mapping(uint256 => mapping(address => VoterUpgradeable.hasVotedStruct))", "relayer": "address"}, "related_expression_type": ["Condition"]}, {"name": "isValidOption", "arguments": ["_opts--uint8"], "related_expression": ["(_opts==1)||(_opts==2)"], "vars": {"_opts": "uint8"}, "related_expression_type": ["Condition"]}, {"name": "isNotEnded", "arguments": ["_issue--uint256"], "related_expression": ["(block.number<issueMap[_issue].endBlock)&&(issueMap[_issue].status==ProposalStatus.Active)"], "vars": {"_issue": "uint256", "block.number": "uint256", "issueMap": "mapping(uint256 => VoterUpgradeable.issueStruct)"}, "related_expression_type": ["Condition"]}, {"name": "isValidbalance", "arguments": ["relayer--address"], "related_expression": ["balanceOf(relayer)==1000000000000000000"], "vars": {"relayer": "address"}, "related_expression_type": ["Condition"]}, {"name": "isVotingNotEnded", "arguments": ["_issue--uint256"], "related_expression": ["block.number<issueMap[_issue].endBlock", "!(issueMap[_issue].status==ProposalStatus.Executed||issueMap[_issue].status==ProposalStatus.Cancelled)"], "vars": {"_issue": "uint256", "block.number": "uint256", "issueMap": "mapping(uint256 => VoterUpgradeable.issueStruct)"}, "related_expression_type": ["Condition", "Condition"]}, {"name": "isPassed", "arguments": ["id--uint256"], "related_expression": ["issueMap[id].status==ProposalStatus.Passed"], "vars": {"id": "uint256", "issueMap": "mapping(uint256 => VoterUpgradeable.issueStruct)"}, "related_expression_type": ["Condition"]}]