[{"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "add", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["c=a+b", "c>=a"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["sub(a,b,SafeMath:subtractionoverflow)"], "info": ["SafeMath", "sub", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "sub", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b<=a", "c=a-b"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0"], "info": ["SafeMath", "mul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["a==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "mul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["not(a==0)", "c=a*b", "c/a==b"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["div(a,b,SafeMath:divisionbyzero)"], "info": ["SafeMath", "div", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "div", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b>0", "c=a/b"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["mod(a,b,SafeMath:modulobyzero)"], "info": ["SafeMath", "mod", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["a%b"], "info": ["SafeMath", "mod", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b!=0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["size--variables"], "modifier": [], "return_expressions": ["size>0"], "info": ["Address", "isContract", "account"], "vars": {"account": "address", "size": "uint256"}, "loop_info": [], "related_expression": ["size=extcodesize(uint256)(account)"], "related_expression_type": ["AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionCall(target,data,Address:low-levelcallfailed)"], "info": ["Address", "functionCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,0,errorMessage)"], "info": ["Address", "functionCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables", "value--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,value,Address:low-levelcallwithvaluefailed)"], "info": ["Address", "functionCallWithValue", "target", "data", "value"], "vars": {"data": "bytes", "target": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["returndata--variables", "success--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionCallWithValue", "target", "data", "value", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address", "this": "address", "value": "uint256"}, "loop_info": [], "related_expression": ["address(this).balance>=value", "isContract(target)", "(success,returndata)=target.call{value:value}(data)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionStaticCall(target,data,Address:low-levelstaticcallfailed)"], "info": ["Address", "functionStaticCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["returndata--variables", "success--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionStaticCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.staticcall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionDelegateCall(target,data,Address:low-leveldelegatecallfailed)"], "info": ["Address", "functionDelegateCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["success--variables", "returndata--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionDelegateCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.delegatecall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "private", "return_vars": ["returndata--variables"], "modifier": [], "return_expressions": ["returndata"], "info": ["Address", "_verifyCallResult", "success", "returndata", "errorMessage"], "vars": {"errorMessage": "string", "returndata": "bytes", "returndata_size__verifyCallResult_asm_0": "uint256", "success": "bool"}, "loop_info": [], "related_expression": ["success"], "related_expression_type": ["Condition"]}, {"visibility": "external", "return_vars": ["glpAmount--variables"], "modifier": ["nonReentrant"], "return_expressions": ["glpAmount"], "info": ["RewardRouterV2", "mintAndStakeGlp", "_token", "_amount", "_minUsdg", "_minGlp"], "vars": {"_amount": "uint256", "_minGlp": "uint256", "_minUsdg": "uint256", "_token": "address", "account": "address", "feeGlpTracker": "address", "glp": "address", "glpAmount": "uint256", "glpManager": "address", "msg.sender": "address", "stakedGlpTracker": "address"}, "loop_info": [], "related_expression": ["_amount>0", "account=msg.sender", "glpAmount=IGlpManager(glpManager).addLiquidityForAccount(account,account,_token,_amount,_minUsdg,_minGlp)", "IRewardTracker(feeGlpTracker).stakeForAccount(account,account,glp,glpAmount)", "IRewardTracker(stakedGlpTracker).stakeForAccount(account,account,feeGlpTracker,glpAmount)", "StakeGlp(account,glpAmount)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "CallExpression", "CallExpression", "CallExpression"]}, {"visibility": "external", "return_vars": ["glpAmount--variables"], "modifier": ["nonReentrant"], "return_expressions": ["glpAmount"], "info": ["RewardRouterV2", "mintAndStakeGlpETH", "_minUsdg", "_minGlp"], "vars": {"_minGlp": "uint256", "_minUsdg": "uint256", "account": "address", "feeGlpTracker": "address", "glp": "address", "glpAmount": "uint256", "glpManager": "address", "msg.sender": "address", "msg.value": "uint256", "stakedGlpTracker": "address", "this": "address", "weth": "address"}, "loop_info": [], "related_expression": ["msg.value>0", "IWETH(weth).deposit{value:msg.value}()", "IERC20(weth).approve(glpManager,msg.value)", "account=msg.sender", "glpAmount=IGlpManager(glpManager).addLiquidityForAccount(address(this),account,weth,msg.value,_minUsdg,_minGlp)", "IRewardTracker(feeGlpTracker).stakeForAccount(account,account,glp,glpAmount)", "IRewardTracker(stakedGlpTracker).stakeForAccount(account,account,feeGlpTracker,glpAmount)", "StakeGlp(account,glpAmount)"], "related_expression_type": ["Condition", "CallExpression", "CallExpression", "AssignmentOperation_=", "AssignmentOperation_=", "CallExpression", "CallExpression", "CallExpression"]}, {"visibility": "external", "return_vars": ["amountOut--variables"], "modifier": ["nonReentrant"], "return_expressions": ["amountOut"], "info": ["RewardRouterV2", "unstakeAndRedeemGlp", "_tokenOut", "_glpAmount", "_minOut", "_receiver"], "vars": {"_glpAmount": "uint256", "_minOut": "uint256", "_receiver": "address", "_tokenOut": "address", "account": "address", "amountOut": "uint256", "feeGlpTracker": "address", "glp": "address", "glpManager": "address", "msg.sender": "address", "stakedGlpTracker": "address"}, "loop_info": [], "related_expression": ["_glpAmount>0", "account=msg.sender", "IRewardTracker(stakedGlpTracker).unstakeForAccount(account,feeGlpTracker,_glpAmount,account)", "IRewardTracker(feeGlpTracker).unstakeForAccount(account,glp,_glpAmount,account)", "amountOut=IGlpManager(glpManager).removeLiquidityForAccount(account,_tokenOut,_glpAmount,_minOut,_receiver)", "UnstakeGlp(account,_glpAmount)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "CallExpression", "CallExpression", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "external", "return_vars": ["amountOut--variables"], "modifier": ["nonReentrant"], "return_expressions": ["amountOut"], "info": ["RewardRouterV2", "unstakeAndRedeemGlpETH", "_glpAmount", "_minOut", "_receiver"], "vars": {"_glpAmount": "uint256", "_minOut": "uint256", "_receiver": "address", "account": "address", "amountOut": "uint256", "feeGlpTracker": "address", "glp": "address", "glpManager": "address", "msg.sender": "address", "stakedGlpTracker": "address", "this": "address", "weth": "address"}, "loop_info": [], "related_expression": ["_glpAmount>0", "account=msg.sender", "IRewardTracker(stakedGlpTracker).unstakeForAccount(account,feeGlpTracker,_glpAmount,account)", "IRewardTracker(feeGlpTracker).unstakeForAccount(account,glp,_glpAmount,account)", "amountOut=IGlpManager(glpManager).removeLiquidityForAccount(account,weth,_glpAmount,_minOut,address(this))", "IWETH(weth).withdraw(amountOut)", "_receiver.sendValue(amountOut)", "UnstakeGlp(account,_glpAmount)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "CallExpression", "CallExpression", "AssignmentOperation_=", "CallExpression", "CallExpression", "CallExpression"]}]