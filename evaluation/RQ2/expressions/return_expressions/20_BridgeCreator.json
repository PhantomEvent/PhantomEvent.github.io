[{"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["Initializable", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["PausableUpgradeable", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["PausableUpgradeable", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["PausableUpgradeable", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_paused"], "info": ["PausableUpgradeable", "paused"], "vars": {"_paused": "bool"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["account--variables"], "modifier": [], "return_expressions": ["account.code.length>0"], "info": ["AddressUpgradeable", "isContract", "account"], "vars": {"TMP_34": "bytes", "account": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCall(target,data,Address:low-levelcallfailed)"], "info": ["AddressUpgradeable", "functionCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["target--variables", "errorMessage--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,0,errorMessage)"], "info": ["AddressUpgradeable", "functionCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["data--variables", "value--variables", "target--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,value,Address:low-levelcallwithvaluefailed)"], "info": ["AddressUpgradeable", "functionCallWithValue", "target", "data", "value"], "vars": {"data": "bytes", "target": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["success--variables", "errorMessage--variables", "returndata--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["AddressUpgradeable", "functionCallWithValue", "target", "data", "value", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address", "this": "address", "value": "uint256"}, "loop_info": [], "related_expression": ["address(this).balance>=value", "isContract(target)", "(success,returndata)=target.call{value:value}(data)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionStaticCall(target,data,Address:low-levelstaticcallfailed)"], "info": ["AddressUpgradeable", "functionStaticCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["success--variables", "errorMessage--variables", "returndata--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["AddressUpgradeable", "functionStaticCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.staticcall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["returndata--variables"], "modifier": [], "return_expressions": ["returndata"], "info": ["AddressUpgradeable", "verifyCallResult", "success", "returndata", "errorMessage"], "vars": {"errorMessage": "string", "returndata": "bytes", "returndata_size_verifyCallResult_asm_0": "uint256", "success": "bool"}, "loop_info": [], "related_expression": ["success"], "related_expression_type": ["Condition"]}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["ContextUpgradeable", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["ContextUpgradeable", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["ContextUpgradeable", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Ownable", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Ownable", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["Ownable", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value"], "info": ["ERC1967Proxy", "_getImplementation"], "vars": {"TMP_86": "StorageSlot.AddressSlot", "_IMPLEMENTATION_SLOT": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["StorageSlot.getAddressSlot(_ADMIN_SLOT).value"], "info": ["ERC1967Proxy", "_getAdmin"], "vars": {"TMP_104": "StorageSlot.AddressSlot", "_ADMIN_SLOT": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["StorageSlot.getAddressSlot(_BEACON_SLOT).value"], "info": ["ERC1967Proxy", "_getBeacon"], "vars": {"TMP_112": "StorageSlot.AddressSlot", "_BEACON_SLOT": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["ERC1967Upgrade._getImplementation()"], "info": ["ERC1967Proxy", "_implementation"], "vars": {}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value"], "info": ["ERC1967Upgrade", "_getImplementation"], "vars": {"TMP_152": "StorageSlot.AddressSlot", "_IMPLEMENTATION_SLOT": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["StorageSlot.getAddressSlot(_ADMIN_SLOT).value"], "info": ["ERC1967Upgrade", "_getAdmin"], "vars": {"TMP_170": "StorageSlot.AddressSlot", "_ADMIN_SLOT": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["StorageSlot.getAddressSlot(_BEACON_SLOT).value"], "info": ["ERC1967Upgrade", "_getBeacon"], "vars": {"TMP_178": "StorageSlot.AddressSlot", "_BEACON_SLOT": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["ProxyAdmin", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["ProxyAdmin", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["ProxyAdmin", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["returndata--variables"], "modifier": [], "return_expressions": ["abi.decode(returndata,(address))"], "info": ["ProxyAdmin", "getProxyImplementation", "proxy"], "vars": {"address": "address", "proxy": "TransparentUpgradeableProxy", "returndata": "bytes", "success": "bool"}, "loop_info": [], "related_expression": ["(success,returndata)=address(proxy).staticcall(0x5c60da1b)", "success"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "public", "return_vars": ["returndata--variables"], "modifier": [], "return_expressions": ["abi.decode(returndata,(address))"], "info": ["ProxyAdmin", "getProxyAdmin", "proxy"], "vars": {"address": "address", "proxy": "TransparentUpgradeableProxy", "returndata": "bytes", "success": "bool"}, "loop_info": [], "related_expression": ["(success,returndata)=address(proxy).staticcall(0xf851a440)", "success"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["ERC1967Upgrade._getImplementation()"], "info": ["TransparentUpgradeableProxy", "_implementation"], "vars": {}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value"], "info": ["TransparentUpgradeableProxy", "_getImplementation"], "vars": {"TMP_245": "StorageSlot.AddressSlot", "_IMPLEMENTATION_SLOT": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["StorageSlot.getAddressSlot(_ADMIN_SLOT).value"], "info": ["TransparentUpgradeableProxy", "_getAdmin"], "vars": {"TMP_263": "StorageSlot.AddressSlot", "_ADMIN_SLOT": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["StorageSlot.getAddressSlot(_BEACON_SLOT).value"], "info": ["TransparentUpgradeableProxy", "_getBeacon"], "vars": {"TMP_271": "StorageSlot.AddressSlot", "_BEACON_SLOT": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["_getAdmin()"], "info": ["TransparentUpgradeableProxy", "_admin"], "vars": {}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["account--variables"], "modifier": [], "return_expressions": ["account.code.length>0"], "info": ["Address", "isContract", "account"], "vars": {"TMP_330": "bytes", "account": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCall(target,data,Address:low-levelcallfailed)"], "info": ["Address", "functionCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,0,errorMessage)"], "info": ["Address", "functionCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables", "value--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,value,Address:low-levelcallwithvaluefailed)"], "info": ["Address", "functionCallWithValue", "target", "data", "value"], "vars": {"data": "bytes", "target": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["returndata--variables", "errorMessage--variables", "success--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionCallWithValue", "target", "data", "value", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address", "this": "address", "value": "uint256"}, "loop_info": [], "related_expression": ["address(this).balance>=value", "isContract(target)", "(success,returndata)=target.call{value:value}(data)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionStaticCall(target,data,Address:low-levelstaticcallfailed)"], "info": ["Address", "functionStaticCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["returndata--variables", "errorMessage--variables", "success--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionStaticCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.staticcall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionDelegateCall(target,data,Address:low-leveldelegatecallfailed)"], "info": ["Address", "functionDelegateCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["success--variables", "errorMessage--variables", "returndata--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionDelegateCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.delegatecall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["returndata--variables"], "modifier": [], "return_expressions": ["returndata"], "info": ["Address", "verifyCallResult", "success", "returndata", "errorMessage"], "vars": {"errorMessage": "string", "returndata": "bytes", "returndata_size_verifyCallResult_asm_0": "uint256", "success": "bool"}, "loop_info": [], "related_expression": ["success"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Context", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Context", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["Bridge", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["address(0)"], "info": ["Bridge", "activeOutbox"], "vars": {"EMPTY_ACTIVEOUTBOX": "address", "_activeOutbox": "address", "outbox": "address"}, "loop_info": [], "related_expression": ["outbox=_activeOutbox", "outbox==EMPTY_ACTIVEOUTBOX"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "public", "return_vars": ["outbox--variables"], "modifier": [], "return_expressions": ["outbox"], "info": ["Bridge", "activeOutbox"], "vars": {"EMPTY_ACTIVEOUTBOX": "address", "_activeOutbox": "address", "outbox": "address"}, "loop_info": [], "related_expression": ["outbox=_activeOutbox", "not(outbox==EMPTY_ACTIVEOUTBOX)"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "external", "return_vars": ["inbox--variables"], "modifier": [], "return_expressions": ["allowedDelayedInboxesMap[inbox].allowed"], "info": ["Bridge", "allowedDelayedInboxes", "inbox"], "vars": {"allowedDelayedInboxesMap": "mapping(address => Bridge.InOutInfo)", "inbox": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["outbox--variables"], "modifier": [], "return_expressions": ["allowedOutboxesMap[outbox].allowed"], "info": ["Bridge", "allowedOutboxes", "outbox"], "vars": {"allowedOutboxesMap": "mapping(address => Bridge.InOutInfo)", "outbox": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["messageDataHash--variables", "sender--variables"], "modifier": ["onlySequencerInbox"], "return_expressions": ["addMessageToDelayedAccumulator(L1MessageType_batchPostingReport,sender,uint64(block.number),uint64(block.timestamp),block.basefee,messageDataHash)"], "info": ["Bridge", "submitBatchSpendingReport", "sender", "messageDataHash"], "vars": {"L1MessageType_batchPostingReport": "uint8", "block.basefee": "uint256", "block.number": "uint256", "block.timestamp": "uint256", "messageDataHash": "bytes32", "sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["messageDataHash--variables", "kind--variables", "sender--variables"], "modifier": [], "return_expressions": ["addMessageToDelayedAccumulator(kind,sender,uint64(block.number),uint64(block.timestamp),block.basefee,messageDataHash)"], "info": ["Bridge", "enqueueDelayedMessage", "kind", "sender", "messageDataHash"], "vars": {"allowedDelayedInboxesMap": "mapping(address => Bridge.InOutInfo)", "block.basefee": "uint256", "block.number": "uint256", "block.timestamp": "uint256", "kind": "uint8", "messageDataHash": "bytes32", "msg.sender": "address", "sender": "address"}, "loop_info": [], "related_expression": ["!allowedDelayedInboxesMap[msg.sender].allowed"], "related_expression_type": ["Condition"]}, {"visibility": "external", "return_vars": ["messageDataHash--variables", "kind--variables", "sender--variables"], "modifier": [], "return_expressions": ["addMessageToDelayedAccumulator(kind,sender,uint64(block.number),uint64(block.timestamp),block.basefee,messageDataHash)"], "info": ["Bridge", "enqueueDelayedMessage", "kind", "sender", "messageDataHash"], "vars": {"allowedDelayedInboxesMap": "mapping(address => Bridge.InOutInfo)", "block.basefee": "uint256", "block.number": "uint256", "block.timestamp": "uint256", "kind": "uint8", "messageDataHash": "bytes32", "msg.sender": "address", "sender": "address"}, "loop_info": [], "related_expression": ["not(!allowedDelayedInboxesMap[msg.sender].allowed)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["count--variables"], "modifier": [], "return_expressions": ["count"], "info": ["Bridge", "addMessageToDelayedAccumulator", "kind", "sender", "blockNumber", "blockTimestamp", "baseFeeL1", "messageDataHash"], "vars": {"baseFeeL1": "uint256", "blockNumber": "uint64", "blockTimestamp": "uint64", "count": "uint256", "delayedInboxAccs": "bytes32[]", "kind": "uint8", "messageDataHash": "bytes32", "messageHash": "bytes32", "msg.sender": "address", "prevAcc": "bytes32", "sender": "address"}, "loop_info": [], "related_expression": ["count=delayedInboxAccs.length", "messageHash=Messages.messageHash(kind,sender,blockNumber,blockTimestamp,count,baseFeeL1,messageDataHash)", "prevAcc=0", "count>0", "prevAcc=delayedInboxAccs[count-1]", "delayedInboxAccs.push(Messages.accumulateInboxMessage(prevAcc,messageHash))", "MessageDelivered(count,prevAcc,msg.sender,kind,sender,messageDataHash,baseFeeL1,blockTimestamp)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "CallExpression", "CallExpression"]}, {"visibility": "internal", "return_vars": ["count--variables"], "modifier": [], "return_expressions": ["count"], "info": ["Bridge", "addMessageToDelayedAccumulator", "kind", "sender", "blockNumber", "blockTimestamp", "baseFeeL1", "messageDataHash"], "vars": {"baseFeeL1": "uint256", "blockNumber": "uint64", "blockTimestamp": "uint64", "count": "uint256", "delayedInboxAccs": "bytes32[]", "kind": "uint8", "messageDataHash": "bytes32", "messageHash": "bytes32", "msg.sender": "address", "prevAcc": "bytes32", "sender": "address"}, "loop_info": [], "related_expression": ["count=delayedInboxAccs.length", "messageHash=Messages.messageHash(kind,sender,blockNumber,blockTimestamp,count,baseFeeL1,messageDataHash)", "prevAcc=0", "not(count>0)", "delayedInboxAccs.push(Messages.accumulateInboxMessage(prevAcc,messageHash))", "MessageDelivered(count,prevAcc,msg.sender,kind,sender,messageDataHash,baseFeeL1,blockTimestamp)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression", "CallExpression"]}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["delayedInboxAccs.length"], "info": ["Bridge", "delayedMessageCount"], "vars": {"delayedInboxAccs": "bytes32[]"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["sequencerInboxAccs.length"], "info": ["Bridge", "sequencerMessageCount"], "vars": {"sequencerInboxAccs": "bytes32[]"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_paused"], "info": ["Inbox", "paused"], "vars": {"_paused": "bool"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Inbox", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Inbox", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["Inbox", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["msgNum--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["msgNum"], "info": ["Inbox", "sendL2MessageFromOrigin", "messageData"], "vars": {"L2_MSG": "uint8", "MAX_DATA_SIZE": "uint256", "messageData": "bytes", "msg.sender": "address", "msgNum": "uint256", "tx.origin": "address"}, "loop_info": [], "related_expression": ["msg.sender!=tx.origin", "messageData.length>MAX_DATA_SIZE", "msgNum=deliverToBridge(L2_MSG,msg.sender,keccak256(bytes)(messageData))", "InboxMessageDeliveredFromOrigin(msgNum)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "external", "return_vars": ["msgNum--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["msgNum"], "info": ["Inbox", "sendL2MessageFromOrigin", "messageData"], "vars": {"L2_MSG": "uint8", "MAX_DATA_SIZE": "uint256", "messageData": "bytes", "msg.sender": "address", "msgNum": "uint256", "tx.origin": "address"}, "loop_info": [], "related_expression": ["msg.sender!=tx.origin", "not(messageData.length>MAX_DATA_SIZE)", "msgNum=deliverToBridge(L2_MSG,msg.sender,keccak256(bytes)(messageData))", "InboxMessageDeliveredFromOrigin(msgNum)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "external", "return_vars": ["msgNum--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["msgNum"], "info": ["Inbox", "sendL2MessageFromOrigin", "messageData"], "vars": {"L2_MSG": "uint8", "MAX_DATA_SIZE": "uint256", "messageData": "bytes", "msg.sender": "address", "msgNum": "uint256", "tx.origin": "address"}, "loop_info": [], "related_expression": ["not(msg.sender!=tx.origin)", "messageData.length>MAX_DATA_SIZE", "msgNum=deliverToBridge(L2_MSG,msg.sender,keccak256(bytes)(messageData))", "InboxMessageDeliveredFromOrigin(msgNum)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "external", "return_vars": ["msgNum--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["msgNum"], "info": ["Inbox", "sendL2MessageFromOrigin", "messageData"], "vars": {"L2_MSG": "uint8", "MAX_DATA_SIZE": "uint256", "messageData": "bytes", "msg.sender": "address", "msgNum": "uint256", "tx.origin": "address"}, "loop_info": [], "related_expression": ["not(msg.sender!=tx.origin)", "not(messageData.length>MAX_DATA_SIZE)", "msgNum=deliverToBridge(L2_MSG,msg.sender,keccak256(bytes)(messageData))", "InboxMessageDeliveredFromOrigin(msgNum)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "external", "return_vars": ["messageData--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["_deliverMessage(L2_MSG,msg.sender,messageData)"], "info": ["Inbox", "sendL2Message", "messageData"], "vars": {"L2_MSG": "uint8", "messageData": "bytes", "msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["gasLimit--variables", "to--variables", "nonce--variables", "maxFeePerGas--variables", "data--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["_deliverMessage(L1MessageType_L2FundedByL1,msg.sender,abi.encodePacked(L2MessageType_unsignedEOATx,gasLimit,maxFeePerGas,nonce,uint256(uint160(to)),msg.value,data))"], "info": ["Inbox", "sendL1FundedUnsignedTransaction", "gasLimit", "maxFeePerGas", "nonce", "to", "data"], "vars": {"L1MessageType_L2FundedByL1": "uint8", "L2MessageType_unsignedEOATx": "uint8", "data": "bytes", "gasLimit": "uint256", "maxFeePerGas": "uint256", "msg.sender": "address", "msg.value": "uint256", "nonce": "uint256", "to": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["to--variables", "gasLimit--variables", "data--variables", "maxFeePerGas--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["_deliverMessage(L1MessageType_L2FundedByL1,msg.sender,abi.encodePacked(L2MessageType_unsignedContractTx,gasLimit,maxFeePerGas,uint256(uint160(to)),msg.value,data))"], "info": ["Inbox", "sendL1FundedContractTransaction", "gasLimit", "maxFeePerGas", "to", "data"], "vars": {"L1MessageType_L2FundedByL1": "uint8", "L2MessageType_unsignedContractTx": "uint8", "data": "bytes", "gasLimit": "uint256", "maxFeePerGas": "uint256", "msg.sender": "address", "msg.value": "uint256", "to": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["nonce--variables", "data--variables", "maxFeePerGas--variables", "to--variables", "value--variables", "gasLimit--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["_deliverMessage(L2_MSG,msg.sender,abi.encodePacked(L2MessageType_unsignedEOATx,gasLimit,maxFeePerGas,nonce,uint256(uint160(to)),value,data))"], "info": ["Inbox", "sendUnsignedTransaction", "gasLimit", "maxFeePerGas", "nonce", "to", "value", "data"], "vars": {"L2MessageType_unsignedEOATx": "uint8", "L2_MSG": "uint8", "data": "bytes", "gasLimit": "uint256", "maxFeePerGas": "uint256", "msg.sender": "address", "nonce": "uint256", "to": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["maxFeePerGas--variables", "value--variables", "data--variables", "to--variables", "gasLimit--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["_deliverMessage(L2_MSG,msg.sender,abi.encodePacked(L2MessageType_unsignedContractTx,gasLimit,maxFeePerGas,uint256(uint160(to)),value,data))"], "info": ["Inbox", "sendContractTransaction", "gasLimit", "maxFeePerGas", "to", "value", "data"], "vars": {"L2MessageType_unsignedContractTx": "uint8", "L2_MSG": "uint8", "data": "bytes", "gasLimit": "uint256", "maxFeePerGas": "uint256", "msg.sender": "address", "to": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["dataLength--variables"], "modifier": [], "return_expressions": ["(1400+6*dataLength)*block.basefee"], "info": ["Inbox", "calculateRetryableSubmissionFee", "dataLength", "baseFee"], "vars": {"baseFee": "uint256", "block.basefee": "uint256", "dataLength": "uint256"}, "loop_info": [], "related_expression": ["baseFee==0"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": ["baseFee--variables", "dataLength--variables"], "modifier": [], "return_expressions": ["(1400+6*dataLength)*baseFee"], "info": ["Inbox", "calculateRetryableSubmissionFee", "dataLength", "baseFee"], "vars": {"baseFee": "uint256", "block.basefee": "uint256", "dataLength": "uint256"}, "loop_info": [], "related_expression": ["not(baseFee==0)"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": ["dest--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["_deliverMessage(L1MessageType_ethDeposit,msg.sender,abi.encodePacked(dest,msg.value))"], "info": ["Inbox", "depositEth"], "vars": {"L1MessageType_ethDeposit": "uint8", "dest": "address", "msg.sender": "address", "msg.value": "uint256", "tx.origin": "address"}, "loop_info": [], "related_expression": ["AddressUpgradeable.isContract(msg.sender)||tx.origin!=msg.sender"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": ["dest--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["_deliverMessage(L1MessageType_ethDeposit,msg.sender,abi.encodePacked(dest,msg.value))"], "info": ["Inbox", "depositEth"], "vars": {"L1MessageType_ethDeposit": "uint8", "dest": "address", "msg.sender": "address", "msg.value": "uint256", "tx.origin": "address"}, "loop_info": [], "related_expression": ["not(AddressUpgradeable.isContract(msg.sender)||tx.origin!=msg.sender)"], "related_expression_type": ["Condition"]}, {"visibility": "external", "return_vars": [], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["depositEth()"], "info": ["Inbox", "depositEth", ""], "vars": {}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["to--variables", "maxFeePerGas--variables", "excessFeeRefundAddress--variables", "l2CallValue--variables", "maxSubmissionCost--variables", "data--variables", "gasLimit--variables", "callValueRefundAddress--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["unsafeCreateRetryableTicket(to,l2CallValue,maxSubmissionCost,excessFeeRefundAddress,callValueRefundAddress,gasLimit,maxFeePerGas,data)"], "info": ["Inbox", "createRetryableTicketNoRefundAliasRewrite", "to", "l2CallValue", "maxSubmissionCost", "excessFeeRefundAddress", "callValueRefundAddress", "gasLimit", "maxFeePerGas", "data"], "vars": {"callValueRefundAddress": "address", "data": "bytes", "excessFeeRefundAddress": "address", "gasLimit": "uint256", "l2CallValue": "uint256", "maxFeePerGas": "uint256", "maxSubmissionCost": "uint256", "to": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["l2CallValue--variables", "to--variables", "callValueRefundAddress--variables", "maxFeePerGas--variables", "data--variables", "maxSubmissionCost--variables", "gasLimit--variables", "excessFeeRefundAddress--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["unsafeCreateRetryableTicket(to,l2CallValue,maxSubmissionCost,excessFeeRefundAddress,callValueRefundAddress,gasLimit,maxFeePerGas,data)"], "info": ["Inbox", "createRetryableTicket", "to", "l2CallValue", "maxSubmissionCost", "excessFeeRefundAddress", "callValueRefundAddress", "gasLimit", "maxFeePerGas", "data"], "vars": {"callValueRefundAddress": "address", "data": "bytes", "excessFeeRefundAddress": "address", "gasLimit": "uint256", "l2CallValue": "uint256", "maxFeePerGas": "uint256", "maxSubmissionCost": "uint256", "msg.value": "uint256", "to": "address"}, "loop_info": [], "related_expression": ["msg.value<(maxSubmissionCost+l2CallValue+gasLimit*maxFeePerGas)", "AddressUpgradeable.isContract(excessFeeRefundAddress)", "AddressUpgradeable.isContract(callValueRefundAddress)"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "external", "return_vars": ["l2CallValue--variables", "to--variables", "callValueRefundAddress--variables", "maxFeePerGas--variables", "data--variables", "maxSubmissionCost--variables", "gasLimit--variables", "excessFeeRefundAddress--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["unsafeCreateRetryableTicket(to,l2CallValue,maxSubmissionCost,excessFeeRefundAddress,callValueRefundAddress,gasLimit,maxFeePerGas,data)"], "info": ["Inbox", "createRetryableTicket", "to", "l2CallValue", "maxSubmissionCost", "excessFeeRefundAddress", "callValueRefundAddress", "gasLimit", "maxFeePerGas", "data"], "vars": {"callValueRefundAddress": "address", "data": "bytes", "excessFeeRefundAddress": "address", "gasLimit": "uint256", "l2CallValue": "uint256", "maxFeePerGas": "uint256", "maxSubmissionCost": "uint256", "msg.value": "uint256", "to": "address"}, "loop_info": [], "related_expression": ["msg.value<(maxSubmissionCost+l2CallValue+gasLimit*maxFeePerGas)", "AddressUpgradeable.isContract(excessFeeRefundAddress)", "not(AddressUpgradeable.isContract(callValueRefundAddress))"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "external", "return_vars": ["l2CallValue--variables", "to--variables", "callValueRefundAddress--variables", "maxFeePerGas--variables", "data--variables", "maxSubmissionCost--variables", "gasLimit--variables", "excessFeeRefundAddress--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["unsafeCreateRetryableTicket(to,l2CallValue,maxSubmissionCost,excessFeeRefundAddress,callValueRefundAddress,gasLimit,maxFeePerGas,data)"], "info": ["Inbox", "createRetryableTicket", "to", "l2CallValue", "maxSubmissionCost", "excessFeeRefundAddress", "callValueRefundAddress", "gasLimit", "maxFeePerGas", "data"], "vars": {"callValueRefundAddress": "address", "data": "bytes", "excessFeeRefundAddress": "address", "gasLimit": "uint256", "l2CallValue": "uint256", "maxFeePerGas": "uint256", "maxSubmissionCost": "uint256", "msg.value": "uint256", "to": "address"}, "loop_info": [], "related_expression": ["msg.value<(maxSubmissionCost+l2CallValue+gasLimit*maxFeePerGas)", "not(AddressUpgradeable.isContract(excessFeeRefundAddress))", "AddressUpgradeable.isContract(callValueRefundAddress)"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "external", "return_vars": ["l2CallValue--variables", "to--variables", "callValueRefundAddress--variables", "maxFeePerGas--variables", "data--variables", "maxSubmissionCost--variables", "gasLimit--variables", "excessFeeRefundAddress--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["unsafeCreateRetryableTicket(to,l2CallValue,maxSubmissionCost,excessFeeRefundAddress,callValueRefundAddress,gasLimit,maxFeePerGas,data)"], "info": ["Inbox", "createRetryableTicket", "to", "l2CallValue", "maxSubmissionCost", "excessFeeRefundAddress", "callValueRefundAddress", "gasLimit", "maxFeePerGas", "data"], "vars": {"callValueRefundAddress": "address", "data": "bytes", "excessFeeRefundAddress": "address", "gasLimit": "uint256", "l2CallValue": "uint256", "maxFeePerGas": "uint256", "maxSubmissionCost": "uint256", "msg.value": "uint256", "to": "address"}, "loop_info": [], "related_expression": ["msg.value<(maxSubmissionCost+l2CallValue+gasLimit*maxFeePerGas)", "not(AddressUpgradeable.isContract(excessFeeRefundAddress))", "not(AddressUpgradeable.isContract(callValueRefundAddress))"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "external", "return_vars": ["l2CallValue--variables", "to--variables", "callValueRefundAddress--variables", "maxFeePerGas--variables", "data--variables", "maxSubmissionCost--variables", "gasLimit--variables", "excessFeeRefundAddress--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["unsafeCreateRetryableTicket(to,l2CallValue,maxSubmissionCost,excessFeeRefundAddress,callValueRefundAddress,gasLimit,maxFeePerGas,data)"], "info": ["Inbox", "createRetryableTicket", "to", "l2CallValue", "maxSubmissionCost", "excessFeeRefundAddress", "callValueRefundAddress", "gasLimit", "maxFeePerGas", "data"], "vars": {"callValueRefundAddress": "address", "data": "bytes", "excessFeeRefundAddress": "address", "gasLimit": "uint256", "l2CallValue": "uint256", "maxFeePerGas": "uint256", "maxSubmissionCost": "uint256", "msg.value": "uint256", "to": "address"}, "loop_info": [], "related_expression": ["not(msg.value<(maxSubmissionCost+l2CallValue+gasLimit*maxFeePerGas))", "AddressUpgradeable.isContract(excessFeeRefundAddress)", "AddressUpgradeable.isContract(callValueRefundAddress)"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "external", "return_vars": ["l2CallValue--variables", "to--variables", "callValueRefundAddress--variables", "maxFeePerGas--variables", "data--variables", "maxSubmissionCost--variables", "gasLimit--variables", "excessFeeRefundAddress--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["unsafeCreateRetryableTicket(to,l2CallValue,maxSubmissionCost,excessFeeRefundAddress,callValueRefundAddress,gasLimit,maxFeePerGas,data)"], "info": ["Inbox", "createRetryableTicket", "to", "l2CallValue", "maxSubmissionCost", "excessFeeRefundAddress", "callValueRefundAddress", "gasLimit", "maxFeePerGas", "data"], "vars": {"callValueRefundAddress": "address", "data": "bytes", "excessFeeRefundAddress": "address", "gasLimit": "uint256", "l2CallValue": "uint256", "maxFeePerGas": "uint256", "maxSubmissionCost": "uint256", "msg.value": "uint256", "to": "address"}, "loop_info": [], "related_expression": ["not(msg.value<(maxSubmissionCost+l2CallValue+gasLimit*maxFeePerGas))", "AddressUpgradeable.isContract(excessFeeRefundAddress)", "not(AddressUpgradeable.isContract(callValueRefundAddress))"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "external", "return_vars": ["l2CallValue--variables", "to--variables", "callValueRefundAddress--variables", "maxFeePerGas--variables", "data--variables", "maxSubmissionCost--variables", "gasLimit--variables", "excessFeeRefundAddress--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["unsafeCreateRetryableTicket(to,l2CallValue,maxSubmissionCost,excessFeeRefundAddress,callValueRefundAddress,gasLimit,maxFeePerGas,data)"], "info": ["Inbox", "createRetryableTicket", "to", "l2CallValue", "maxSubmissionCost", "excessFeeRefundAddress", "callValueRefundAddress", "gasLimit", "maxFeePerGas", "data"], "vars": {"callValueRefundAddress": "address", "data": "bytes", "excessFeeRefundAddress": "address", "gasLimit": "uint256", "l2CallValue": "uint256", "maxFeePerGas": "uint256", "maxSubmissionCost": "uint256", "msg.value": "uint256", "to": "address"}, "loop_info": [], "related_expression": ["not(msg.value<(maxSubmissionCost+l2CallValue+gasLimit*maxFeePerGas))", "not(AddressUpgradeable.isContract(excessFeeRefundAddress))", "AddressUpgradeable.isContract(callValueRefundAddress)"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "external", "return_vars": ["l2CallValue--variables", "to--variables", "callValueRefundAddress--variables", "maxFeePerGas--variables", "data--variables", "maxSubmissionCost--variables", "gasLimit--variables", "excessFeeRefundAddress--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["unsafeCreateRetryableTicket(to,l2CallValue,maxSubmissionCost,excessFeeRefundAddress,callValueRefundAddress,gasLimit,maxFeePerGas,data)"], "info": ["Inbox", "createRetryableTicket", "to", "l2CallValue", "maxSubmissionCost", "excessFeeRefundAddress", "callValueRefundAddress", "gasLimit", "maxFeePerGas", "data"], "vars": {"callValueRefundAddress": "address", "data": "bytes", "excessFeeRefundAddress": "address", "gasLimit": "uint256", "l2CallValue": "uint256", "maxFeePerGas": "uint256", "maxSubmissionCost": "uint256", "msg.value": "uint256", "to": "address"}, "loop_info": [], "related_expression": ["not(msg.value<(maxSubmissionCost+l2CallValue+gasLimit*maxFeePerGas))", "not(AddressUpgradeable.isContract(excessFeeRefundAddress))", "not(AddressUpgradeable.isContract(callValueRefundAddress))"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "public", "return_vars": ["gasLimit--variables", "maxSubmissionCost--variables", "callValueRefundAddress--variables", "maxFeePerGas--variables", "excessFeeRefundAddress--variables", "data--variables", "to--variables", "l2CallValue--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["_deliverMessage(L1MessageType_submitRetryableTx,msg.sender,abi.encodePacked(uint256(uint160(to)),l2CallValue,msg.value,maxSubmissionCost,uint256(uint160(excessFeeRefundAddress)),uint256(uint160(callValueRefundAddress)),gasLimit,maxFeePerGas,data.length,data))"], "info": ["Inbox", "unsafeCreateRetryableTicket", "to", "l2CallValue", "maxSubmissionCost", "excessFeeRefundAddress", "callValueRefundAddress", "gasLimit", "maxFeePerGas", "data"], "vars": {"L1MessageType_submitRetryableTx": "uint8", "block.basefee": "uint256", "callValueRefundAddress": "address", "data": "bytes", "excessFeeRefundAddress": "address", "gasLimit": "uint256", "l2CallValue": "uint256", "maxFeePerGas": "uint256", "maxSubmissionCost": "uint256", "msg.sender": "address", "msg.value": "uint256", "submissionFee": "uint256", "to": "address"}, "loop_info": [], "related_expression": ["gasLimit==1||maxFeePerGas==1", "maxSubmissionCost<submissionFee"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "public", "return_vars": ["gasLimit--variables", "maxSubmissionCost--variables", "callValueRefundAddress--variables", "maxFeePerGas--variables", "excessFeeRefundAddress--variables", "data--variables", "to--variables", "l2CallValue--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["_deliverMessage(L1MessageType_submitRetryableTx,msg.sender,abi.encodePacked(uint256(uint160(to)),l2CallValue,msg.value,maxSubmissionCost,uint256(uint160(excessFeeRefundAddress)),uint256(uint160(callValueRefundAddress)),gasLimit,maxFeePerGas,data.length,data))"], "info": ["Inbox", "unsafeCreateRetryableTicket", "to", "l2CallValue", "maxSubmissionCost", "excessFeeRefundAddress", "callValueRefundAddress", "gasLimit", "maxFeePerGas", "data"], "vars": {"L1MessageType_submitRetryableTx": "uint8", "block.basefee": "uint256", "callValueRefundAddress": "address", "data": "bytes", "excessFeeRefundAddress": "address", "gasLimit": "uint256", "l2CallValue": "uint256", "maxFeePerGas": "uint256", "maxSubmissionCost": "uint256", "msg.sender": "address", "msg.value": "uint256", "submissionFee": "uint256", "to": "address"}, "loop_info": [], "related_expression": ["gasLimit==1||maxFeePerGas==1", "not(maxSubmissionCost<submissionFee)"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "public", "return_vars": ["gasLimit--variables", "maxSubmissionCost--variables", "callValueRefundAddress--variables", "maxFeePerGas--variables", "excessFeeRefundAddress--variables", "data--variables", "to--variables", "l2CallValue--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["_deliverMessage(L1MessageType_submitRetryableTx,msg.sender,abi.encodePacked(uint256(uint160(to)),l2CallValue,msg.value,maxSubmissionCost,uint256(uint160(excessFeeRefundAddress)),uint256(uint160(callValueRefundAddress)),gasLimit,maxFeePerGas,data.length,data))"], "info": ["Inbox", "unsafeCreateRetryableTicket", "to", "l2CallValue", "maxSubmissionCost", "excessFeeRefundAddress", "callValueRefundAddress", "gasLimit", "maxFeePerGas", "data"], "vars": {"L1MessageType_submitRetryableTx": "uint8", "block.basefee": "uint256", "callValueRefundAddress": "address", "data": "bytes", "excessFeeRefundAddress": "address", "gasLimit": "uint256", "l2CallValue": "uint256", "maxFeePerGas": "uint256", "maxSubmissionCost": "uint256", "msg.sender": "address", "msg.value": "uint256", "submissionFee": "uint256", "to": "address"}, "loop_info": [], "related_expression": ["not(gasLimit==1||maxFeePerGas==1)", "maxSubmissionCost<submissionFee"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "public", "return_vars": ["gasLimit--variables", "maxSubmissionCost--variables", "callValueRefundAddress--variables", "maxFeePerGas--variables", "excessFeeRefundAddress--variables", "data--variables", "to--variables", "l2CallValue--variables"], "modifier": ["whenNotPaused", "onlyAllowed"], "return_expressions": ["_deliverMessage(L1MessageType_submitRetryableTx,msg.sender,abi.encodePacked(uint256(uint160(to)),l2CallValue,msg.value,maxSubmissionCost,uint256(uint160(excessFeeRefundAddress)),uint256(uint160(callValueRefundAddress)),gasLimit,maxFeePerGas,data.length,data))"], "info": ["Inbox", "unsafeCreateRetryableTicket", "to", "l2CallValue", "maxSubmissionCost", "excessFeeRefundAddress", "callValueRefundAddress", "gasLimit", "maxFeePerGas", "data"], "vars": {"L1MessageType_submitRetryableTx": "uint8", "block.basefee": "uint256", "callValueRefundAddress": "address", "data": "bytes", "excessFeeRefundAddress": "address", "gasLimit": "uint256", "l2CallValue": "uint256", "maxFeePerGas": "uint256", "maxSubmissionCost": "uint256", "msg.sender": "address", "msg.value": "uint256", "submissionFee": "uint256", "to": "address"}, "loop_info": [], "related_expression": ["not(gasLimit==1||maxFeePerGas==1)", "not(maxSubmissionCost<submissionFee)"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["msgNum--variables"], "modifier": [], "return_expressions": ["msgNum"], "info": ["Inbox", "_deliverMessage", "_kind", "_sender", "_messageData"], "vars": {"MAX_DATA_SIZE": "uint256", "_kind": "uint8", "_messageData": "bytes", "_sender": "address", "msgNum": "uint256"}, "loop_info": [], "related_expression": ["_messageData.length>MAX_DATA_SIZE", "msgNum=deliverToBridge(_kind,_sender,keccak256(bytes)(_messageData))", "InboxMessageDelivered(msgNum,_messageData)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "internal", "return_vars": ["msgNum--variables"], "modifier": [], "return_expressions": ["msgNum"], "info": ["Inbox", "_deliverMessage", "_kind", "_sender", "_messageData"], "vars": {"MAX_DATA_SIZE": "uint256", "_kind": "uint8", "_messageData": "bytes", "_sender": "address", "msgNum": "uint256"}, "loop_info": [], "related_expression": ["not(_messageData.length>MAX_DATA_SIZE)", "msgNum=deliverToBridge(_kind,_sender,keccak256(bytes)(_messageData))", "InboxMessageDelivered(msgNum,_messageData)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "internal", "return_vars": ["kind--variables", "messageDataHash--variables", "sender--variables"], "modifier": [], "return_expressions": ["bridge.enqueueDelayedMessage{value:msg.value}(kind,AddressAliasHelper.applyL1ToL2Alias(sender),messageDataHash)"], "info": ["Inbox", "deliverToBridge", "kind", "sender", "messageDataHash"], "vars": {"bridge": "IBridge", "kind": "uint8", "messageDataHash": "bytes32", "msg.value": "uint256", "sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["inboxSeqNum--variables", "baseFeeL1--variables", "timestamp--variables", "blockNumber--variables", "messageDataHash--variables", "sender--variables", "kind--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(kind,sender,blockNumber,timestamp,inboxSeqNum,baseFeeL1,messageDataHash))"], "info": ["Messages", "messageHash", "kind", "sender", "blockNumber", "timestamp", "inboxSeqNum", "baseFeeL1", "messageDataHash"], "vars": {"baseFeeL1": "uint256", "blockNumber": "uint64", "inboxSeqNum": "uint256", "kind": "uint8", "messageDataHash": "bytes32", "sender": "address", "timestamp": "uint64"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["prevAcc--variables", "message--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(prevAcc,message))"], "info": ["Messages", "accumulateInboxMessage", "prevAcc", "message"], "vars": {"message": "bytes32", "prevAcc": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["address(0)"], "info": ["Outbox", "l2ToL1Sender"], "vars": {"SENDER_DEFAULT_CONTEXT": "address", "context": "Outbox.L2ToL1Context", "sender": "address"}, "loop_info": [], "related_expression": ["sender=context.sender", "sender==SENDER_DEFAULT_CONTEXT"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "external", "return_vars": ["sender--variables"], "modifier": [], "return_expressions": ["sender"], "info": ["Outbox", "l2ToL1Sender"], "vars": {"SENDER_DEFAULT_CONTEXT": "address", "context": "Outbox.L2ToL1Context", "sender": "address"}, "loop_info": [], "related_expression": ["sender=context.sender", "not(sender==SENDER_DEFAULT_CONTEXT)"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["uint256(0)"], "info": ["Outbox", "l2ToL1Block"], "vars": {"L1BLOCK_DEFAULT_CONTEXT": "uint128", "context": "Outbox.L2ToL1Context", "l2Block": "uint128"}, "loop_info": [], "related_expression": ["l2Block=context.l2Block", "l2Block==L1BLOCK_DEFAULT_CONTEXT"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "external", "return_vars": ["l2Block--variables"], "modifier": [], "return_expressions": ["uint256(l2Block)"], "info": ["Outbox", "l2ToL1Block"], "vars": {"L1BLOCK_DEFAULT_CONTEXT": "uint128", "context": "Outbox.L2ToL1Context", "l2Block": "uint128"}, "loop_info": [], "related_expression": ["l2Block=context.l2Block", "not(l2Block==L1BLOCK_DEFAULT_CONTEXT)"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["uint256(0)"], "info": ["Outbox", "l2ToL1EthBlock"], "vars": {"L1BLOCK_DEFAULT_CONTEXT": "uint128", "context": "Outbox.L2ToL1Context", "l1Block": "uint128"}, "loop_info": [], "related_expression": ["l1Block=context.l1Block", "l1Block==L1BLOCK_DEFAULT_CONTEXT"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "external", "return_vars": ["l1Block--variables"], "modifier": [], "return_expressions": ["uint256(l1Block)"], "info": ["Outbox", "l2ToL1EthBlock"], "vars": {"L1BLOCK_DEFAULT_CONTEXT": "uint128", "context": "Outbox.L2ToL1Context", "l1Block": "uint128"}, "loop_info": [], "related_expression": ["l1Block=context.l1Block", "not(l1Block==L1BLOCK_DEFAULT_CONTEXT)"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["uint256(0)"], "info": ["Outbox", "l2ToL1Timestamp"], "vars": {"TIMESTAMP_DEFAULT_CONTEXT": "uint128", "context": "Outbox.L2ToL1Context", "timestamp": "uint128"}, "loop_info": [], "related_expression": ["timestamp=context.timestamp", "timestamp==TIMESTAMP_DEFAULT_CONTEXT"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "external", "return_vars": ["timestamp--variables"], "modifier": [], "return_expressions": ["uint256(timestamp)"], "info": ["Outbox", "l2ToL1Timestamp"], "vars": {"TIMESTAMP_DEFAULT_CONTEXT": "uint128", "context": "Outbox.L2ToL1Context", "timestamp": "uint128"}, "loop_info": [], "related_expression": ["timestamp=context.timestamp", "not(timestamp==TIMESTAMP_DEFAULT_CONTEXT)"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["0"], "info": ["Outbox", "l2ToL1BatchNum"], "vars": {}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["bytes32(0)"], "info": ["Outbox", "l2ToL1OutputId"], "vars": {"OUTPUTID_DEFAULT_CONTEXT": "bytes32", "context": "Outbox.L2ToL1Context", "outputId": "bytes32"}, "loop_info": [], "related_expression": ["outputId=context.outputId", "outputId==OUTPUTID_DEFAULT_CONTEXT"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "external", "return_vars": ["outputId--variables"], "modifier": [], "return_expressions": ["outputId"], "info": ["Outbox", "l2ToL1OutputId"], "vars": {"OUTPUTID_DEFAULT_CONTEXT": "bytes32", "context": "Outbox.L2ToL1Context", "outputId": "bytes32"}, "loop_info": [], "related_expression": ["outputId=context.outputId", "not(outputId==OUTPUTID_DEFAULT_CONTEXT)"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["replay--variables", "bitOffset--variables", "spentIndex--variables"], "modifier": [], "return_expressions": ["(spentIndex,bitOffset,replay)"], "info": ["Outbox", "_calcSpentIndexOffset", "index"], "vars": {"bitOffset": "uint256", "index": "uint256", "replay": "bytes32", "spent": "mapping(uint256 => bytes32)", "spentIndex": "uint256"}, "loop_info": [], "related_expression": ["spentIndex=index/255", "bitOffset=index%255", "replay=spent[spentIndex]"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["replay--variables", "bitOffset--variables"], "modifier": [], "return_expressions": ["((replay>>bitOffset)&bytes32(uint256(1)))!=bytes32(0)"], "info": ["Outbox", "_isSpent", "bitOffset", "replay"], "vars": {"bitOffset": "uint256", "replay": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["replay--variables", "bitOffset--variables"], "modifier": [], "return_expressions": ["_isSpent(bitOffset,replay)"], "info": ["Outbox", "isSpent", "index"], "vars": {"bitOffset": "uint256", "index": "uint256", "replay": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["to--variables", "l2Block--variables", "data--variables", "l1Block--variables", "l2Sender--variables", "l2Timestamp--variables", "value--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(l2Sender,to,l2Block,l1Block,l2Timestamp,value,data))"], "info": ["Outbox", "calculateItemHash", "l2Sender", "to", "l2Block", "l1Block", "l2Timestamp", "value", "data"], "vars": {"data": "bytes", "l1Block": "uint256", "l2Block": "uint256", "l2Sender": "address", "l2Timestamp": "uint256", "to": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["path--variables", "item--variables", "proof--variables"], "modifier": [], "return_expressions": ["MerkleLib.calculateRoot(proof,path,keccak256(bytes)(abi.encodePacked(item)))"], "info": ["Outbox", "calculateMerkleRoot", "proof", "path", "item"], "vars": {"item": "bytes32", "path": "uint256", "proof": "bytes32[]"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["bounds--variables"], "modifier": [], "return_expressions": ["bounds"], "info": ["SequencerInbox", "getTimeBounds"], "vars": {"block.number": "uint256", "block.timestamp": "uint256", "bounds": "ISequencerInbox.TimeBounds", "maxTimeVariation": "ISequencerInbox.MaxTimeVariation"}, "loop_info": [], "related_expression": ["block.timestamp>maxTimeVariation.delaySeconds", "bounds.minTimestamp=uint64(block.timestamp-maxTimeVariation.delaySeconds)", "bounds.maxTimestamp=uint64(block.timestamp+maxTimeVariation.futureSeconds)", "block.number>maxTimeVariation.delayBlocks", "bounds.minBlockNumber=uint64(block.number-maxTimeVariation.delayBlocks)", "bounds.maxBlockNumber=uint64(block.number+maxTimeVariation.futureBlocks)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["bounds--variables"], "modifier": [], "return_expressions": ["bounds"], "info": ["SequencerInbox", "getTimeBounds"], "vars": {"block.number": "uint256", "block.timestamp": "uint256", "bounds": "ISequencerInbox.TimeBounds", "maxTimeVariation": "ISequencerInbox.MaxTimeVariation"}, "loop_info": [], "related_expression": ["block.timestamp>maxTimeVariation.delaySeconds", "bounds.minTimestamp=uint64(block.timestamp-maxTimeVariation.delaySeconds)", "bounds.maxTimestamp=uint64(block.timestamp+maxTimeVariation.futureSeconds)", "not(block.number>maxTimeVariation.delayBlocks)", "bounds.maxBlockNumber=uint64(block.number+maxTimeVariation.futureBlocks)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["bounds--variables"], "modifier": [], "return_expressions": ["bounds"], "info": ["SequencerInbox", "getTimeBounds"], "vars": {"block.number": "uint256", "block.timestamp": "uint256", "bounds": "ISequencerInbox.TimeBounds", "maxTimeVariation": "ISequencerInbox.MaxTimeVariation"}, "loop_info": [], "related_expression": ["not(block.timestamp>maxTimeVariation.delaySeconds)", "bounds.maxTimestamp=uint64(block.timestamp+maxTimeVariation.futureSeconds)", "block.number>maxTimeVariation.delayBlocks", "bounds.minBlockNumber=uint64(block.number-maxTimeVariation.delayBlocks)", "bounds.maxBlockNumber=uint64(block.number+maxTimeVariation.futureBlocks)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["bounds--variables"], "modifier": [], "return_expressions": ["bounds"], "info": ["SequencerInbox", "getTimeBounds"], "vars": {"block.number": "uint256", "block.timestamp": "uint256", "bounds": "ISequencerInbox.TimeBounds", "maxTimeVariation": "ISequencerInbox.MaxTimeVariation"}, "loop_info": [], "related_expression": ["not(block.timestamp>maxTimeVariation.delaySeconds)", "bounds.maxTimestamp=uint64(block.timestamp+maxTimeVariation.futureSeconds)", "not(block.number>maxTimeVariation.delayBlocks)", "bounds.maxBlockNumber=uint64(block.number+maxTimeVariation.futureBlocks)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["timeBounds--variables", "header--variables"], "modifier": [], "return_expressions": ["(header,timeBounds)"], "info": ["SequencerInbox", "packHeader", "afterDelayedMessagesRead"], "vars": {"HEADER_LENGTH": "uint256", "afterDelayedMessagesRead": "uint256", "header": "bytes", "timeBounds": "ISequencerInbox.TimeBounds"}, "loop_info": [], "related_expression": ["timeBounds=getTimeBounds()", "header=abi.encodePacked(timeBounds.minTimestamp,timeBounds.maxTimestamp,timeBounds.minBlockNumber,timeBounds.maxBlockNumber,uint64(afterDelayedMessagesRead))", "header.length==HEADER_LENGTH"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["timeBounds--variables", "dataHash--variables"], "modifier": ["validateBatchData"], "return_expressions": ["(dataHash,timeBounds)"], "info": ["SequencerInbox", "formDataHash", "data", "afterDelayedMessagesRead"], "vars": {"afterDelayedMessagesRead": "uint256", "data": "bytes", "dataHash": "bytes32", "header": "bytes", "timeBounds": "ISequencerInbox.TimeBounds"}, "loop_info": [], "related_expression": ["validateBatchData(data)", "(header,timeBounds)=packHeader(afterDelayedMessagesRead)", "dataHash=keccak256(bytes)(bytes.concat(header,data))"], "related_expression_type": ["CallExpression", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["header--variables", "timeBounds--variables"], "modifier": [], "return_expressions": ["(keccak256(bytes)(header),timeBounds)"], "info": ["SequencerInbox", "formEmptyDataHash", "afterDelayedMessagesRead"], "vars": {"afterDelayedMessagesRead": "uint256", "header": "bytes", "timeBounds": "ISequencerInbox.TimeBounds"}, "loop_info": [], "related_expression": ["(header,timeBounds)=packHeader(afterDelayedMessagesRead)"], "related_expression_type": ["AssignmentOperation_="]}, {"visibility": "external", "return_vars": ["index--variables"], "modifier": [], "return_expressions": ["bridge.sequencerInboxAccs(index)"], "info": ["SequencerInbox", "inboxAccs", "index"], "vars": {"bridge": "IBridge", "index": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["bridge.sequencerMessageCount()"], "info": ["SequencerInbox", "batchCount"], "vars": {"bridge": "IBridge"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["ksHash--variables"], "modifier": [], "return_expressions": ["dasKeySetInfo[ksHash].isValidKeyset"], "info": ["SequencerInbox", "isValidKeysetHash", "ksHash"], "vars": {"dasKeySetInfo": "mapping(bytes32 => ISequencerInbox.DasKeySetInfo)", "ksHash": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["ksInfo--variables"], "modifier": [], "return_expressions": ["uint256(ksInfo.creationBlock)"], "info": ["SequencerInbox", "getKeysetCreationBlock", "ksHash"], "vars": {"dasKeySetInfo": "mapping(bytes32 => ISequencerInbox.DasKeySetInfo)", "ksHash": "bytes32", "ksInfo": "ISequencerInbox.DasKeySetInfo"}, "loop_info": [], "related_expression": ["ksInfo=dasKeySetInfo[ksHash]", "ksInfo.creationBlock==0"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "external", "return_vars": ["ksInfo--variables"], "modifier": [], "return_expressions": ["uint256(ksInfo.creationBlock)"], "info": ["SequencerInbox", "getKeysetCreationBlock", "ksHash"], "vars": {"dasKeySetInfo": "mapping(bytes32 => ISequencerInbox.DasKeySetInfo)", "ksHash": "bytes32", "ksInfo": "ISequencerInbox.DasKeySetInfo"}, "loop_info": [], "related_expression": ["ksInfo=dasKeySetInfo[ksHash]", "not(ksInfo.creationBlock==0)"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["challenge--variables"], "modifier": [], "return_expressions": ["block.timestamp-challenge.lastMoveTimestamp"], "info": ["ChallengeLib", "timeUsedSinceLastMove", "challenge"], "vars": {"block.timestamp": "uint256", "challenge": "ChallengeLib.Challenge"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["challenge--variables"], "modifier": [], "return_expressions": ["challenge.timeUsedSinceLastMove()>challenge.current.timeLeft"], "info": ["ChallengeLib", "isTimedOut", "challenge"], "vars": {"challenge": "ChallengeLib.Challenge"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["mach--variables"], "modifier": [], "return_expressions": ["mach.hash()"], "info": ["ChallengeLib", "getStartMachineHash", "globalStateHash", "wasmModuleRoot"], "vars": {"frameStack": "StackFrameWindow", "globalStateHash": "bytes32", "internalStack": "ValueStack", "mach": "Machine", "startingValues": "Value[]", "values": "ValueStack", "valuesArray": "ValueArray", "wasmModuleRoot": "bytes32"}, "loop_info": [], "related_expression": ["startingValues=newValue[](3)", "startingValues[0]=ValueLib.newRefNull()", "startingValues[1]=ValueLib.newI32(0)", "startingValues[2]=ValueLib.newI32(0)", "valuesArray=ValueArray({inner:startingValues})", "values=ValueStack({proved:valuesArray,remainingHash:0})", "mach=Machine({status:MachineStatus.RUNNING,valueStack:values,internalStack:internalStack,frameStack:frameStack,globalStateHash:globalStateHash,moduleIdx:0,functionIdx:0,functionPc:0,modulesRoot:wasmModuleRoot})"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["globalStateHash--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Machinefinished:,globalStateHash))"], "info": ["ChallengeLib", "getEndMachineHash", "status", "globalStateHash"], "vars": {"globalStateHash": "bytes32", "status": "MachineStatus"}, "loop_info": [], "related_expression": ["status==MachineStatus.FINISHED"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Machineerrored:))"], "info": ["ChallengeLib", "getEndMachineHash", "status", "globalStateHash"], "vars": {"globalStateHash": "bytes32", "status": "MachineStatus"}, "loop_info": [], "related_expression": ["not(status==MachineStatus.FINISHED)", "status==MachineStatus.ERRORED"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Machinetoofar:))"], "info": ["ChallengeLib", "getEndMachineHash", "status", "globalStateHash"], "vars": {"globalStateHash": "bytes32", "status": "MachineStatus"}, "loop_info": [], "related_expression": ["not(status==MachineStatus.FINISHED)", "not(status==MachineStatus.ERRORED)", "status==MachineStatus.TOO_FAR"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["segments--variables", "segmentsLength--variables", "segmentsStart--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(segmentsStart,segmentsLength,segments))"], "info": ["ChallengeLib", "hashChallengeState", "segmentsStart", "segmentsLength", "segments"], "vars": {"segments": "bytes32[]", "segmentsLength": "uint256", "segmentsStart": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["globalStateHash--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Blockstate:,globalStateHash))"], "info": ["ChallengeLib", "blockStateHash", "status", "globalStateHash"], "vars": {"globalStateHash": "bytes32", "status": "MachineStatus"}, "loop_info": [], "related_expression": ["status==MachineStatus.FINISHED"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["globalStateHash--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Blockstate,errored:,globalStateHash))"], "info": ["ChallengeLib", "blockStateHash", "status", "globalStateHash"], "vars": {"globalStateHash": "bytes32", "status": "MachineStatus"}, "loop_info": [], "related_expression": ["not(status==MachineStatus.FINISHED)", "status==MachineStatus.ERRORED"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Blockstate,toofar:))"], "info": ["ChallengeLib", "blockStateHash", "status", "globalStateHash"], "vars": {"globalStateHash": "bytes32", "status": "MachineStatus"}, "loop_info": [], "related_expression": ["not(status==MachineStatus.FINISHED)", "not(status==MachineStatus.ERRORED)", "status==MachineStatus.TOO_FAR"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["prevLayer--variables"], "modifier": [], "return_expressions": ["prevLayer[0]"], "info": ["MerkleLib", "generateRoot", "_hashes"], "vars": {"_hashes": "bytes32[]", "i": "uint256", "nextLayer": "bytes32[]", "prevLayer": "bytes32[]"}, "loop_info": [1, 3, 3, 4], "related_expression": ["prevLayer=_hashes", "prevLayer.length>1", "nextLayer=newbytes32[]((prevLayer.length+1)/2)", "not(i<nextLayer.length)", "prevLayer=nextLayer"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="], "isloop": true}, {"visibility": "internal", "return_vars": ["prevLayer--variables"], "modifier": [], "return_expressions": ["prevLayer[0]"], "info": ["MerkleLib", "generateRoot", "_hashes"], "vars": {"_hashes": "bytes32[]", "i": "uint256", "nextLayer": "bytes32[]", "prevLayer": "bytes32[]"}, "loop_info": [1, 1], "related_expression": ["prevLayer=_hashes", "not(prevLayer.length>1)"], "related_expression_type": ["AssignmentOperation_=", "Condition"], "isloop": true}, {"visibility": "internal", "return_vars": ["h--variables"], "modifier": [], "return_expressions": ["h"], "info": ["MerkleLib", "calculateRoot", "nodes", "route", "item"], "vars": {"h": "bytes32", "i": "uint256", "item": "bytes32", "node": "bytes32", "nodes": "bytes32[]", "proofItems": "uint256", "route": "uint256"}, "loop_info": [5, 10], "related_expression": ["proofItems=nodes.length", "proofItems>256", "revertMerkleProofTooLong(uint256,uint256)(proofItems,256)", "h=item", "i=0", "(route&(1<<i))==0", "mstore(uint256,uint256)(0x00,h)", "h=keccak256(uint256,uint256)(0x00,0x40)", "++i", "i<proofItems", "node=nodes[i]"], "related_expression_type": ["AssignmentOperation_=", "Condition", "CallExpression", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_="], "isloop": true}, {"visibility": "internal", "return_vars": ["h--variables"], "modifier": [], "return_expressions": ["h"], "info": ["MerkleLib", "calculateRoot", "nodes", "route", "item"], "vars": {"h": "bytes32", "i": "uint256", "item": "bytes32", "node": "bytes32", "nodes": "bytes32[]", "proofItems": "uint256", "route": "uint256"}, "loop_info": [5, 5], "related_expression": ["proofItems=nodes.length", "proofItems>256", "revertMerkleProofTooLong(uint256,uint256)(proofItems,256)", "h=item", "i=0", "not(i<proofItems)"], "related_expression_type": ["AssignmentOperation_=", "Condition", "CallExpression", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"], "isloop": true}, {"visibility": "internal", "return_vars": ["h--variables"], "modifier": [], "return_expressions": ["h"], "info": ["MerkleLib", "calculateRoot", "nodes", "route", "item"], "vars": {"h": "bytes32", "i": "uint256", "item": "bytes32", "node": "bytes32", "nodes": "bytes32[]", "proofItems": "uint256", "route": "uint256"}, "loop_info": [4, 9], "related_expression": ["proofItems=nodes.length", "not(proofItems>256)", "h=item", "i=0", "(route&(1<<i))==0", "mstore(uint256,uint256)(0x00,h)", "h=keccak256(uint256,uint256)(0x00,0x40)", "++i", "i<proofItems", "node=nodes[i]"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_="], "isloop": true}, {"visibility": "internal", "return_vars": ["h--variables"], "modifier": [], "return_expressions": ["h"], "info": ["MerkleLib", "calculateRoot", "nodes", "route", "item"], "vars": {"h": "bytes32", "i": "uint256", "item": "bytes32", "node": "bytes32", "nodes": "bytes32[]", "proofItems": "uint256", "route": "uint256"}, "loop_info": [4, 4], "related_expression": ["proofItems=nodes.length", "not(proofItems>256)", "h=item", "i=0", "not(i<proofItems)"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"], "isloop": true}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["BridgeCreator", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["BridgeCreator", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["BridgeCreator", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["frame--variables"], "modifier": [], "return_expressions": ["(frame.bridge,frame.sequencerInbox,frame.inbox,frame.rollupEventInbox,frame.outbox)"], "info": ["BridgeCreator", "createBridge", "adminProxy", "rollup", "maxTimeVariation"], "vars": {"adminProxy": "address", "bridgeTemplate": "Bridge", "frame": "BridgeCreator.CreateBridgeFrame", "inboxTemplate": "Inbox", "maxTimeVariation": "ISequencerInbox.MaxTimeVariation", "outboxTemplate": "Outbox", "rollup": "address", "rollupEventInboxTemplate": "RollupEventInbox", "sequencerInboxTemplate": "SequencerInbox"}, "loop_info": [], "related_expression": ["frame.bridge=Bridge(address(newTransparentUpgradeableProxy(address(bridgeTemplate),adminProxy,)))", "frame.sequencerInbox=SequencerInbox(address(newTransparentUpgradeableProxy(address(sequencerInboxTemplate),adminProxy,)))", "frame.inbox=Inbox(address(newTransparentUpgradeableProxy(address(inboxTemplate),adminProxy,)))", "frame.rollupEventInbox=RollupEventInbox(address(newTransparentUpgradeableProxy(address(rollupEventInboxTemplate),adminProxy,)))", "frame.outbox=Outbox(address(newTransparentUpgradeableProxy(address(outboxTemplate),adminProxy,)))", "frame.bridge.initialize(IOwnable(rollup))", "frame.sequencerInbox.initialize(IBridge(frame.bridge),maxTimeVariation)", "frame.inbox.initialize(IBridge(frame.bridge),ISequencerInbox(frame.sequencerInbox))", "frame.rollupEventInbox.initialize(IBridge(frame.bridge))", "frame.outbox.initialize(IBridge(frame.bridge))"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "CallExpression", "CallExpression", "CallExpression", "CallExpression", "CallExpression"]}, {"visibility": "internal", "return_vars": ["node--variables"], "modifier": [], "return_expressions": ["node"], "info": ["NodeLib", "createNode", "_stateHash", "_challengeHash", "_confirmData", "_prevNum", "_deadlineBlock", "_nodeHash"], "vars": {"_challengeHash": "bytes32", "_confirmData": "bytes32", "_deadlineBlock": "uint64", "_nodeHash": "bytes32", "_prevNum": "uint64", "_stateHash": "bytes32", "block.number": "uint256", "node": "Node"}, "loop_info": [], "related_expression": ["node.stateHash=_stateHash", "node.challengeHash=_challengeHash", "node.confirmData=_confirmData", "node.prevNum=_prevNum", "node.deadlineBlock=_deadlineBlock", "node.noChildConfirmedBeforeBlock=_deadlineBlock", "node.createdAtBlock=uint64(block.number)", "node.nodeHash=_nodeHash"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["execState--variables", "inboxMaxCount--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(execState.globalState.hash(),inboxMaxCount,execState.machineStatus))"], "info": ["RollupLib", "stateHash", "execState", "inboxMaxCount"], "vars": {"execState": "RollupLib.ExecutionState", "inboxMaxCount": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["inboxMaxCount--variables", "execState--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(execState.globalState.hash(),inboxMaxCount,execState.machineStatus))"], "info": ["RollupLib", "stateHashMem", "execState", "inboxMaxCount"], "vars": {"execState": "RollupLib.ExecutionState", "inboxMaxCount": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["statuses--variables", "assertion--variables", "globalStates--variables"], "modifier": [], "return_expressions": ["executionHash(statuses,globalStates,assertion.numBlocks)"], "info": ["RollupLib", "executionHash", "assertion"], "vars": {"assertion": "RollupLib.Assertion", "globalStates": "GlobalState[2]", "statuses": "MachineStatus[2]"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["numBlocks--variables", "segments--variables"], "modifier": [], "return_expressions": ["ChallengeLib.hashChallengeState(0,numBlocks,segments)"], "info": ["RollupLib", "executionHash", "statuses", "globalStates", "numBlocks"], "vars": {"globalStates": "GlobalState[2]", "numBlocks": "uint64", "segments": "bytes32[]", "statuses": "MachineStatus[2]"}, "loop_info": [], "related_expression": ["segments=newbytes32[](2)", "segments[0]=ChallengeLib.blockStateHash(statuses[0],globalStates[0].hash())", "segments[1]=ChallengeLib.blockStateHash(statuses[1],globalStates[1].hash())"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["proposedTime--variables", "execution--variables", "wasmModuleRoot--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(execution,proposedTime,wasmModuleRoot))"], "info": ["RollupLib", "challengeRootHash", "execution", "proposedTime", "wasmModuleRoot"], "vars": {"execution": "bytes32", "proposedTime": "uint256", "wasmModuleRoot": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["assertion--variables"], "modifier": [], "return_expressions": ["confirmHash(assertion.afterState.globalState.getBlockHash(),assertion.afterState.globalState.getSendRoot())"], "info": ["RollupLib", "confirmHash", "assertion"], "vars": {"assertion": "RollupLib.Assertion"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["sendRoot--variables", "blockHash--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(blockHash,sendRoot))"], "info": ["RollupLib", "confirmHash", "blockHash", "sendRoot"], "vars": {"blockHash": "bytes32", "sendRoot": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["hasSiblingInt--variables", "lastHash--variables", "assertionExecHash--variables", "inboxAcc--variables", "wasmModuleRoot--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(hasSiblingInt,lastHash,assertionExecHash,inboxAcc,wasmModuleRoot))"], "info": ["RollupLib", "nodeHash", "hasSibling", "lastHash", "assertionExecHash", "inboxAcc", "wasmModuleRoot"], "vars": {"assertionExecHash": "bytes32", "hasSibling": "bool", "hasSiblingInt": "uint8", "inboxAcc": "bytes32", "lastHash": "bytes32", "wasmModuleRoot": "bytes32"}, "loop_info": [], "related_expression": ["hasSibling", "hasSiblingInt=1"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["hasSiblingInt--variables", "lastHash--variables", "assertionExecHash--variables", "inboxAcc--variables", "wasmModuleRoot--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(hasSiblingInt,lastHash,assertionExecHash,inboxAcc,wasmModuleRoot))"], "info": ["RollupLib", "nodeHash", "hasSibling", "lastHash", "assertionExecHash", "inboxAcc", "wasmModuleRoot"], "vars": {"assertionExecHash": "bytes32", "hasSibling": "bool", "hasSiblingInt": "uint8", "inboxAcc": "bytes32", "lastHash": "bytes32", "wasmModuleRoot": "bytes32"}, "loop_info": [], "related_expression": ["not(hasSibling)", "hasSiblingInt=0"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["state--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Globalstate:,state.bytes32Vals[0],state.bytes32Vals[1],state.u64Vals[0],state.u64Vals[1]))"], "info": ["GlobalStateLib", "hash", "state"], "vars": {"state": "GlobalState"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["state--variables"], "modifier": [], "return_expressions": ["state.bytes32Vals[0]"], "info": ["GlobalStateLib", "getBlockHash", "state"], "vars": {"state": "GlobalState"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["state--variables"], "modifier": [], "return_expressions": ["state.bytes32Vals[1]"], "info": ["GlobalStateLib", "getSendRoot", "state"], "vars": {"state": "GlobalState"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["state--variables"], "modifier": [], "return_expressions": ["state.u64Vals[0]"], "info": ["GlobalStateLib", "getInboxPosition", "state"], "vars": {"state": "GlobalState"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["state--variables"], "modifier": [], "return_expressions": ["state.u64Vals[1]"], "info": ["GlobalStateLib", "getPositionInMessage", "state"], "vars": {"state": "GlobalState"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["state--variables"], "modifier": [], "return_expressions": ["(state.bytes32Vals[0]==bytes32(0)&&state.bytes32Vals[1]==bytes32(0)&&state.u64Vals[0]==0&&state.u64Vals[1]==0)"], "info": ["GlobalStateLib", "isEmpty", "state"], "vars": {"state": "GlobalState"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["inst--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Instruction:,inst.opcode,inst.argumentData))"], "info": ["Instructions", "hash", "inst"], "vars": {"inst": "Instruction"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["mach--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Machinerunning:,mach.valueStack.hash(),mach.internalStack.hash(),mach.frameStack.hash(),mach.globalStateHash,mach.moduleIdx,mach.functionIdx,mach.functionPc,mach.modulesRoot))"], "info": ["MachineLib", "hash", "mach"], "vars": {"mach": "Machine"}, "loop_info": [], "related_expression": ["mach.status==MachineStatus.RUNNING"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["mach--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Machinefinished:,mach.globalStateHash))"], "info": ["MachineLib", "hash", "mach"], "vars": {"mach": "Machine"}, "loop_info": [], "related_expression": ["not(mach.status==MachineStatus.RUNNING)", "mach.status==MachineStatus.FINISHED"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Machineerrored:))"], "info": ["MachineLib", "hash", "mach"], "vars": {"mach": "Machine"}, "loop_info": [], "related_expression": ["not(mach.status==MachineStatus.RUNNING)", "not(mach.status==MachineStatus.FINISHED)", "mach.status==MachineStatus.ERRORED"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Machinetoofar:))"], "info": ["MachineLib", "hash", "mach"], "vars": {"mach": "Machine"}, "loop_info": [], "related_expression": ["not(mach.status==MachineStatus.RUNNING)", "not(mach.status==MachineStatus.FINISHED)", "not(mach.status==MachineStatus.ERRORED)", "mach.status==MachineStatus.TOO_FAR"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["index--variables", "leaf--variables", "proof--variables"], "modifier": [], "return_expressions": ["computeRootUnsafe(proof,index,leaf.hash(),Valuemerkletree:)"], "info": ["MerkleProofLib", "computeRootFromValue", "proof", "index", "leaf"], "vars": {"index": "uint256", "leaf": "Value", "proof": "MerkleProof"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["index--variables", "proof--variables", "inst--variables"], "modifier": [], "return_expressions": ["computeRootUnsafe(proof,index,Instructions.hash(inst),Instructionmerkletree:)"], "info": ["MerkleProofLib", "computeRootFromInstruction", "proof", "index", "inst"], "vars": {"index": "uint256", "inst": "Instruction", "proof": "MerkleProof"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["h--variables", "proof--variables", "index--variables"], "modifier": [], "return_expressions": ["computeRootUnsafe(proof,index,h,Functionmerkletree:)"], "info": ["MerkleProofLib", "computeRootFromFunction", "proof", "index", "codeRoot"], "vars": {"codeRoot": "bytes32", "h": "bytes32", "index": "uint256", "proof": "MerkleProof"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["index--variables", "proof--variables", "h--variables"], "modifier": [], "return_expressions": ["computeRootUnsafe(proof,index,h,Memorymerkletree:)"], "info": ["MerkleProofLib", "computeRootFromMemory", "proof", "index", "contents"], "vars": {"contents": "bytes32", "h": "bytes32", "index": "uint256", "proof": "MerkleProof"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["proof--variables", "h--variables", "index--variables"], "modifier": [], "return_expressions": ["computeRootUnsafe(proof,index,h,Tableelementmerkletree:)"], "info": ["MerkleProofLib", "computeRootFromElement", "proof", "index", "funcTypeHash", "val"], "vars": {"funcTypeHash": "bytes32", "h": "bytes32", "index": "uint256", "proof": "MerkleProof", "val": "Value"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["index--variables", "h--variables", "proof--variables"], "modifier": [], "return_expressions": ["computeRootUnsafe(proof,index,h,Tablemerkletree:)"], "info": ["MerkleProofLib", "computeRootFromTable", "proof", "index", "tableType", "tableSize", "elementsRoot"], "vars": {"elementsRoot": "bytes32", "h": "bytes32", "index": "uint256", "proof": "MerkleProof", "tableSize": "uint64", "tableType": "uint8"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["mod--variables", "proof--variables", "index--variables"], "modifier": [], "return_expressions": ["computeRootUnsafe(proof,index,mod.hash(),Modulemerkletree:)"], "info": ["MerkleProofLib", "computeRootFromModule", "proof", "index", "mod"], "vars": {"index": "uint256", "mod": "Module", "proof": "MerkleProof"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["mod--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Module:,mod.globalsMerkleRoot,mod.moduleMemory.hash(),mod.tablesMerkleRoot,mod.functionsMerkleRoot,mod.internalsOffset))"], "info": ["ModuleLib", "hash", "mod"], "vars": {"mod": "Module"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["mem--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Memory:,mem.size,mem.maxSize,mem.merkleRoot))"], "info": ["ModuleMemoryLib", "hash", "mem"], "vars": {"mem": "ModuleMemory"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["frame--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Stackframe:,frame.returnPc.hash(),frame.localsMerkleRoot,frame.callerModule,frame.callerModuleInternals))"], "info": ["StackFrameLib", "hash", "frame"], "vars": {"frame": "StackFrame"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["window--variables"], "modifier": [], "return_expressions": ["window.proved[0]"], "info": ["StackFrameLib", "peek", "window"], "vars": {"window": "StackFrameWindow"}, "loop_info": [], "related_expression": ["window.proved.length==1"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["val--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Value:,val.valueType,val.contents))"], "info": ["ValueLib", "hash", "val"], "vars": {"val": "Value"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["ValueType.INTERNAL_REF"], "info": ["ValueLib", "maxValueType"], "vars": {}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["uintval--variables"], "modifier": [], "return_expressions": ["uint32(uintval)"], "info": ["ValueLib", "assumeI32", "val"], "vars": {"uintval": "uint256", "val": "Value"}, "loop_info": [], "related_expression": ["uintval=uint256(val.contents)", "val.valueType==ValueType.I32", "uintval<(1<<32)"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["uintval--variables"], "modifier": [], "return_expressions": ["uint64(uintval)"], "info": ["ValueLib", "assumeI64", "val"], "vars": {"uintval": "uint256", "val": "Value"}, "loop_info": [], "related_expression": ["uintval=uint256(val.contents)", "val.valueType==ValueType.I64", "uintval<(1<<64)"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["Value({valueType:ValueType.REF_NULL,contents:0})"], "info": ["ValueLib", "newRefNull"], "vars": {}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["x--variables"], "modifier": [], "return_expressions": ["Value({valueType:ValueType.I32,contents:uint256(x)})"], "info": ["ValueLib", "newI32", "x"], "vars": {"x": "uint32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["x--variables"], "modifier": [], "return_expressions": ["Value({valueType:ValueType.I64,contents:uint256(x)})"], "info": ["ValueLib", "newI64", "x"], "vars": {"x": "uint64"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["newI32(uint32(1))"], "info": ["ValueLib", "newBoolean", "x"], "vars": {"x": "bool"}, "loop_info": [], "related_expression": ["x"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["newI32(uint32(0))"], "info": ["ValueLib", "newBoolean", "x"], "vars": {"x": "bool"}, "loop_info": [], "related_expression": ["not(x)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["index--variables", "arr--variables"], "modifier": [], "return_expressions": ["arr.inner[index]"], "info": ["ValueArrayLib", "get", "arr", "index"], "vars": {"arr": "ValueArray", "index": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["arr--variables"], "modifier": [], "return_expressions": ["arr.inner.length"], "info": ["ValueArrayLib", "length", "arr"], "vars": {"arr": "ValueArray"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["len--variables", "stack--variables"], "modifier": [], "return_expressions": ["stack.proved.get(len-1)"], "info": ["ValueStackLib", "peek", "stack"], "vars": {"len": "uint256", "stack": "ValueStack"}, "loop_info": [], "related_expression": ["len=stack.proved.length()"], "related_expression_type": ["AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["stack--variables"], "modifier": [], "return_expressions": ["stack.proved.pop()"], "info": ["ValueStackLib", "pop", "stack"], "vars": {"stack": "ValueStack"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["stack--variables", "val--variables"], "modifier": [], "return_expressions": ["stack.proved.push(val)"], "info": ["ValueStackLib", "push", "stack", "val"], "vars": {"stack": "ValueStack", "val": "Value"}, "loop_info": [], "related_expression": [], "related_expression_type": []}]