[{"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["OwnableUpgradeable", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["OwnableUpgradeable", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["OwnableUpgradeable", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["OwnableUpgradeable", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["Initializable", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["account--variables"], "modifier": [], "return_expressions": ["account.code.length>0"], "info": ["AddressUpgradeable", "isContract", "account"], "vars": {"TMP_38": "bytes", "account": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCall(target,data,Address:low-levelcallfailed)"], "info": ["AddressUpgradeable", "functionCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,0,errorMessage)"], "info": ["AddressUpgradeable", "functionCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["value--variables", "target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,value,Address:low-levelcallwithvaluefailed)"], "info": ["AddressUpgradeable", "functionCallWithValue", "target", "data", "value"], "vars": {"data": "bytes", "target": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["success--variables", "errorMessage--variables", "returndata--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["AddressUpgradeable", "functionCallWithValue", "target", "data", "value", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address", "this": "address", "value": "uint256"}, "loop_info": [], "related_expression": ["address(this).balance>=value", "isContract(target)", "(success,returndata)=target.call{value:value}(data)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionStaticCall(target,data,Address:low-levelstaticcallfailed)"], "info": ["AddressUpgradeable", "functionStaticCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["returndata--variables", "errorMessage--variables", "success--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["AddressUpgradeable", "functionStaticCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.staticcall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["returndata--variables"], "modifier": [], "return_expressions": ["returndata"], "info": ["AddressUpgradeable", "verifyCallResult", "success", "returndata", "errorMessage"], "vars": {"errorMessage": "string", "returndata": "bytes", "returndata_size_verifyCallResult_asm_0": "uint256", "success": "bool"}, "loop_info": [], "related_expression": ["success"], "related_expression_type": ["Condition"]}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["ContextUpgradeable", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["ContextUpgradeable", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["ContextUpgradeable", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["account--variables"], "modifier": [], "return_expressions": ["account.code.length>0"], "info": ["Address", "isContract", "account"], "vars": {"TMP_75": "bytes", "account": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCall(target,data,Address:low-levelcallfailed)"], "info": ["Address", "functionCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,0,errorMessage)"], "info": ["Address", "functionCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["target--variables", "value--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,value,Address:low-levelcallwithvaluefailed)"], "info": ["Address", "functionCallWithValue", "target", "data", "value"], "vars": {"data": "bytes", "target": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["returndata--variables", "errorMessage--variables", "success--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionCallWithValue", "target", "data", "value", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address", "this": "address", "value": "uint256"}, "loop_info": [], "related_expression": ["address(this).balance>=value", "isContract(target)", "(success,returndata)=target.call{value:value}(data)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionStaticCall(target,data,Address:low-levelstaticcallfailed)"], "info": ["Address", "functionStaticCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["errorMessage--variables", "returndata--variables", "success--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionStaticCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.staticcall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionDelegateCall(target,data,Address:low-leveldelegatecallfailed)"], "info": ["Address", "functionDelegateCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["returndata--variables", "success--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionDelegateCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.delegatecall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["returndata--variables"], "modifier": [], "return_expressions": ["returndata"], "info": ["Address", "verifyCallResult", "success", "returndata", "errorMessage"], "vars": {"errorMessage": "string", "returndata": "bytes", "returndata_size_verifyCallResult_asm_0": "uint256", "success": "bool"}, "loop_info": [], "related_expression": ["success"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["challenge--variables"], "modifier": [], "return_expressions": ["block.timestamp-challenge.lastMoveTimestamp"], "info": ["ChallengeLib", "timeUsedSinceLastMove", "challenge"], "vars": {"block.timestamp": "uint256", "challenge": "ChallengeLib.Challenge"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["challenge--variables"], "modifier": [], "return_expressions": ["challenge.timeUsedSinceLastMove()>challenge.current.timeLeft"], "info": ["ChallengeLib", "isTimedOut", "challenge"], "vars": {"challenge": "ChallengeLib.Challenge"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["mach--variables"], "modifier": [], "return_expressions": ["mach.hash()"], "info": ["ChallengeLib", "getStartMachineHash", "globalStateHash", "wasmModuleRoot"], "vars": {"frameStack": "StackFrameWindow", "globalStateHash": "bytes32", "internalStack": "ValueStack", "mach": "Machine", "startingValues": "Value[]", "values": "ValueStack", "valuesArray": "ValueArray", "wasmModuleRoot": "bytes32"}, "loop_info": [], "related_expression": ["startingValues=newValue[](3)", "startingValues[0]=ValueLib.newRefNull()", "startingValues[1]=ValueLib.newI32(0)", "startingValues[2]=ValueLib.newI32(0)", "valuesArray=ValueArray({inner:startingValues})", "values=ValueStack({proved:valuesArray,remainingHash:0})", "mach=Machine({status:MachineStatus.RUNNING,valueStack:values,internalStack:internalStack,frameStack:frameStack,globalStateHash:globalStateHash,moduleIdx:0,functionIdx:0,functionPc:0,modulesRoot:wasmModuleRoot})"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["globalStateHash--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Machinefinished:,globalStateHash))"], "info": ["ChallengeLib", "getEndMachineHash", "status", "globalStateHash"], "vars": {"globalStateHash": "bytes32", "status": "MachineStatus"}, "loop_info": [], "related_expression": ["status==MachineStatus.FINISHED"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Machineerrored:))"], "info": ["ChallengeLib", "getEndMachineHash", "status", "globalStateHash"], "vars": {"globalStateHash": "bytes32", "status": "MachineStatus"}, "loop_info": [], "related_expression": ["not(status==MachineStatus.FINISHED)", "status==MachineStatus.ERRORED"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Machinetoofar:))"], "info": ["ChallengeLib", "getEndMachineHash", "status", "globalStateHash"], "vars": {"globalStateHash": "bytes32", "status": "MachineStatus"}, "loop_info": [], "related_expression": ["not(status==MachineStatus.FINISHED)", "not(status==MachineStatus.ERRORED)", "status==MachineStatus.TOO_FAR"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["segmentsLength--variables", "segmentsStart--variables", "segments--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(segmentsStart,segmentsLength,segments))"], "info": ["ChallengeLib", "hashChallengeState", "segmentsStart", "segmentsLength", "segments"], "vars": {"segments": "bytes32[]", "segmentsLength": "uint256", "segmentsStart": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["globalStateHash--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Blockstate:,globalStateHash))"], "info": ["ChallengeLib", "blockStateHash", "status", "globalStateHash"], "vars": {"globalStateHash": "bytes32", "status": "MachineStatus"}, "loop_info": [], "related_expression": ["status==MachineStatus.FINISHED"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["globalStateHash--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Blockstate,errored:,globalStateHash))"], "info": ["ChallengeLib", "blockStateHash", "status", "globalStateHash"], "vars": {"globalStateHash": "bytes32", "status": "MachineStatus"}, "loop_info": [], "related_expression": ["not(status==MachineStatus.FINISHED)", "status==MachineStatus.ERRORED"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Blockstate,toofar:))"], "info": ["ChallengeLib", "blockStateHash", "status", "globalStateHash"], "vars": {"globalStateHash": "bytes32", "status": "MachineStatus"}, "loop_info": [], "related_expression": ["not(status==MachineStatus.FINISHED)", "not(status==MachineStatus.ERRORED)", "status==MachineStatus.TOO_FAR"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["ValidatorWallet", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["ValidatorWallet", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["ValidatorWallet", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["ValidatorWallet", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["state--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Globalstate:,state.bytes32Vals[0],state.bytes32Vals[1],state.u64Vals[0],state.u64Vals[1]))"], "info": ["GlobalStateLib", "hash", "state"], "vars": {"state": "GlobalState"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["state--variables"], "modifier": [], "return_expressions": ["state.bytes32Vals[0]"], "info": ["GlobalStateLib", "getBlockHash", "state"], "vars": {"state": "GlobalState"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["state--variables"], "modifier": [], "return_expressions": ["state.bytes32Vals[1]"], "info": ["GlobalStateLib", "getSendRoot", "state"], "vars": {"state": "GlobalState"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["state--variables"], "modifier": [], "return_expressions": ["state.u64Vals[0]"], "info": ["GlobalStateLib", "getInboxPosition", "state"], "vars": {"state": "GlobalState"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["state--variables"], "modifier": [], "return_expressions": ["state.u64Vals[1]"], "info": ["GlobalStateLib", "getPositionInMessage", "state"], "vars": {"state": "GlobalState"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["state--variables"], "modifier": [], "return_expressions": ["(state.bytes32Vals[0]==bytes32(0)&&state.bytes32Vals[1]==bytes32(0)&&state.u64Vals[0]==0&&state.u64Vals[1]==0)"], "info": ["GlobalStateLib", "isEmpty", "state"], "vars": {"state": "GlobalState"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["inst--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Instruction:,inst.opcode,inst.argumentData))"], "info": ["Instructions", "hash", "inst"], "vars": {"inst": "Instruction"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["mach--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Machinerunning:,mach.valueStack.hash(),mach.internalStack.hash(),mach.frameStack.hash(),mach.globalStateHash,mach.moduleIdx,mach.functionIdx,mach.functionPc,mach.modulesRoot))"], "info": ["MachineLib", "hash", "mach"], "vars": {"mach": "Machine"}, "loop_info": [], "related_expression": ["mach.status==MachineStatus.RUNNING"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["mach--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Machinefinished:,mach.globalStateHash))"], "info": ["MachineLib", "hash", "mach"], "vars": {"mach": "Machine"}, "loop_info": [], "related_expression": ["not(mach.status==MachineStatus.RUNNING)", "mach.status==MachineStatus.FINISHED"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Machineerrored:))"], "info": ["MachineLib", "hash", "mach"], "vars": {"mach": "Machine"}, "loop_info": [], "related_expression": ["not(mach.status==MachineStatus.RUNNING)", "not(mach.status==MachineStatus.FINISHED)", "mach.status==MachineStatus.ERRORED"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Machinetoofar:))"], "info": ["MachineLib", "hash", "mach"], "vars": {"mach": "Machine"}, "loop_info": [], "related_expression": ["not(mach.status==MachineStatus.RUNNING)", "not(mach.status==MachineStatus.FINISHED)", "not(mach.status==MachineStatus.ERRORED)", "mach.status==MachineStatus.TOO_FAR"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["proof--variables", "leaf--variables", "index--variables"], "modifier": [], "return_expressions": ["computeRootUnsafe(proof,index,leaf.hash(),Valuemerkletree:)"], "info": ["MerkleProofLib", "computeRootFromValue", "proof", "index", "leaf"], "vars": {"index": "uint256", "leaf": "Value", "proof": "MerkleProof"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["proof--variables", "inst--variables", "index--variables"], "modifier": [], "return_expressions": ["computeRootUnsafe(proof,index,Instructions.hash(inst),Instructionmerkletree:)"], "info": ["MerkleProofLib", "computeRootFromInstruction", "proof", "index", "inst"], "vars": {"index": "uint256", "inst": "Instruction", "proof": "MerkleProof"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["index--variables", "proof--variables", "h--variables"], "modifier": [], "return_expressions": ["computeRootUnsafe(proof,index,h,Functionmerkletree:)"], "info": ["MerkleProofLib", "computeRootFromFunction", "proof", "index", "codeRoot"], "vars": {"codeRoot": "bytes32", "h": "bytes32", "index": "uint256", "proof": "MerkleProof"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["h--variables", "index--variables", "proof--variables"], "modifier": [], "return_expressions": ["computeRootUnsafe(proof,index,h,Memorymerkletree:)"], "info": ["MerkleProofLib", "computeRootFromMemory", "proof", "index", "contents"], "vars": {"contents": "bytes32", "h": "bytes32", "index": "uint256", "proof": "MerkleProof"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["index--variables", "proof--variables", "h--variables"], "modifier": [], "return_expressions": ["computeRootUnsafe(proof,index,h,Tableelementmerkletree:)"], "info": ["MerkleProofLib", "computeRootFromElement", "proof", "index", "funcTypeHash", "val"], "vars": {"funcTypeHash": "bytes32", "h": "bytes32", "index": "uint256", "proof": "MerkleProof", "val": "Value"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["h--variables", "proof--variables", "index--variables"], "modifier": [], "return_expressions": ["computeRootUnsafe(proof,index,h,Tablemerkletree:)"], "info": ["MerkleProofLib", "computeRootFromTable", "proof", "index", "tableType", "tableSize", "elementsRoot"], "vars": {"elementsRoot": "bytes32", "h": "bytes32", "index": "uint256", "proof": "MerkleProof", "tableSize": "uint64", "tableType": "uint8"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["proof--variables", "mod--variables", "index--variables"], "modifier": [], "return_expressions": ["computeRootUnsafe(proof,index,mod.hash(),Modulemerkletree:)"], "info": ["MerkleProofLib", "computeRootFromModule", "proof", "index", "mod"], "vars": {"index": "uint256", "mod": "Module", "proof": "MerkleProof"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["mod--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Module:,mod.globalsMerkleRoot,mod.moduleMemory.hash(),mod.tablesMerkleRoot,mod.functionsMerkleRoot,mod.internalsOffset))"], "info": ["ModuleLib", "hash", "mod"], "vars": {"mod": "Module"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["mem--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Memory:,mem.size,mem.maxSize,mem.merkleRoot))"], "info": ["ModuleMemoryLib", "hash", "mem"], "vars": {"mem": "ModuleMemory"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["frame--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Stackframe:,frame.returnPc.hash(),frame.localsMerkleRoot,frame.callerModule,frame.callerModuleInternals))"], "info": ["StackFrameLib", "hash", "frame"], "vars": {"frame": "StackFrame"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["window--variables"], "modifier": [], "return_expressions": ["window.proved[0]"], "info": ["StackFrameLib", "peek", "window"], "vars": {"window": "StackFrameWindow"}, "loop_info": [], "related_expression": ["window.proved.length==1"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["val--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(Value:,val.valueType,val.contents))"], "info": ["ValueLib", "hash", "val"], "vars": {"val": "Value"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["ValueType.INTERNAL_REF"], "info": ["ValueLib", "maxValueType"], "vars": {}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["uintval--variables"], "modifier": [], "return_expressions": ["uint32(uintval)"], "info": ["ValueLib", "assumeI32", "val"], "vars": {"uintval": "uint256", "val": "Value"}, "loop_info": [], "related_expression": ["uintval=uint256(val.contents)", "val.valueType==ValueType.I32", "uintval<(1<<32)"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["uintval--variables"], "modifier": [], "return_expressions": ["uint64(uintval)"], "info": ["ValueLib", "assumeI64", "val"], "vars": {"uintval": "uint256", "val": "Value"}, "loop_info": [], "related_expression": ["uintval=uint256(val.contents)", "val.valueType==ValueType.I64", "uintval<(1<<64)"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["Value({valueType:ValueType.REF_NULL,contents:0})"], "info": ["ValueLib", "newRefNull"], "vars": {}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["x--variables"], "modifier": [], "return_expressions": ["Value({valueType:ValueType.I32,contents:uint256(x)})"], "info": ["ValueLib", "newI32", "x"], "vars": {"x": "uint32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["x--variables"], "modifier": [], "return_expressions": ["Value({valueType:ValueType.I64,contents:uint256(x)})"], "info": ["ValueLib", "newI64", "x"], "vars": {"x": "uint64"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["newI32(uint32(1))"], "info": ["ValueLib", "newBoolean", "x"], "vars": {"x": "bool"}, "loop_info": [], "related_expression": ["x"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["newI32(uint32(0))"], "info": ["ValueLib", "newBoolean", "x"], "vars": {"x": "bool"}, "loop_info": [], "related_expression": ["not(x)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["index--variables", "arr--variables"], "modifier": [], "return_expressions": ["arr.inner[index]"], "info": ["ValueArrayLib", "get", "arr", "index"], "vars": {"arr": "ValueArray", "index": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["arr--variables"], "modifier": [], "return_expressions": ["arr.inner.length"], "info": ["ValueArrayLib", "length", "arr"], "vars": {"arr": "ValueArray"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["stack--variables", "len--variables"], "modifier": [], "return_expressions": ["stack.proved.get(len-1)"], "info": ["ValueStackLib", "peek", "stack"], "vars": {"len": "uint256", "stack": "ValueStack"}, "loop_info": [], "related_expression": ["len=stack.proved.length()"], "related_expression_type": ["AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["stack--variables"], "modifier": [], "return_expressions": ["stack.proved.pop()"], "info": ["ValueStackLib", "pop", "stack"], "vars": {"stack": "ValueStack"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["val--variables", "stack--variables"], "modifier": [], "return_expressions": ["stack.proved.push(val)"], "info": ["ValueStackLib", "push", "stack", "val"], "vars": {"stack": "ValueStack", "val": "Value"}, "loop_info": [], "related_expression": [], "related_expression_type": []}]