[{"visibility": "public", "return_vars": ["rdata--variables"], "modifier": ["onlyAdmin"], "return_expressions": ["rdata"], "info": ["EthCustodian", "adminDelegatecall", "target", "data"], "vars": {"data": "bytes", "rdata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["(success,rdata)=target.delegatecall(data)", "success"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "tryAdd", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["c=a+b", "c<a"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["(true,c)"], "info": ["SafeMath", "tryAdd", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["c=a+b", "not(c<a)"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "trySub", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b>a"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["(true,a-b)"], "info": ["SafeMath", "trySub", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["not(b>a)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(true,0)"], "info": ["SafeMath", "tryMul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["a==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "tryMul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["not(a==0)", "c=a*b", "c/a!=b"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["(true,c)"], "info": ["SafeMath", "tryMul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["not(a==0)", "c=a*b", "not(c/a!=b)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "tryDiv", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["(true,a/b)"], "info": ["SafeMath", "tryDiv", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["not(b==0)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "tryMod", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["(true,a%b)"], "info": ["SafeMath", "tryMod", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["not(b==0)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "add", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["c=a+b", "c>=a"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["a-b"], "info": ["SafeMath", "sub", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b<=a"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0"], "info": ["SafeMath", "mul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["a==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "mul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["not(a==0)", "c=a*b", "c/a==b"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["a/b"], "info": ["SafeMath", "div", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b>0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a%b"], "info": ["SafeMath", "mod", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b>0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a-b"], "info": ["SafeMath", "sub", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b<=a"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a/b"], "info": ["SafeMath", "div", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b>0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a%b"], "info": ["SafeMath", "mod", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b>0"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": ["rdata--variables"], "modifier": ["onlyAdmin"], "return_expressions": ["rdata"], "info": ["AdminControlled", "adminDelegatecall", "target", "data"], "vars": {"data": "bytes", "rdata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["(success,rdata)=target.delegatecall(data)", "success"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["data--variables"], "modifier": [], "return_expressions": ["Data({offset:0,raw:data})"], "info": ["Borsh", "from", "data"], "vars": {"data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["data--variables"], "modifier": [], "return_expressions": ["data.offset==data.raw.length"], "info": ["Borsh", "finished", "data"], "vars": {"data": "Borsh.Data"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["data--variables", "length--variables"], "modifier": [], "return_expressions": ["bytesKeccak256(data.raw,data.offset,length)"], "info": ["Borsh", "peekKeccak256", "data", "length"], "vars": {"data": "Borsh.Data", "length": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["length--variables", "data--variables"], "modifier": [], "return_expressions": ["bytesSha256(data.raw,data.offset,length)"], "info": ["Borsh", "peekSha256", "data", "length"], "vars": {"data": "Borsh.Data", "length": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["result--variables"], "modifier": [], "return_expressions": ["result[0]"], "info": ["Borsh", "bytesSha256", "ptr", "offset", "length"], "vars": {"length": "uint256", "offset": "uint256", "ptr": "bytes", "result": "bytes32[1]"}, "loop_info": [], "related_expression": ["pop(uint256)(staticcall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),0x02,ptr+32+offset,length,result,32))"], "related_expression_type": ["CallExpression"]}]