[{"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["NomadBase", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["NomadBase", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["NomadBase", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["NomadBase", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_homeDomain--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(_homeDomain,NOMAD))"], "info": ["NomadBase", "_homeDomainHash", "_homeDomain"], "vars": {"_homeDomain": "uint32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_digest--variables", "_signature--variables"], "modifier": [], "return_expressions": ["(ECDSA.recover(_digest,_signature)==updater)"], "info": ["NomadBase", "_isUpdaterSignature", "_oldRoot", "_newRoot", "_signature"], "vars": {"_digest": "bytes32", "_newRoot": "bytes32", "_oldRoot": "bytes32", "_signature": "bytes", "updater": "address"}, "loop_info": [], "related_expression": ["_digest=keccak256(bytes)(abi.encodePacked(homeDomainHash(),_oldRoot,_newRoot))", "_digest=ECDSA.toEthSignedMessageHash(_digest)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["_originDomain--variables", "_recipient--variables", "_destinationDomain--variables", "_messageBody--variables", "_sender--variables", "_nonce--variables"], "modifier": [], "return_expressions": ["abi.encodePacked(_originDomain,_sender,_nonce,_destinationDomain,_recipient,_messageBody)"], "info": ["Message", "formatMessage", "_originDomain", "_sender", "_nonce", "_destinationDomain", "_recipient", "_messageBody"], "vars": {"_destinationDomain": "uint32", "_messageBody": "bytes", "_nonce": "uint32", "_originDomain": "uint32", "_recipient": "bytes32", "_sender": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_recipient--variables", "_body--variables", "_nonce--variables", "_sender--variables", "_origin--variables", "_destination--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(formatMessage(_origin,_sender,_nonce,_destination,_recipient,_body))"], "info": ["Message", "messageHash", "_origin", "_sender", "_nonce", "_destination", "_recipient", "_body"], "vars": {"_body": "bytes", "_destination": "uint32", "_nonce": "uint32", "_origin": "uint32", "_recipient": "bytes32", "_sender": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["uint32(_message.indexUint(0,4))"], "info": ["Message", "origin", "_message"], "vars": {"_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["_message.index(4,32)"], "info": ["Message", "sender", "_message"], "vars": {"_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["uint32(_message.indexUint(36,4))"], "info": ["Message", "nonce", "_message"], "vars": {"_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["uint32(_message.indexUint(40,4))"], "info": ["Message", "destination", "_message"], "vars": {"_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["_message.index(44,32)"], "info": ["Message", "recipient", "_message"], "vars": {"_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["TypeCasts.bytes32ToAddress(recipient(_message))"], "info": ["Message", "recipientAddress", "_message"], "vars": {"_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["_message.slice(PREFIX_LENGTH,_message.len()-PREFIX_LENGTH,0)"], "info": ["Message", "body", "_message"], "vars": {"PREFIX_LENGTH": "uint256", "_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["messageHash(origin(_message),sender(_message),nonce(_message),destination(_message),recipient(_message),TypedMemView.clone(body(_message)))"], "info": ["Message", "leaf", "_message"], "vars": {"_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_addr--variables"], "modifier": [], "return_expressions": ["bytes32(uint256(uint160(_addr)))"], "info": ["TypeCasts", "addressToBytes32", "_addr"], "vars": {"_addr": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_buf--variables"], "modifier": [], "return_expressions": ["address(uint160(uint256(_buf)))"], "info": ["TypeCasts", "bytes32ToAddress", "_buf"], "vars": {"_buf": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["OwnableUpgradeable", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["OwnableUpgradeable", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["OwnableUpgradeable", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["OwnableUpgradeable", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["Initializable", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["size--variables"], "modifier": [], "return_expressions": ["size>0"], "info": ["AddressUpgradeable", "isContract", "account"], "vars": {"account": "address", "size": "uint256"}, "loop_info": [], "related_expression": ["size=extcodesize(uint256)(account)"], "related_expression_type": ["AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCall(target,data,Address:low-levelcallfailed)"], "info": ["AddressUpgradeable", "functionCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["target--variables", "errorMessage--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,0,errorMessage)"], "info": ["AddressUpgradeable", "functionCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["target--variables", "value--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,value,Address:low-levelcallwithvaluefailed)"], "info": ["AddressUpgradeable", "functionCallWithValue", "target", "data", "value"], "vars": {"data": "bytes", "target": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["returndata--variables", "success--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["AddressUpgradeable", "functionCallWithValue", "target", "data", "value", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address", "this": "address", "value": "uint256"}, "loop_info": [], "related_expression": ["address(this).balance>=value", "isContract(target)", "(success,returndata)=target.call{value:value}(data)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionStaticCall(target,data,Address:low-levelstaticcallfailed)"], "info": ["AddressUpgradeable", "functionStaticCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["success--variables", "returndata--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["AddressUpgradeable", "functionStaticCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.staticcall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "private", "return_vars": ["returndata--variables"], "modifier": [], "return_expressions": ["returndata"], "info": ["AddressUpgradeable", "_verifyCallResult", "success", "returndata", "errorMessage"], "vars": {"errorMessage": "string", "returndata": "bytes", "returndata_size__verifyCallResult_asm_0": "uint256", "success": "bool"}, "loop_info": [], "related_expression": ["success"], "related_expression_type": ["Condition"]}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["ContextUpgradeable", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["ContextUpgradeable", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["ContextUpgradeable", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["hash--variables", "r--variables", "v--variables", "s--variables"], "modifier": [], "return_expressions": ["recover(hash,v,r,s)"], "info": ["ECDSA", "recover", "hash", "signature"], "vars": {"hash": "bytes32", "r": "bytes32", "s": "bytes32", "signature": "bytes", "v": "uint8"}, "loop_info": [], "related_expression": ["signature.length!=65"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["hash--variables", "r--variables", "v--variables", "s--variables"], "modifier": [], "return_expressions": ["recover(hash,v,r,s)"], "info": ["ECDSA", "recover", "hash", "signature"], "vars": {"hash": "bytes32", "r": "bytes32", "s": "bytes32", "signature": "bytes", "v": "uint8"}, "loop_info": [], "related_expression": ["not(signature.length!=65)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["signer--variables"], "modifier": [], "return_expressions": ["signer"], "info": ["ECDSA", "recover", "hash", "v", "r", "s"], "vars": {"hash": "bytes32", "r": "bytes32", "s": "bytes32", "signer": "address", "v": "uint8"}, "loop_info": [], "related_expression": ["uint256(s)<=0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0", "v==27||v==28", "signer=ecrecover(bytes32,uint8,bytes32,bytes32)(hash,v,r,s)", "signer!=address(0)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["hash--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(\u0019EthereumSignedMessage:\n32,hash))"], "info": ["ECDSA", "toEthSignedMessageHash", "hash"], "vars": {"hash": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0"], "info": ["SafeMath", "mul", "_a", "_b"], "vars": {"_a": "uint256", "_b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["_a==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "mul", "_a", "_b"], "vars": {"_a": "uint256", "_b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["not(_a==0)", "c=_a*_b", "c/_a==_b"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["_b--variables", "_a--variables"], "modifier": [], "return_expressions": ["_a/_b"], "info": ["SafeMath", "div", "_a", "_b"], "vars": {"_a": "uint256", "_b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_a--variables", "_b--variables"], "modifier": [], "return_expressions": ["_a-_b"], "info": ["SafeMath", "sub", "_a", "_b"], "vars": {"_a": "uint256", "_b": "uint256"}, "loop_info": [], "related_expression": ["_b<=_a"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "add", "_a", "_b"], "vars": {"_a": "uint256", "_b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["c=_a+_b", "c>=_a"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x30"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["_nibble==0xf0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x31"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "_nibble==0xf1"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x32"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "_nibble==0xf2"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x33"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "_nibble==0xf3"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x34"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "_nibble==0xf4"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x35"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "_nibble==0xf5"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x36"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "_nibble==0xf6"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x37"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "_nibble==0xf7"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x38"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "not(_nibble==0xf7)", "_nibble==0xf8"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x39"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "not(_nibble==0xf7)", "not(_nibble==0xf8)", "_nibble==0xf9"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x61"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "not(_nibble==0xf7)", "not(_nibble==0xf8)", "not(_nibble==0xf9)", "_nibble==0xfa"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x62"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "not(_nibble==0xf7)", "not(_nibble==0xf8)", "not(_nibble==0xf9)", "not(_nibble==0xfa)", "_nibble==0xfb"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x63"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "not(_nibble==0xf7)", "not(_nibble==0xf8)", "not(_nibble==0xf9)", "not(_nibble==0xfa)", "not(_nibble==0xfb)", "_nibble==0xfc"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x64"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "not(_nibble==0xf7)", "not(_nibble==0xf8)", "not(_nibble==0xf9)", "not(_nibble==0xfa)", "not(_nibble==0xfb)", "not(_nibble==0xfc)", "_nibble==0xfd"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x65"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "not(_nibble==0xf7)", "not(_nibble==0xf8)", "not(_nibble==0xf9)", "not(_nibble==0xfa)", "not(_nibble==0xfb)", "not(_nibble==0xfc)", "not(_nibble==0xfd)", "_nibble==0xfe"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x66"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "not(_nibble==0xf7)", "not(_nibble==0xf8)", "not(_nibble==0xf9)", "not(_nibble==0xfa)", "not(_nibble==0xfb)", "not(_nibble==0xfc)", "not(_nibble==0xfd)", "not(_nibble==0xfe)", "_nibble==0xff"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["NULL"], "info": ["TypedMemView", "nullView"], "vars": {"NULL": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memView--variables"], "modifier": [], "return_expressions": ["memView==NULL"], "info": ["TypedMemView", "isNull", "memView"], "vars": {"NULL": "bytes29", "memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memView--variables"], "modifier": [], "return_expressions": ["!isNull(memView)"], "info": ["TypedMemView", "notNull", "memView"], "vars": {"memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["false"], "info": ["TypedMemView", "isValid", "memView"], "vars": {"_end": "uint256", "memView": "bytes29", "ret": "bool"}, "loop_info": [], "related_expression": ["typeOf(memView)==0xffffffffff"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["memView--variables"], "modifier": [], "return_expressions": ["memView"], "info": ["TypedMemView", "assertValid", "memView"], "vars": {"memView": "bytes29"}, "loop_info": [], "related_expression": ["isValid(memView)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["memView--variables", "_expected--variables"], "modifier": [], "return_expressions": ["typeOf(memView)==_expected"], "info": ["TypedMemView", "isType", "memView", "_expected"], "vars": {"_expected": "uint40", "memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memView--variables"], "modifier": [], "return_expressions": ["memView"], "info": ["TypedMemView", "assertType", "memView", "_expected"], "vars": {"_expected": "uint40", "e": "uint256", "err": "string", "g": "uint256", "memView": "bytes29"}, "loop_info": [], "related_expression": ["!isType(memView,_expected)", "(g)=encodeHex(uint256(typeOf(memView)))"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["memView--variables"], "modifier": [], "return_expressions": ["memView"], "info": ["TypedMemView", "assertType", "memView", "_expected"], "vars": {"_expected": "uint40", "e": "uint256", "err": "string", "g": "uint256", "memView": "bytes29"}, "loop_info": [], "related_expression": ["not(!isType(memView,_expected))"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["NULL"], "info": ["TypedMemView", "build", "_type", "_loc", "_len"], "vars": {"NULL": "bytes29", "_end": "uint256", "_len": "uint256", "_loc": "uint256", "_type": "uint256", "newView": "bytes29"}, "loop_info": [], "related_expression": ["_end>mload(uint256)(0x40)", "_end==0"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["NULL"], "info": ["TypedMemView", "build", "_type", "_loc", "_len"], "vars": {"NULL": "bytes29", "_end": "uint256", "_len": "uint256", "_loc": "uint256", "_type": "uint256", "newView": "bytes29"}, "loop_info": [], "related_expression": ["not(_end>mload(uint256)(0x40))", "_end==0"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["_len--variables", "_loc--variables", "newType--variables"], "modifier": [], "return_expressions": ["build(newType,_loc,_len)"], "info": ["TypedMemView", "ref", "arr", "newType"], "vars": {"_len": "uint256", "_loc": "uint256", "arr": "bytes", "newType": "uint40"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["right--variables", "left--variables"], "modifier": [], "return_expressions": ["(left^right)>>(2*TWELVE_BYTES)==0"], "info": ["TypedMemView", "sameType", "left", "right"], "vars": {"TWELVE_BYTES": "uint8", "left": "bytes29", "right": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memView--variables"], "modifier": [], "return_expressions": ["uint256(len(memView)).add(32)/32"], "info": ["TypedMemView", "words", "memView"], "vars": {"memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memView--variables"], "modifier": [], "return_expressions": ["words(memView)*32"], "info": ["TypedMemView", "footprint", "memView"], "vars": {"memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memView--variables"], "modifier": [], "return_expressions": ["loc(memView)+len(memView)"], "info": ["TypedMemView", "end", "memView"], "vars": {"memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["NULL"], "info": ["TypedMemView", "slice", "memView", "_index", "_len", "newType"], "vars": {"NULL": "bytes29", "_index": "uint256", "_len": "uint256", "_loc": "uint256", "memView": "bytes29", "newType": "uint40"}, "loop_info": [], "related_expression": ["_loc.add(_index).add(_len)>end(memView)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["newType--variables", "_loc--variables", "_len--variables"], "modifier": [], "return_expressions": ["build(newType,_loc,_len)"], "info": ["TypedMemView", "slice", "memView", "_index", "_len", "newType"], "vars": {"NULL": "bytes29", "_index": "uint256", "_len": "uint256", "_loc": "uint256", "memView": "bytes29", "newType": "uint40"}, "loop_info": [], "related_expression": ["not(_loc.add(_index).add(_len)>end(memView))"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["memView--variables", "_len--variables", "newType--variables"], "modifier": [], "return_expressions": ["slice(memView,0,_len,newType)"], "info": ["TypedMemView", "prefix", "memView", "_len", "newType"], "vars": {"_len": "uint256", "memView": "bytes29", "newType": "uint40"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_len--variables", "newType--variables", "memView--variables"], "modifier": [], "return_expressions": ["slice(memView,uint256(len(memView)).sub(_len),_len,newType)"], "info": ["TypedMemView", "postfix", "memView", "_len", "newType"], "vars": {"_len": "uint256", "memView": "bytes29", "newType": "uint40"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["bytes32(0)"], "info": ["TypedMemView", "index", "memView", "_index", "_bytes"], "vars": {"_bytes": "uint8", "_index": "uint256", "_loc": "uint256", "_mask": "uint256", "bitLength": "int256", "memView": "bytes29", "result": "bytes32"}, "loop_info": [], "related_expression": ["_bytes==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["memView--variables", "_index--variables", "_bytes--variables"], "modifier": [], "return_expressions": ["uint256(index(memView,_index,_bytes))>>((32-_bytes)*8)"], "info": ["TypedMemView", "indexUint", "memView", "_index", "_bytes"], "vars": {"_bytes": "uint8", "_index": "uint256", "memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memView--variables", "_bytes--variables", "_index--variables"], "modifier": [], "return_expressions": ["reverseUint256(uint256(index(memView,_index,_bytes)))"], "info": ["TypedMemView", "indexLEUint", "memView", "_index", "_bytes"], "vars": {"_bytes": "uint8", "_index": "uint256", "memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memView--variables", "_index--variables"], "modifier": [], "return_expressions": ["address(uint160(indexUint(memView,_index,20)))"], "info": ["TypedMemView", "indexAddress", "memView", "_index"], "vars": {"_index": "uint256", "memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["right--variables", "left--variables"], "modifier": [], "return_expressions": ["(loc(left)==loc(right)&&len(left)==len(right))||keccak(left)==keccak(right)"], "info": ["TypedMemView", "untypedEqual", "left", "right"], "vars": {"left": "bytes29", "right": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["right--variables", "left--variables"], "modifier": [], "return_expressions": ["!untypedEqual(left,right)"], "info": ["TypedMemView", "untypedNotEqual", "left", "right"], "vars": {"left": "bytes29", "right": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["left--variables", "right--variables"], "modifier": [], "return_expressions": ["left==right||(typeOf(left)==typeOf(right)&&keccak(left)==keccak(right))"], "info": ["TypedMemView", "equal", "left", "right"], "vars": {"left": "bytes29", "right": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["right--variables", "left--variables"], "modifier": [], "return_expressions": ["!equal(left,right)"], "info": ["TypedMemView", "notEqual", "left", "right"], "vars": {"left": "bytes29", "right": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memViews--variables", "ptr--variables"], "modifier": [], "return_expressions": ["keccak(unsafeJoin(memViews,ptr))"], "info": ["TypedMemView", "joinKeccak", "memViews"], "vars": {"memViews": "bytes29[]", "ptr": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memViews--variables", "ptr--variables"], "modifier": [], "return_expressions": ["sha2(unsafeJoin(memViews,ptr))"], "info": ["TypedMemView", "joinSha2", "memViews"], "vars": {"memViews": "bytes29[]", "ptr": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}]