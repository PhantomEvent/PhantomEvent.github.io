[{"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "add", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["c=a+b", "c>=a"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["sub(a,b,SafeMath:subtractionoverflow)"], "info": ["SafeMath", "sub", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "sub", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b<=a", "c=a-b"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0"], "info": ["SafeMath", "mul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["a==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "mul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["not(a==0)", "c=a*b", "c/a==b"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["div(a,b,SafeMath:divisionbyzero)"], "info": ["SafeMath", "div", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "div", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b>0", "c=a/b"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["mod(a,b,SafeMath:modulobyzero)"], "info": ["SafeMath", "mod", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a%b"], "info": ["SafeMath", "mod", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b!=0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["size--variables"], "modifier": [], "return_expressions": ["size>0"], "info": ["Address", "isContract", "account"], "vars": {"size": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["returnbytes--variables", "result--variables"], "modifier": [], "return_expressions": ["(result,returnbytes)"], "info": ["LibCallBridgeReceiver", "callReceiver", "isFungible", "gasLimitForBridgeReceiver", "tokenAddress", "_int", "data", "toAddr"], "vars": {"_int": "uint256", "callbytes": "bytes", "data": "bytes", "gasLimitForBridgeReceiver": "uint256", "isFungible": "bool", "result": "bool", "returnbytes": "bytes", "toAddr": "address", "tokenAddress": "address"}, "loop_info": [], "related_expression": ["isFungible", "callbytes=abi.encodeWithSignature(onTokenBridgeReceived(address,uint256,bytes),tokenAddress,_int,data)", "gasLimitForBridgeReceiver>0", "(result,returnbytes)=toAddr.call.gas(gasLimitForBridgeReceiver)(callbytes)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["returnbytes--variables", "result--variables"], "modifier": [], "return_expressions": ["(result,returnbytes)"], "info": ["LibCallBridgeReceiver", "callReceiver", "isFungible", "gasLimitForBridgeReceiver", "tokenAddress", "_int", "data", "toAddr"], "vars": {"_int": "uint256", "callbytes": "bytes", "data": "bytes", "gasLimitForBridgeReceiver": "uint256", "isFungible": "bool", "result": "bool", "returnbytes": "bytes", "toAddr": "address", "tokenAddress": "address"}, "loop_info": [], "related_expression": ["isFungible", "callbytes=abi.encodeWithSignature(onTokenBridgeReceived(address,uint256,bytes),tokenAddress,_int,data)", "not(gasLimitForBridgeReceiver>0)", "(result,returnbytes)=toAddr.call(callbytes)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["returnbytes--variables", "result--variables"], "modifier": [], "return_expressions": ["(result,returnbytes)"], "info": ["LibCallBridgeReceiver", "callReceiver", "isFungible", "gasLimitForBridgeReceiver", "tokenAddress", "_int", "data", "toAddr"], "vars": {"_int": "uint256", "callbytes": "bytes", "data": "bytes", "gasLimitForBridgeReceiver": "uint256", "isFungible": "bool", "result": "bool", "returnbytes": "bytes", "toAddr": "address", "tokenAddress": "address"}, "loop_info": [], "related_expression": ["not(isFungible)", "callbytes=abi.encodeWithSignature(onNFTBridgeReceived(address,uint256,bytes),tokenAddress,_int,data)", "gasLimitForBridgeReceiver>0", "(result,returnbytes)=toAddr.call.gas(gasLimitForBridgeReceiver)(callbytes)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["returnbytes--variables", "result--variables"], "modifier": [], "return_expressions": ["(result,returnbytes)"], "info": ["LibCallBridgeReceiver", "callReceiver", "isFungible", "gasLimitForBridgeReceiver", "tokenAddress", "_int", "data", "toAddr"], "vars": {"_int": "uint256", "callbytes": "bytes", "data": "bytes", "gasLimitForBridgeReceiver": "uint256", "isFungible": "bool", "result": "bool", "returnbytes": "bytes", "toAddr": "address", "tokenAddress": "address"}, "loop_info": [], "related_expression": ["not(isFungible)", "callbytes=abi.encodeWithSignature(onNFTBridgeReceived(address,uint256,bytes),tokenAddress,_int,data)", "not(gasLimitForBridgeReceiver>0)", "(result,returnbytes)=toAddr.call(callbytes)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["EthVault20230511A"], "info": ["EthVaultImpl", "getVersion"], "vars": {}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["_chain--variables"], "modifier": [], "return_expressions": ["sha256(bytes)(abi.encodePacked(address(this),_chain))"], "info": ["EthVaultImpl", "getChainId", "_chain"], "vars": {"_chain": "string", "this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": ["validatorCount--variables"], "modifier": [], "return_expressions": ["validatorCount"], "info": ["EthVaultImpl", "_validate", "whash", "v", "r", "s"], "vars": {"i": "uint256", "isOwner": "mapping(address => bool)", "j": "uint256", "owners": "address[]", "r": "bytes32[]", "s": "bytes32[]", "v": "uint8[]", "va": "address", "vaList": "address[]", "validatorCount": "uint256", "whash": "bytes32"}, "loop_info": [2, 8, 8, 8], "related_expression": ["validatorCount=0", "i=0", "vaList[validatorCount]=va", "validatorCount+=1", "i++", "i<v.length", "va=ecrecover(bytes32,uint8,bytes32,bytes32)(whash,v[i],r[i],s[i])", "isOwner[va]", "not(j<validatorCount)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_+=", "Expression", "Condition", "AssignmentOperation_=", "Condition", "Condition"], "isloop": true}, {"visibility": "private", "return_vars": ["validatorCount--variables"], "modifier": [], "return_expressions": ["validatorCount"], "info": ["EthVaultImpl", "_validate", "whash", "v", "r", "s"], "vars": {"i": "uint256", "isOwner": "mapping(address => bool)", "j": "uint256", "owners": "address[]", "r": "bytes32[]", "s": "bytes32[]", "v": "uint8[]", "va": "address", "vaList": "address[]", "validatorCount": "uint256", "whash": "bytes32"}, "loop_info": [2, 2], "related_expression": ["validatorCount=0", "i=0", "not(i<v.length)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "Condition"], "isloop": true}, {"visibility": "private", "return_vars": ["size--variables"], "modifier": [], "return_expressions": ["(size>0)"], "info": ["EthVaultImpl", "isContract", "_addr"], "vars": {"size": "uint32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}]