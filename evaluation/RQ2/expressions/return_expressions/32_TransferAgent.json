[{"visibility": "internal", "return_vars": ["transferId--variables"], "modifier": [], "return_expressions": ["transferId"], "info": ["BridgeTransferLib", "sendTransfer", "_receiver", "_token", "_amount", "_dstChainId", "_nonce", "_maxSlippage", "_bridgeSendType", "_bridgeAddr"], "vars": {"_amount": "uint256", "_bridgeAddr": "address", "_bridgeSendType": "BridgeTransferLib.BridgeSendType", "_dstChainId": "uint64", "_maxSlippage": "uint32", "_nonce": "uint64", "_receiver": "address", "_token": "address", "block.chainid": "uint256", "this": "address", "transferId": "bytes32"}, "loop_info": [], "related_expression": ["IERC20(_token).safeIncreaseAllowance(_bridgeAddr,_amount)", "_bridgeSendType==BridgeSendType.Liquidity", "IBridge(_bridgeAddr).send(_receiver,_token,_amount,_dstChainId,_nonce,_maxSlippage)", "transferId=keccak256(bytes)(abi.encodePacked(address(this),_receiver,_token,_amount,_dstChainId,_nonce,uint64(block.chainid)))"], "related_expression_type": ["CallExpression", "Condition", "CallExpression", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["transferId--variables"], "modifier": [], "return_expressions": ["transferId"], "info": ["BridgeTransferLib", "sendTransfer", "_receiver", "_token", "_amount", "_dstChainId", "_nonce", "_maxSlippage", "_bridgeSendType", "_bridgeAddr"], "vars": {"_amount": "uint256", "_bridgeAddr": "address", "_bridgeSendType": "BridgeTransferLib.BridgeSendType", "_dstChainId": "uint64", "_maxSlippage": "uint32", "_nonce": "uint64", "_receiver": "address", "_token": "address", "block.chainid": "uint256", "this": "address", "transferId": "bytes32"}, "loop_info": [], "related_expression": ["IERC20(_token).safeIncreaseAllowance(_bridgeAddr,_amount)", "not(_bridgeSendType==BridgeSendType.Liquidity)", "_bridgeSendType==BridgeSendType.PegDeposit", "IOriginalTokenVault(_bridgeAddr).deposit(_token,_amount,_dstChainId,_receiver,_nonce)", "transferId=keccak256(bytes)(abi.encodePacked(address(this),_token,_amount,_dstChainId,_receiver,_nonce,uint64(block.chainid)))"], "related_expression_type": ["CallExpression", "Condition", "Condition", "CallExpression", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["transferId--variables"], "modifier": [], "return_expressions": ["transferId"], "info": ["BridgeTransferLib", "sendTransfer", "_receiver", "_token", "_amount", "_dstChainId", "_nonce", "_maxSlippage", "_bridgeSendType", "_bridgeAddr"], "vars": {"_amount": "uint256", "_bridgeAddr": "address", "_bridgeSendType": "BridgeTransferLib.BridgeSendType", "_dstChainId": "uint64", "_maxSlippage": "uint32", "_nonce": "uint64", "_receiver": "address", "_token": "address", "block.chainid": "uint256", "this": "address", "transferId": "bytes32"}, "loop_info": [], "related_expression": ["IERC20(_token).safeIncreaseAllowance(_bridgeAddr,_amount)", "not(_bridgeSendType==BridgeSendType.Liquidity)", "not(_bridgeSendType==BridgeSendType.PegDeposit)", "_bridgeSendType==BridgeSendType.PegBurn", "IPeggedTokenBridge(_bridgeAddr).burn(_token,_amount,_receiver,_nonce)", "transferId=keccak256(bytes)(abi.encodePacked(address(this),_token,_amount,_receiver,_nonce,uint64(block.chainid)))", "IERC20(_token).safeApprove(_bridgeAddr,0)"], "related_expression_type": ["CallExpression", "Condition", "Condition", "Condition", "CallExpression", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "internal", "return_vars": ["transferId--variables"], "modifier": [], "return_expressions": ["transferId"], "info": ["BridgeTransferLib", "sendTransfer", "_receiver", "_token", "_amount", "_dstChainId", "_nonce", "_maxSlippage", "_bridgeSendType", "_bridgeAddr"], "vars": {"_amount": "uint256", "_bridgeAddr": "address", "_bridgeSendType": "BridgeTransferLib.BridgeSendType", "_dstChainId": "uint64", "_maxSlippage": "uint32", "_nonce": "uint64", "_receiver": "address", "_token": "address", "block.chainid": "uint256", "this": "address", "transferId": "bytes32"}, "loop_info": [], "related_expression": ["IERC20(_token).safeIncreaseAllowance(_bridgeAddr,_amount)", "not(_bridgeSendType==BridgeSendType.Liquidity)", "not(_bridgeSendType==BridgeSendType.PegDeposit)", "not(_bridgeSendType==BridgeSendType.PegBurn)", "_bridgeSendType==BridgeSendType.PegV2Deposit", "transferId=IOriginalTokenVaultV2(_bridgeAddr).deposit(_token,_amount,_dstChainId,_receiver,_nonce)"], "related_expression_type": ["CallExpression", "Condition", "Condition", "Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["transferId--variables"], "modifier": [], "return_expressions": ["transferId"], "info": ["BridgeTransferLib", "sendTransfer", "_receiver", "_token", "_amount", "_dstChainId", "_nonce", "_maxSlippage", "_bridgeSendType", "_bridgeAddr"], "vars": {"_amount": "uint256", "_bridgeAddr": "address", "_bridgeSendType": "BridgeTransferLib.BridgeSendType", "_dstChainId": "uint64", "_maxSlippage": "uint32", "_nonce": "uint64", "_receiver": "address", "_token": "address", "block.chainid": "uint256", "this": "address", "transferId": "bytes32"}, "loop_info": [], "related_expression": ["IERC20(_token).safeIncreaseAllowance(_bridgeAddr,_amount)", "not(_bridgeSendType==BridgeSendType.Liquidity)", "not(_bridgeSendType==BridgeSendType.PegDeposit)", "not(_bridgeSendType==BridgeSendType.PegBurn)", "not(_bridgeSendType==BridgeSendType.PegV2Deposit)", "_bridgeSendType==BridgeSendType.PegV2Burn", "transferId=IPeggedTokenBridgeV2(_bridgeAddr).burn(_token,_amount,_dstChainId,_receiver,_nonce)", "IERC20(_token).safeApprove(_bridgeAddr,0)"], "related_expression_type": ["CallExpression", "Condition", "Condition", "Condition", "Condition", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "internal", "return_vars": ["transferId--variables"], "modifier": [], "return_expressions": ["transferId"], "info": ["BridgeTransferLib", "sendTransfer", "_receiver", "_token", "_amount", "_dstChainId", "_nonce", "_maxSlippage", "_bridgeSendType", "_bridgeAddr"], "vars": {"_amount": "uint256", "_bridgeAddr": "address", "_bridgeSendType": "BridgeTransferLib.BridgeSendType", "_dstChainId": "uint64", "_maxSlippage": "uint32", "_nonce": "uint64", "_receiver": "address", "_token": "address", "block.chainid": "uint256", "this": "address", "transferId": "bytes32"}, "loop_info": [], "related_expression": ["IERC20(_token).safeIncreaseAllowance(_bridgeAddr,_amount)", "not(_bridgeSendType==BridgeSendType.Liquidity)", "not(_bridgeSendType==BridgeSendType.PegDeposit)", "not(_bridgeSendType==BridgeSendType.PegBurn)", "not(_bridgeSendType==BridgeSendType.PegV2Deposit)", "not(_bridgeSendType==BridgeSendType.PegV2Burn)", "_bridgeSendType==BridgeSendType.PegV2BurnFrom", "transferId=IPeggedTokenBridgeV2(_bridgeAddr).burnFrom(_token,_amount,_dstChainId,_receiver,_nonce)", "IERC20(_token).safeApprove(_bridgeAddr,0)"], "related_expression_type": ["CallExpression", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "internal", "return_vars": ["transferId--variables"], "modifier": [], "return_expressions": ["transferId"], "info": ["BridgeTransferLib", "sendTransfer", "_receiver", "_token", "_amount", "_dstChainId", "_nonce", "_maxSlippage", "_bridgeSendType", "_bridgeAddr"], "vars": {"_amount": "uint256", "_bridgeAddr": "address", "_bridgeSendType": "BridgeTransferLib.BridgeSendType", "_dstChainId": "uint64", "_maxSlippage": "uint32", "_nonce": "uint64", "_receiver": "address", "_token": "address", "block.chainid": "uint256", "this": "address", "transferId": "bytes32"}, "loop_info": [], "related_expression": ["IERC20(_token).safeIncreaseAllowance(_bridgeAddr,_amount)", "not(_bridgeSendType==BridgeSendType.Liquidity)", "not(_bridgeSendType==BridgeSendType.PegDeposit)", "not(_bridgeSendType==BridgeSendType.PegBurn)", "not(_bridgeSendType==BridgeSendType.PegV2Deposit)", "not(_bridgeSendType==BridgeSendType.PegV2Burn)", "not(_bridgeSendType==BridgeSendType.PegV2BurnFrom)"], "related_expression_type": ["CallExpression", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["transferId--variables"], "modifier": [], "return_expressions": ["transferId"], "info": ["BridgeTransferLib", "sendNativeTransfer", "_receiver", "_amount", "_dstChainId", "_nonce", "_maxSlippage", "_bridgeSendType", "_bridgeAddr"], "vars": {"_amount": "uint256", "_bridgeAddr": "address", "_bridgeSendType": "BridgeTransferLib.BridgeSendType", "_dstChainId": "uint64", "_maxSlippage": "uint32", "_nonce": "uint64", "_receiver": "address", "_token": "address", "block.chainid": "uint256", "msg.value": "uint256", "this": "address", "transferId": "bytes32"}, "loop_info": [], "related_expression": ["_bridgeSendType==BridgeSendType.Liquidity||_bridgeSendType==BridgeSendType.PegDeposit||_bridgeSendType==BridgeSendType.PegV2Deposit", "_token=INativeWrap(_bridgeAddr).nativeWrap()", "_bridgeSendType==BridgeSendType.Liquidity", "IBridge(_bridgeAddr).sendNative{value:msg.value}(_receiver,_amount,_dstChainId,_nonce,_maxSlippage)", "transferId=keccak256(bytes)(abi.encodePacked(address(this),_receiver,_token,_amount,_dstChainId,_nonce,uint64(block.chainid)))"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "CallExpression", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["transferId--variables"], "modifier": [], "return_expressions": ["transferId"], "info": ["BridgeTransferLib", "sendNativeTransfer", "_receiver", "_amount", "_dstChainId", "_nonce", "_maxSlippage", "_bridgeSendType", "_bridgeAddr"], "vars": {"_amount": "uint256", "_bridgeAddr": "address", "_bridgeSendType": "BridgeTransferLib.BridgeSendType", "_dstChainId": "uint64", "_maxSlippage": "uint32", "_nonce": "uint64", "_receiver": "address", "_token": "address", "block.chainid": "uint256", "msg.value": "uint256", "this": "address", "transferId": "bytes32"}, "loop_info": [], "related_expression": ["_bridgeSendType==BridgeSendType.Liquidity||_bridgeSendType==BridgeSendType.PegDeposit||_bridgeSendType==BridgeSendType.PegV2Deposit", "_token=INativeWrap(_bridgeAddr).nativeWrap()", "not(_bridgeSendType==BridgeSendType.Liquidity)", "_bridgeSendType==BridgeSendType.PegDeposit", "IOriginalTokenVault(_bridgeAddr).depositNative{value:msg.value}(_amount,_dstChainId,_receiver,_nonce)", "transferId=keccak256(bytes)(abi.encodePacked(address(this),_token,_amount,_dstChainId,_receiver,_nonce,uint64(block.chainid)))"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "Condition", "CallExpression", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["transferId--variables"], "modifier": [], "return_expressions": ["transferId"], "info": ["BridgeTransferLib", "sendNativeTransfer", "_receiver", "_amount", "_dstChainId", "_nonce", "_maxSlippage", "_bridgeSendType", "_bridgeAddr"], "vars": {"_amount": "uint256", "_bridgeAddr": "address", "_bridgeSendType": "BridgeTransferLib.BridgeSendType", "_dstChainId": "uint64", "_maxSlippage": "uint32", "_nonce": "uint64", "_receiver": "address", "_token": "address", "block.chainid": "uint256", "msg.value": "uint256", "this": "address", "transferId": "bytes32"}, "loop_info": [], "related_expression": ["_bridgeSendType==BridgeSendType.Liquidity||_bridgeSendType==BridgeSendType.PegDeposit||_bridgeSendType==BridgeSendType.PegV2Deposit", "_token=INativeWrap(_bridgeAddr).nativeWrap()", "not(_bridgeSendType==BridgeSendType.Liquidity)", "not(_bridgeSendType==BridgeSendType.PegDeposit)", "transferId=IOriginalTokenVaultV2(_bridgeAddr).depositNative{value:msg.value}(_amount,_dstChainId,_receiver,_nonce)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["_powers--variables", "_bridgeAddr--variables", "_signers--variables", "_sigs--variables", "_request--variables"], "modifier": [], "return_expressions": ["receiveLiquidityRelay(_request,_sigs,_signers,_powers,_bridgeAddr)"], "info": ["BridgeTransferLib", "receiveTransfer", "_request", "_sigs", "_signers", "_powers", "_bridgeReceiveType", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_bridgeReceiveType": "BridgeTransferLib.BridgeReceiveType", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]"}, "loop_info": [], "related_expression": ["_bridgeReceiveType==BridgeReceiveType.LqRelay"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["_powers--variables", "_bridgeAddr--variables", "_signers--variables", "_sigs--variables", "_request--variables"], "modifier": [], "return_expressions": ["receiveLiquidityWithdraw(_request,_sigs,_signers,_powers,_bridgeAddr)"], "info": ["BridgeTransferLib", "receiveTransfer", "_request", "_sigs", "_signers", "_powers", "_bridgeReceiveType", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_bridgeReceiveType": "BridgeTransferLib.BridgeReceiveType", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]"}, "loop_info": [], "related_expression": ["not(_bridgeReceiveType==BridgeReceiveType.LqRelay)", "_bridgeReceiveType==BridgeReceiveType.LqWithdraw"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["_powers--variables", "_bridgeAddr--variables", "_signers--variables", "_sigs--variables", "_request--variables"], "modifier": [], "return_expressions": ["receivePegWithdraw(_request,_sigs,_signers,_powers,_bridgeAddr)"], "info": ["BridgeTransferLib", "receiveTransfer", "_request", "_sigs", "_signers", "_powers", "_bridgeReceiveType", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_bridgeReceiveType": "BridgeTransferLib.BridgeReceiveType", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]"}, "loop_info": [], "related_expression": ["not(_bridgeReceiveType==BridgeReceiveType.LqRelay)", "not(_bridgeReceiveType==BridgeReceiveType.LqWithdraw)", "_bridgeReceiveType==BridgeReceiveType.PegWithdraw"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["_powers--variables", "_bridgeAddr--variables", "_signers--variables", "_sigs--variables", "_request--variables"], "modifier": [], "return_expressions": ["receivePegMint(_request,_sigs,_signers,_powers,_bridgeAddr)"], "info": ["BridgeTransferLib", "receiveTransfer", "_request", "_sigs", "_signers", "_powers", "_bridgeReceiveType", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_bridgeReceiveType": "BridgeTransferLib.BridgeReceiveType", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]"}, "loop_info": [], "related_expression": ["not(_bridgeReceiveType==BridgeReceiveType.LqRelay)", "not(_bridgeReceiveType==BridgeReceiveType.LqWithdraw)", "not(_bridgeReceiveType==BridgeReceiveType.PegWithdraw)", "_bridgeReceiveType==BridgeReceiveType.PegMint"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["_powers--variables", "_bridgeAddr--variables", "_signers--variables", "_sigs--variables", "_request--variables"], "modifier": [], "return_expressions": ["receivePegV2Withdraw(_request,_sigs,_signers,_powers,_bridgeAddr)"], "info": ["BridgeTransferLib", "receiveTransfer", "_request", "_sigs", "_signers", "_powers", "_bridgeReceiveType", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_bridgeReceiveType": "BridgeTransferLib.BridgeReceiveType", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]"}, "loop_info": [], "related_expression": ["not(_bridgeReceiveType==BridgeReceiveType.LqRelay)", "not(_bridgeReceiveType==BridgeReceiveType.LqWithdraw)", "not(_bridgeReceiveType==BridgeReceiveType.PegWithdraw)", "not(_bridgeReceiveType==BridgeReceiveType.PegMint)", "_bridgeReceiveType==BridgeReceiveType.PegV2Withdraw"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["_powers--variables", "_bridgeAddr--variables", "_signers--variables", "_sigs--variables", "_request--variables"], "modifier": [], "return_expressions": ["receivePegV2Mint(_request,_sigs,_signers,_powers,_bridgeAddr)"], "info": ["BridgeTransferLib", "receiveTransfer", "_request", "_sigs", "_signers", "_powers", "_bridgeReceiveType", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_bridgeReceiveType": "BridgeTransferLib.BridgeReceiveType", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]"}, "loop_info": [], "related_expression": ["not(_bridgeReceiveType==BridgeReceiveType.LqRelay)", "not(_bridgeReceiveType==BridgeReceiveType.LqWithdraw)", "not(_bridgeReceiveType==BridgeReceiveType.PegWithdraw)", "not(_bridgeReceiveType==BridgeReceiveType.PegMint)", "not(_bridgeReceiveType==BridgeReceiveType.PegV2Withdraw)", "_bridgeReceiveType==BridgeReceiveType.PegV2Mint"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receiveLiquidityRelay", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "block.chainid": "uint256", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbBridge.Relay"}, "loop_info": [], "related_expression": ["request=PbBridge.decRelay(_request)", "recv.transferId=keccak256(bytes)(abi.encodePacked(request.sender,request.receiver,request.token,request.amount,request.srcChainId,uint64(block.chainid),request.srcTransferId))", "recv.refid=request.srcTransferId", "recv.receiver=request.receiver", "recv.token=request.token", "recv.amount=request.amount", "!IBridge(_bridgeAddr).transfers(recv.transferId)", "IBridge(_bridgeAddr).relay(_request,_sigs,_signers,_powers)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receiveLiquidityRelay", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "block.chainid": "uint256", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbBridge.Relay"}, "loop_info": [], "related_expression": ["request=PbBridge.decRelay(_request)", "recv.transferId=keccak256(bytes)(abi.encodePacked(request.sender,request.receiver,request.token,request.amount,request.srcChainId,uint64(block.chainid),request.srcTransferId))", "recv.refid=request.srcTransferId", "recv.receiver=request.receiver", "recv.token=request.token", "recv.amount=request.amount", "not(!IBridge(_bridgeAddr).transfers(recv.transferId))"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receiveLiquidityWithdraw", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbPool.WithdrawMsg"}, "loop_info": [], "related_expression": ["request=PbPool.decWithdrawMsg(_request)", "recv.transferId=keccak256(bytes)(abi.encodePacked(request.chainid,request.seqnum,request.receiver,request.token,request.amount))", "recv.refid=request.refid", "recv.receiver=request.receiver", "INativeWrap(_bridgeAddr).nativeWrap()==request.token", "recv.token=address(0)", "recv.amount=request.amount", "!IBridge(_bridgeAddr).withdraws(recv.transferId)", "IBridge(_bridgeAddr).withdraw(_request,_sigs,_signers,_powers)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receiveLiquidityWithdraw", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbPool.WithdrawMsg"}, "loop_info": [], "related_expression": ["request=PbPool.decWithdrawMsg(_request)", "recv.transferId=keccak256(bytes)(abi.encodePacked(request.chainid,request.seqnum,request.receiver,request.token,request.amount))", "recv.refid=request.refid", "recv.receiver=request.receiver", "INativeWrap(_bridgeAddr).nativeWrap()==request.token", "recv.token=address(0)", "recv.amount=request.amount", "not(!IBridge(_bridgeAddr).withdraws(recv.transferId))"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receiveLiquidityWithdraw", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbPool.WithdrawMsg"}, "loop_info": [], "related_expression": ["request=PbPool.decWithdrawMsg(_request)", "recv.transferId=keccak256(bytes)(abi.encodePacked(request.chainid,request.seqnum,request.receiver,request.token,request.amount))", "recv.refid=request.refid", "recv.receiver=request.receiver", "not(INativeWrap(_bridgeAddr).nativeWrap()==request.token)", "recv.token=request.token", "recv.amount=request.amount", "!IBridge(_bridgeAddr).withdraws(recv.transferId)", "IBridge(_bridgeAddr).withdraw(_request,_sigs,_signers,_powers)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receiveLiquidityWithdraw", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbPool.WithdrawMsg"}, "loop_info": [], "related_expression": ["request=PbPool.decWithdrawMsg(_request)", "recv.transferId=keccak256(bytes)(abi.encodePacked(request.chainid,request.seqnum,request.receiver,request.token,request.amount))", "recv.refid=request.refid", "recv.receiver=request.receiver", "not(INativeWrap(_bridgeAddr).nativeWrap()==request.token)", "recv.token=request.token", "recv.amount=request.amount", "not(!IBridge(_bridgeAddr).withdraws(recv.transferId))"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receivePegWithdraw", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbPegged.Withdraw"}, "loop_info": [], "related_expression": ["request=PbPegged.decWithdraw(_request)", "recv.transferId=keccak256(bytes)(abi.encodePacked(request.receiver,request.token,request.amount,request.burnAccount,request.refChainId,request.refId))", "recv.refid=request.refId", "recv.receiver=request.receiver", "INativeWrap(_bridgeAddr).nativeWrap()==request.token", "recv.token=address(0)", "recv.amount=request.amount", "!IOriginalTokenVault(_bridgeAddr).records(recv.transferId)", "IOriginalTokenVault(_bridgeAddr).withdraw(_request,_sigs,_signers,_powers)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receivePegWithdraw", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbPegged.Withdraw"}, "loop_info": [], "related_expression": ["request=PbPegged.decWithdraw(_request)", "recv.transferId=keccak256(bytes)(abi.encodePacked(request.receiver,request.token,request.amount,request.burnAccount,request.refChainId,request.refId))", "recv.refid=request.refId", "recv.receiver=request.receiver", "INativeWrap(_bridgeAddr).nativeWrap()==request.token", "recv.token=address(0)", "recv.amount=request.amount", "not(!IOriginalTokenVault(_bridgeAddr).records(recv.transferId))"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receivePegWithdraw", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbPegged.Withdraw"}, "loop_info": [], "related_expression": ["request=PbPegged.decWithdraw(_request)", "recv.transferId=keccak256(bytes)(abi.encodePacked(request.receiver,request.token,request.amount,request.burnAccount,request.refChainId,request.refId))", "recv.refid=request.refId", "recv.receiver=request.receiver", "not(INativeWrap(_bridgeAddr).nativeWrap()==request.token)", "recv.token=request.token", "recv.amount=request.amount", "!IOriginalTokenVault(_bridgeAddr).records(recv.transferId)", "IOriginalTokenVault(_bridgeAddr).withdraw(_request,_sigs,_signers,_powers)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receivePegWithdraw", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbPegged.Withdraw"}, "loop_info": [], "related_expression": ["request=PbPegged.decWithdraw(_request)", "recv.transferId=keccak256(bytes)(abi.encodePacked(request.receiver,request.token,request.amount,request.burnAccount,request.refChainId,request.refId))", "recv.refid=request.refId", "recv.receiver=request.receiver", "not(INativeWrap(_bridgeAddr).nativeWrap()==request.token)", "recv.token=request.token", "recv.amount=request.amount", "not(!IOriginalTokenVault(_bridgeAddr).records(recv.transferId))"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receivePegMint", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbPegged.Mint"}, "loop_info": [], "related_expression": ["request=PbPegged.decMint(_request)", "recv.transferId=keccak256(bytes)(abi.encodePacked(request.account,request.token,request.amount,request.depositor,request.refChainId,request.refId))", "recv.refid=request.refId", "recv.receiver=request.account", "recv.token=request.token", "recv.amount=request.amount", "!IPeggedTokenBridge(_bridgeAddr).records(recv.transferId)", "IPeggedTokenBridge(_bridgeAddr).mint(_request,_sigs,_signers,_powers)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "CallExpression"]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receivePegMint", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbPegged.Mint"}, "loop_info": [], "related_expression": ["request=PbPegged.decMint(_request)", "recv.transferId=keccak256(bytes)(abi.encodePacked(request.account,request.token,request.amount,request.depositor,request.refChainId,request.refId))", "recv.refid=request.refId", "recv.receiver=request.account", "recv.token=request.token", "recv.amount=request.amount", "not(!IPeggedTokenBridge(_bridgeAddr).records(recv.transferId))"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receivePegV2Withdraw", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbPegged.Withdraw"}, "loop_info": [], "related_expression": ["request=PbPegged.decWithdraw(_request)", "IOriginalTokenVaultV2(_bridgeAddr).records(request.refId)", "recv.transferId=keccak256(bytes)(abi.encodePacked(request.receiver,request.token,request.amount,request.burnAccount,request.refChainId,request.refId,_bridgeAddr))", "recv.refid=request.refId", "recv.receiver=request.receiver", "INativeWrap(_bridgeAddr).nativeWrap()==request.token", "recv.token=address(0)", "recv.amount=request.amount"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receivePegV2Withdraw", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbPegged.Withdraw"}, "loop_info": [], "related_expression": ["request=PbPegged.decWithdraw(_request)", "IOriginalTokenVaultV2(_bridgeAddr).records(request.refId)", "recv.transferId=keccak256(bytes)(abi.encodePacked(request.receiver,request.token,request.amount,request.burnAccount,request.refChainId,request.refId,_bridgeAddr))", "recv.refid=request.refId", "recv.receiver=request.receiver", "not(INativeWrap(_bridgeAddr).nativeWrap()==request.token)", "recv.token=request.token", "recv.amount=request.amount"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receivePegV2Withdraw", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbPegged.Withdraw"}, "loop_info": [], "related_expression": ["request=PbPegged.decWithdraw(_request)", "not(IOriginalTokenVaultV2(_bridgeAddr).records(request.refId))", "recv.transferId=IOriginalTokenVaultV2(_bridgeAddr).withdraw(_request,_sigs,_signers,_powers)", "recv.refid=request.refId", "recv.receiver=request.receiver", "INativeWrap(_bridgeAddr).nativeWrap()==request.token", "recv.token=address(0)", "recv.amount=request.amount"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receivePegV2Withdraw", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbPegged.Withdraw"}, "loop_info": [], "related_expression": ["request=PbPegged.decWithdraw(_request)", "not(IOriginalTokenVaultV2(_bridgeAddr).records(request.refId))", "recv.transferId=IOriginalTokenVaultV2(_bridgeAddr).withdraw(_request,_sigs,_signers,_powers)", "recv.refid=request.refId", "recv.receiver=request.receiver", "not(INativeWrap(_bridgeAddr).nativeWrap()==request.token)", "recv.token=request.token", "recv.amount=request.amount"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receivePegV2Mint", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbPegged.Mint"}, "loop_info": [], "related_expression": ["request=PbPegged.decMint(_request)", "IPeggedTokenBridgeV2(_bridgeAddr).records(request.refId)", "recv.transferId=keccak256(bytes)(abi.encodePacked(request.account,request.token,request.amount,request.depositor,request.refChainId,request.refId,_bridgeAddr))", "recv.refid=request.refId", "recv.receiver=request.account", "recv.token=request.token", "recv.amount=request.amount"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["recv--variables"], "modifier": [], "return_expressions": ["recv"], "info": ["BridgeTransferLib", "receivePegV2Mint", "_request", "_sigs", "_signers", "_powers", "_bridgeAddr"], "vars": {"_bridgeAddr": "address", "_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "recv": "BridgeTransferLib.ReceiveInfo", "request": "PbPegged.Mint"}, "loop_info": [], "related_expression": ["request=PbPegged.decMint(_request)", "not(IPeggedTokenBridgeV2(_bridgeAddr).records(request.refId))", "recv.transferId=IPeggedTokenBridgeV2(_bridgeAddr).mint(_request,_sigs,_signers,_powers)", "recv.refid=request.refId", "recv.receiver=request.account", "recv.token=request.token", "recv.amount=request.amount"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["BridgeReceiveType.LqWithdraw"], "info": ["BridgeTransferLib", "bridgeRefundType", "_bridgeSendType"], "vars": {"_bridgeSendType": "BridgeTransferLib.BridgeSendType"}, "loop_info": [], "related_expression": ["_bridgeSendType==BridgeSendType.Liquidity"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["BridgeReceiveType.PegWithdraw"], "info": ["BridgeTransferLib", "bridgeRefundType", "_bridgeSendType"], "vars": {"_bridgeSendType": "BridgeTransferLib.BridgeSendType"}, "loop_info": [], "related_expression": ["not(_bridgeSendType==BridgeSendType.Liquidity)", "_bridgeSendType==BridgeSendType.PegDeposit"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["BridgeReceiveType.PegMint"], "info": ["BridgeTransferLib", "bridgeRefundType", "_bridgeSendType"], "vars": {"_bridgeSendType": "BridgeTransferLib.BridgeSendType"}, "loop_info": [], "related_expression": ["not(_bridgeSendType==BridgeSendType.Liquidity)", "not(_bridgeSendType==BridgeSendType.PegDeposit)", "_bridgeSendType==BridgeSendType.PegBurn"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["BridgeReceiveType.PegV2Withdraw"], "info": ["BridgeTransferLib", "bridgeRefundType", "_bridgeSendType"], "vars": {"_bridgeSendType": "BridgeTransferLib.BridgeSendType"}, "loop_info": [], "related_expression": ["not(_bridgeSendType==BridgeSendType.Liquidity)", "not(_bridgeSendType==BridgeSendType.PegDeposit)", "not(_bridgeSendType==BridgeSendType.PegBurn)", "_bridgeSendType==BridgeSendType.PegV2Deposit"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["BridgeReceiveType.PegV2Mint"], "info": ["BridgeTransferLib", "bridgeRefundType", "_bridgeSendType"], "vars": {"_bridgeSendType": "BridgeTransferLib.BridgeSendType"}, "loop_info": [], "related_expression": ["not(_bridgeSendType==BridgeSendType.Liquidity)", "not(_bridgeSendType==BridgeSendType.PegDeposit)", "not(_bridgeSendType==BridgeSendType.PegBurn)", "not(_bridgeSendType==BridgeSendType.PegV2Deposit)", "_bridgeSendType==BridgeSendType.PegV2Burn||_bridgeSendType==BridgeSendType.PegV2BurnFrom"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["BridgeReceiveType.Null"], "info": ["BridgeTransferLib", "bridgeRefundType", "_bridgeSendType"], "vars": {"_bridgeSendType": "BridgeTransferLib.BridgeSendType"}, "loop_info": [], "related_expression": ["not(_bridgeSendType==BridgeSendType.Liquidity)", "not(_bridgeSendType==BridgeSendType.PegDeposit)", "not(_bridgeSendType==BridgeSendType.PegBurn)", "not(_bridgeSendType==BridgeSendType.PegV2Deposit)", "not(_bridgeSendType==BridgeSendType.PegV2Burn||_bridgeSendType==BridgeSendType.PegV2BurnFrom)"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["buf--variables"], "modifier": [], "return_expressions": ["buf.idx<buf.b.length"], "info": ["Pb", "hasMore", "buf"], "vars": {"buf": "Pb.Buffer"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["v--variables"], "modifier": [], "return_expressions": ["v"], "info": ["Pb", "decVarint", "buf"], "vars": {"b": "uint256", "bb": "bytes", "buf": "Pb.Buffer", "i": "uint256", "tmp": "bytes10", "v": "uint256"}, "loop_info": [5], "related_expression": ["bb=buf.b", "v=buf.idx", "tmp=mload(uint256)(bb+32+v)", "v=0", "i=0", "i<10", "b=byte(uint256,uint256)(i,tmp)", "v|=(b&0x7F)<<(i*7)", "b&0x80==0", "i++", "b=byte(uint256,uint256)(i,tmp)", "v|=(b&0x7F)<<(i*7)", "b&0x80==0", "buf.idx+=i+1"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_|=", "Condition", "Expression", "AssignmentOperation_=", "AssignmentOperation_|=", "Condition", "AssignmentOperation_+="], "isloop": true}, {"visibility": "internal", "return_vars": ["v--variables"], "modifier": [], "return_expressions": ["v"], "info": ["Pb", "decVarint", "buf"], "vars": {"b": "uint256", "bb": "bytes", "buf": "Pb.Buffer", "i": "uint256", "tmp": "bytes10", "v": "uint256"}, "loop_info": [5], "related_expression": ["bb=buf.b", "v=buf.idx", "tmp=mload(uint256)(bb+32+v)", "v=0", "i=0", "i<10", "b=byte(uint256,uint256)(i,tmp)", "v|=(b&0x7F)<<(i*7)", "i<10", "b=byte(uint256,uint256)(i,tmp)", "v|=(b&0x7F)<<(i*7)", "b&0x80==0", "i++", "buf.idx+=i+1"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_|=", "Condition", "AssignmentOperation_=", "AssignmentOperation_|=", "Condition", "Expression", "AssignmentOperation_+="], "isloop": true}, {"visibility": "internal", "return_vars": ["v--variables"], "modifier": [], "return_expressions": ["v"], "info": ["Pb", "decVarint", "buf"], "vars": {"b": "uint256", "bb": "bytes", "buf": "Pb.Buffer", "i": "uint256", "tmp": "bytes10", "v": "uint256"}, "loop_info": [5], "related_expression": ["bb=buf.b", "v=buf.idx", "tmp=mload(uint256)(bb+32+v)", "v=0", "i=0", "i<10", "b=byte(uint256,uint256)(i,tmp)", "v|=(b&0x7F)<<(i*7)", "b&0x80==0", "buf.idx+=i+1"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_|=", "Condition", "AssignmentOperation_+="], "isloop": true}, {"visibility": "internal", "return_vars": ["t--variables"], "modifier": [], "return_expressions": ["t"], "info": ["Pb", "decPacked", "buf"], "vars": {"buf": "Pb.Buffer", "end": "uint256", "i": "uint256", "j": "uint256", "len": "uint256", "t": "uint256[]", "tmp": "uint256[]"}, "loop_info": [5, 7, 10, 10], "related_expression": ["len=decVarint(buf)", "end=buf.idx+len", "end<=buf.b.length", "tmp=newuint256[](len)", "i=0", "tmp[i]=decVarint(buf)", "i++", "buf.idx<end", "t=newuint256[](i)", "j=0", "not(j<i)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"], "isloop": true}, {"visibility": "internal", "return_vars": ["t--variables"], "modifier": [], "return_expressions": ["t"], "info": ["Pb", "decPacked", "buf"], "vars": {"buf": "Pb.Buffer", "end": "uint256", "i": "uint256", "j": "uint256", "len": "uint256", "t": "uint256[]", "tmp": "uint256[]"}, "loop_info": [5, 5, 8, 10], "related_expression": ["len=decVarint(buf)", "end=buf.idx+len", "end<=buf.b.length", "tmp=newuint256[](len)", "i=0", "not(buf.idx<end)", "t=newuint256[](i)", "j=0", "j<i", "t[j]=tmp[j]", "j++"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Expression"], "isloop": true}, {"visibility": "internal", "return_vars": ["t--variables"], "modifier": [], "return_expressions": ["t"], "info": ["Pb", "decPacked", "buf"], "vars": {"buf": "Pb.Buffer", "end": "uint256", "i": "uint256", "j": "uint256", "len": "uint256", "t": "uint256[]", "tmp": "uint256[]"}, "loop_info": [5, 5, 8, 8], "related_expression": ["len=decVarint(buf)", "end=buf.idx+len", "end<=buf.b.length", "tmp=newuint256[](len)", "i=0", "not(buf.idx<end)", "t=newuint256[](i)", "j=0", "not(j<i)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"], "isloop": true}, {"visibility": "internal", "return_vars": ["x--variables"], "modifier": [], "return_expressions": ["x!=0"], "info": ["Pb", "_bool", "x"], "vars": {"x": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["TransferAgent", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["transferId--variables"], "modifier": ["nonReentrant"], "return_expressions": ["transferId"], "info": ["TransferAgent", "transfer", "_receiver", "_token", "_amount", "_dstChainId", "_nonce", "_maxSlippage", "_bridgeSendType", "_extensions"], "vars": {"_amount": "uint256", "_bridgeAddr": "address", "_bridgeSendType": "BridgeTransferLib.BridgeSendType", "_dstChainId": "uint64", "_extensions": "TransferAgent.Extension[]", "_maxSlippage": "uint32", "_nonce": "uint64", "_receiver": "bytes", "_token": "address", "bridges": "mapping(BridgeTransferLib.BridgeSendType => address)", "msg.sender": "address", "this": "address", "transferId": "bytes32"}, "loop_info": [], "related_expression": ["_bridgeAddr=bridges[_bridgeSendType]", "_bridgeAddr!=address(0)", "IERC20(_token).safeTransferFrom(msg.sender,address(this),_amount)", "transferId=BridgeTransferLib.sendTransfer(address(0),_token,_amount,_dstChainId,_nonce,_maxSlippage,_bridgeSendType,_bridgeAddr)", "Supplement(_bridgeSendType,transferId,msg.sender,_receiver,_extensions)"], "related_expression_type": ["AssignmentOperation_=", "Condition", "CallExpression", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "external", "return_vars": ["transferId--variables"], "modifier": ["nonReentrant"], "return_expressions": ["transferId"], "info": ["TransferAgent", "transferNative", "_receiver", "_amount", "_dstChainId", "_nonce", "_maxSlippage", "_bridgeSendType", "_extensions"], "vars": {"_amount": "uint256", "_bridgeAddr": "address", "_bridgeSendType": "BridgeTransferLib.BridgeSendType", "_dstChainId": "uint64", "_extensions": "TransferAgent.Extension[]", "_maxSlippage": "uint32", "_nonce": "uint64", "_receiver": "bytes", "bridges": "mapping(BridgeTransferLib.BridgeSendType => address)", "msg.sender": "address", "msg.value": "uint256", "transferId": "bytes32"}, "loop_info": [], "related_expression": ["_bridgeAddr=bridges[_bridgeSendType]", "_bridgeAddr!=address(0)", "msg.value==_amount", "transferId=BridgeTransferLib.sendNativeTransfer(address(0),_amount,_dstChainId,_nonce,_maxSlippage,_bridgeSendType,_bridgeAddr)", "Supplement(_bridgeSendType,transferId,msg.sender,_receiver,_extensions)"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["Ownable", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["account--variables"], "modifier": [], "return_expressions": ["account.code.length>0"], "info": ["Address", "isContract", "account"], "vars": {"TMP_409": "bytes", "account": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCall(target,data,Address:low-levelcallfailed)"], "info": ["Address", "functionCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,0,errorMessage)"], "info": ["Address", "functionCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["value--variables", "data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,value,Address:low-levelcallwithvaluefailed)"], "info": ["Address", "functionCallWithValue", "target", "data", "value"], "vars": {"data": "bytes", "target": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["errorMessage--variables", "returndata--variables", "success--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionCallWithValue", "target", "data", "value", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address", "this": "address", "value": "uint256"}, "loop_info": [], "related_expression": ["address(this).balance>=value", "isContract(target)", "(success,returndata)=target.call{value:value}(data)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionStaticCall(target,data,Address:low-levelstaticcallfailed)"], "info": ["Address", "functionStaticCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["errorMessage--variables", "success--variables", "returndata--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionStaticCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.staticcall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionDelegateCall(target,data,Address:low-leveldelegatecallfailed)"], "info": ["Address", "functionDelegateCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["success--variables", "returndata--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionDelegateCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.delegatecall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["returndata--variables"], "modifier": [], "return_expressions": ["returndata"], "info": ["Address", "verifyCallResult", "success", "returndata", "errorMessage"], "vars": {"errorMessage": "string", "returndata": "bytes", "returndata_size_verifyCallResult_asm_0": "uint256", "success": "bool"}, "loop_info": [], "related_expression": ["success"], "related_expression_type": ["Condition"]}]