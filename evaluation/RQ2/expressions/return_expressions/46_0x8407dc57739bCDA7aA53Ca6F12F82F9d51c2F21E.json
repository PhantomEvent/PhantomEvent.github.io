[{"visibility": "internal", "return_vars": ["_signature--variables", "_hash--variables"], "modifier": [], "return_expressions": ["recover(_hash,_signature,0)"], "info": ["ECVerify", "recover", "_hash", "_signature"], "vars": {"_hash": "bytes32", "_signature": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_hash--variables", "_s--variables", "_v--variables", "_r--variables"], "modifier": [], "return_expressions": ["ecrecover(bytes32,uint8,bytes32,bytes32)(_hash,_v,_r,_s)"], "info": ["ECVerify", "recover", "_hash", "_signature", "_index"], "vars": {"_hash": "bytes32", "_index": "uint256", "_mode": "ECVerify.SignatureMode", "_r": "bytes32", "_s": "bytes32", "_signature": "bytes", "_v": "uint8"}, "loop_info": [], "related_expression": ["_signature.length>=_index+66", "_v<27", "_v+=27", "_v==27||_v==28", "_mode==SignatureMode.GETH", "_hash=keccak256(bytes)(abi.encodePacked(\u0019EthereumSignedMessage:\n32,_hash))"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_+=", "Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["_hash--variables", "_s--variables", "_v--variables", "_r--variables"], "modifier": [], "return_expressions": ["ecrecover(bytes32,uint8,bytes32,bytes32)(_hash,_v,_r,_s)"], "info": ["ECVerify", "recover", "_hash", "_signature", "_index"], "vars": {"_hash": "bytes32", "_index": "uint256", "_mode": "ECVerify.SignatureMode", "_r": "bytes32", "_s": "bytes32", "_signature": "bytes", "_v": "uint8"}, "loop_info": [], "related_expression": ["_signature.length>=_index+66", "_v<27", "_v+=27", "_v==27||_v==28", "not(_mode==SignatureMode.GETH)", "_mode==SignatureMode.TREZOR", "_hash=keccak256(bytes)(abi.encodePacked(\u0019EthereumSignedMessage:\n,_hash))"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_+=", "Condition", "Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["_hash--variables", "_s--variables", "_v--variables", "_r--variables"], "modifier": [], "return_expressions": ["ecrecover(bytes32,uint8,bytes32,bytes32)(_hash,_v,_r,_s)"], "info": ["ECVerify", "recover", "_hash", "_signature", "_index"], "vars": {"_hash": "bytes32", "_index": "uint256", "_mode": "ECVerify.SignatureMode", "_r": "bytes32", "_s": "bytes32", "_signature": "bytes", "_v": "uint8"}, "loop_info": [], "related_expression": ["_signature.length>=_index+66", "_v<27", "_v+=27", "_v==27||_v==28", "not(_mode==SignatureMode.GETH)", "not(_mode==SignatureMode.TREZOR)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_+=", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["_hash--variables", "_s--variables", "_v--variables", "_r--variables"], "modifier": [], "return_expressions": ["ecrecover(bytes32,uint8,bytes32,bytes32)(_hash,_v,_r,_s)"], "info": ["ECVerify", "recover", "_hash", "_signature", "_index"], "vars": {"_hash": "bytes32", "_index": "uint256", "_mode": "ECVerify.SignatureMode", "_r": "bytes32", "_s": "bytes32", "_signature": "bytes", "_v": "uint8"}, "loop_info": [], "related_expression": ["_signature.length>=_index+66", "not(_v<27)", "_v==27||_v==28", "_mode==SignatureMode.GETH", "_hash=keccak256(bytes)(abi.encodePacked(\u0019EthereumSignedMessage:\n32,_hash))"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["_hash--variables", "_s--variables", "_v--variables", "_r--variables"], "modifier": [], "return_expressions": ["ecrecover(bytes32,uint8,bytes32,bytes32)(_hash,_v,_r,_s)"], "info": ["ECVerify", "recover", "_hash", "_signature", "_index"], "vars": {"_hash": "bytes32", "_index": "uint256", "_mode": "ECVerify.SignatureMode", "_r": "bytes32", "_s": "bytes32", "_signature": "bytes", "_v": "uint8"}, "loop_info": [], "related_expression": ["_signature.length>=_index+66", "not(_v<27)", "_v==27||_v==28", "not(_mode==SignatureMode.GETH)", "_mode==SignatureMode.TREZOR", "_hash=keccak256(bytes)(abi.encodePacked(\u0019EthereumSignedMessage:\n,_hash))"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["_hash--variables", "_s--variables", "_v--variables", "_r--variables"], "modifier": [], "return_expressions": ["ecrecover(bytes32,uint8,bytes32,bytes32)(_hash,_v,_r,_s)"], "info": ["ECVerify", "recover", "_hash", "_signature", "_index"], "vars": {"_hash": "bytes32", "_index": "uint256", "_mode": "ECVerify.SignatureMode", "_r": "bytes32", "_s": "bytes32", "_signature": "bytes", "_v": "uint8"}, "loop_info": [], "related_expression": ["_signature.length>=_index+66", "not(_v<27)", "_v==27||_v==28", "not(_mode==SignatureMode.GETH)", "not(_mode==SignatureMode.TREZOR)"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["_signature--variables", "_signer--variables", "_hash--variables"], "modifier": [], "return_expressions": ["_signer==recover(_hash,_signature)"], "info": ["ECVerify", "ecverify", "_hash", "_signature", "_signer"], "vars": {"_hash": "bytes32", "_signature": "bytes", "_signer": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["a-b"], "info": ["SafeMath", "sub", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b<=a"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0"], "info": ["SafeMath", "mul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["a==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["a/b"], "info": ["SafeMath", "div", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b>0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a%b"], "info": ["SafeMath", "mod", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b>0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["add(div(a,b),1)"], "info": ["SafeMath", "ceilingDiv", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["mod(a,b)>0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["add(div(a,b),0)"], "info": ["SafeMath", "ceilingDiv", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["not(mod(a,b)>0)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a-b"], "info": ["SafeMath", "subU64", "a", "b"], "vars": {"a": "uint64", "b": "uint64"}, "loop_info": [], "related_expression": ["b<=a"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["_address--variables"], "modifier": [], "return_expressions": ["address(uint160(_address))"], "info": ["AddressUtils", "toPayable", "_address"], "vars": {"_address": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_size--variables"], "modifier": [], "return_expressions": ["_size>0"], "info": ["AddressUtils", "isContract", "_address"], "vars": {"_size": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20", "approve", "_spender", "_value"], "vars": {"_spender": "address", "_value": "uint256", "msg.sender": "address", "allowance": "mapping(address => mapping(address => uint256))"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20", "transfer", "_to", "_value"], "vars": {"_to": "address", "_value": "uint256", "balanceOf": "mapping(address => uint256)", "msg.sender": "address"}, "loop_info": [], "related_expression": ["_to!=address(0)"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20", "transferFrom", "_from", "_to", "_value"], "vars": {"_from": "address", "_to": "address", "_value": "uint256", "allowance": "mapping(address => mapping(address => uint256))", "balanceOf": "mapping(address => uint256)", "msg.sender": "address"}, "loop_info": [], "related_expression": ["_to!=address(0)"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20Detailed", "approve", "_spender", "_value"], "vars": {"_spender": "address", "_value": "uint256", "msg.sender": "address", "allowance": "mapping(address => mapping(address => uint256))"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20Detailed", "transfer", "_to", "_value"], "vars": {"_to": "address", "_value": "uint256", "balanceOf": "mapping(address => uint256)", "msg.sender": "address"}, "loop_info": [], "related_expression": ["_to!=address(0)"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20Detailed", "transferFrom", "_from", "_to", "_value"], "vars": {"_from": "address", "_to": "address", "_value": "uint256", "allowance": "mapping(address => mapping(address => uint256))", "balanceOf": "mapping(address => uint256)", "msg.sender": "address"}, "loop_info": [], "related_expression": ["_to!=address(0)"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": ["_addr--variables"], "modifier": [], "return_expressions": ["minter[_addr]"], "info": ["HasMinters", "isMinter", "_addr"], "vars": {"_addr": "address", "minter": "mapping(address => bool)"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20Mintable", "approve", "_spender", "_value"], "vars": {"_spender": "address", "_value": "uint256", "msg.sender": "address", "allowance": "mapping(address => mapping(address => uint256))"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20Mintable", "transfer", "_to", "_value"], "vars": {"_to": "address", "_value": "uint256", "balanceOf": "mapping(address => uint256)", "msg.sender": "address"}, "loop_info": [], "related_expression": ["_to!=address(0)"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20Mintable", "transferFrom", "_from", "_to", "_value"], "vars": {"_from": "address", "_to": "address", "_value": "uint256", "allowance": "mapping(address => mapping(address => uint256))", "balanceOf": "mapping(address => uint256)", "msg.sender": "address"}, "loop_info": [], "related_expression": ["_to!=address(0)"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": ["_addr--variables"], "modifier": [], "return_expressions": ["minter[_addr]"], "info": ["ERC20Mintable", "isMinter", "_addr"], "vars": {"_addr": "address", "minter": "mapping(address => bool)"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["_value--variables", "_to--variables"], "modifier": ["onlyMinter"], "return_expressions": ["_mint(_to,_value)"], "info": ["ERC20Mintable", "mint", "_to", "_value"], "vars": {"_to": "address", "_value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20Mintable", "_mint", "_to", "_value"], "vars": {"_to": "address", "_value": "uint256", "balanceOf": "mapping(address => uint256)", "totalSupply": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["WETH", "approve", "_spender", "_value"], "vars": {"_spender": "address", "_value": "uint256", "msg.sender": "address", "allowance": "mapping(address => mapping(address => uint256))"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["WETH", "transfer", "_to", "_value"], "vars": {"_to": "address", "_value": "uint256", "balanceOf": "mapping(address => uint256)", "msg.sender": "address"}, "loop_info": [], "related_expression": ["_to!=address(0)"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["WETH", "transferFrom", "_from", "_to", "_value"], "vars": {"_from": "address", "_to": "address", "_value": "uint256", "allowance": "mapping(address => mapping(address => uint256))", "balanceOf": "mapping(address => uint256)", "msg.sender": "address"}, "loop_info": [], "related_expression": ["_to!=address(0)"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": ["_addr--variables"], "modifier": [], "return_expressions": ["validatorMap[_addr]"], "info": ["Validator", "isValidator", "_addr"], "vars": {"_addr": "address", "validatorMap": "mapping(address => bool)"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["_voteCount--variables"], "modifier": [], "return_expressions": ["_voteCount.mul(denom)>=num.mul(validatorCount)"], "info": ["Validator", "checkThreshold", "_voteCount"], "vars": {"_voteCount": "uint256", "denom": "uint256", "num": "uint256", "validatorCount": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["_addr--variables"], "modifier": [], "return_expressions": ["validatorMap[_addr]"], "info": ["MainchainValidator", "isValidator", "_addr"], "vars": {"_addr": "address", "validatorMap": "mapping(address => bool)"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["_voteCount--variables"], "modifier": [], "return_expressions": ["_voteCount.mul(denom)>=num.mul(validatorCount)"], "info": ["MainchainValidator", "checkThreshold", "_voteCount"], "vars": {"_voteCount": "uint256", "denom": "uint256", "num": "uint256", "validatorCount": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["_standard--variables", "_mapping--variables"], "modifier": [], "return_expressions": ["_mapping.mainchainToken!=address(0)&&_mapping.sidechainToken!=address(0)&&_mapping.standard==_standard"], "info": ["Registry", "isTokenMapped", "_token", "_standard", "_isMainchain"], "vars": {"_isMainchain": "bool", "_mapping": "Registry.TokenMapping", "_standard": "uint32", "_token": "address"}, "loop_info": [], "related_expression": ["_mapping=_getTokenMapping(_token,_isMainchain)"], "related_expression_type": ["AssignmentOperation_="]}, {"visibility": "public", "return_vars": ["_name--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(_name))"], "info": ["Registry", "getCode", "_name"], "vars": {"_name": "string"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": [], "modifier": ["whenNotPaused"], "return_expressions": ["depositEthFor(msg.sender)"], "info": ["MainchainGatewayManager", "depositEth"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["_amount--variables", "_token--variables"], "modifier": ["whenNotPaused"], "return_expressions": ["depositERC20For(msg.sender,_token,_amount)"], "info": ["MainchainGatewayManager", "depositERC20", "_token", "_amount"], "vars": {"_amount": "uint256", "_token": "address", "msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["_token--variables", "_tokenId--variables"], "modifier": ["whenNotPaused"], "return_expressions": ["depositERC721For(msg.sender,_token,_tokenId)"], "info": ["MainchainGatewayManager", "depositERC721", "_token", "_tokenId"], "vars": {"_token": "address", "_tokenId": "uint256", "msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["_weth--variables", "_owner--variables"], "modifier": ["whenNotPaused"], "return_expressions": ["_createDepositEntry(_owner,_weth,20,msg.value)"], "info": ["MainchainGatewayManager", "depositEthFor", "_owner"], "vars": {"_owner": "address", "_weth": "address", "msg.value": "uint256", "registry": "Registry"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["_user--variables", "_token--variables", "_amount--variables"], "modifier": ["whenNotPaused"], "return_expressions": ["_createDepositEntry(_user,_token,20,_amount)"], "info": ["MainchainGatewayManager", "depositERC20For", "_user", "_token", "_amount"], "vars": {"_amount": "uint256", "_token": "address", "_user": "address", "msg.sender": "address", "this": "address"}, "loop_info": [], "related_expression": ["IERC20(_token).transferFrom(msg.sender,address(this),_amount)"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": ["_user--variables", "_tokenId--variables", "_token--variables"], "modifier": ["whenNotPaused"], "return_expressions": ["_createDepositEntry(_user,_token,721,_tokenId)"], "info": ["MainchainGatewayManager", "depositERC721For", "_user", "_token", "_tokenId"], "vars": {"_token": "address", "_tokenId": "uint256", "_user": "address", "msg.sender": "address", "this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["_validatorCount--variables", "_validator--variables"], "modifier": [], "return_expressions": ["_validator.checkThreshold(_validatorCount)"], "info": ["MainchainGatewayManager", "verifySignatures", "_hash", "_signatures"], "vars": {"_hash": "bytes32", "_lastSigner": "address", "_signatureCount": "uint256", "_signatures": "bytes", "_signer": "address", "_validator": "Validator", "_validatorCount": "uint256", "i": "uint256", "registry": "Registry"}, "loop_info": [5, 11], "related_expression": ["_signatureCount=_signatures.length.div(66)", "_validator=Validator(registry.getContract(registry.VALIDATOR()))", "_validatorCount=0", "_lastSigner=address(0)", "i=0", "_signer=_hash.recover(_signatures,i.mul(66))", "_validator.isValidator(_signer)", "_validatorCount++", "_signer>_lastSigner", "_lastSigner=_signer", "i++", "i<_signatureCount"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "Expression", "Condition", "AssignmentOperation_=", "Expression", "Condition"], "isloop": true}, {"visibility": "public", "return_vars": ["_validatorCount--variables", "_validator--variables"], "modifier": [], "return_expressions": ["_validator.checkThreshold(_validatorCount)"], "info": ["MainchainGatewayManager", "verifySignatures", "_hash", "_signatures"], "vars": {"_hash": "bytes32", "_lastSigner": "address", "_signatureCount": "uint256", "_signatures": "bytes", "_signer": "address", "_validator": "Validator", "_validatorCount": "uint256", "i": "uint256", "registry": "Registry"}, "loop_info": [5, 5], "related_expression": ["_signatureCount=_signatures.length.div(66)", "_validator=Validator(registry.getContract(registry.VALIDATOR()))", "_validatorCount=0", "_lastSigner=address(0)", "i=0", "not(i<_signatureCount)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"], "isloop": true}, {"visibility": "internal", "return_vars": ["success--variables"], "modifier": [], "return_expressions": ["success"], "info": ["MainchainGatewayManager", "_tryERC721TransferFrom", "_token", "_from", "_to", "_tokenId"], "vars": {"_from": "address", "_to": "address", "_token": "address", "_tokenId": "uint256", "success": "bool"}, "loop_info": [], "related_expression": ["(success)=_token.call(abi.encodeWithSelector(IERC721(_token).transferFrom.selector,_from,_to,_tokenId))"], "related_expression_type": ["AssignmentOperation_="]}]