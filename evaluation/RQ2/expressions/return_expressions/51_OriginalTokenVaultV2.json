[{"visibility": "internal", "return_vars": ["buf--variables"], "modifier": [], "return_expressions": ["buf.idx<buf.b.length"], "info": ["Pb", "hasMore", "buf"], "vars": {"buf": "Pb.Buffer"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["v--variables"], "modifier": [], "return_expressions": ["v"], "info": ["Pb", "decVarint", "buf"], "vars": {"b": "uint256", "bb": "bytes", "buf": "Pb.Buffer", "i": "uint256", "tmp": "bytes10", "v": "uint256"}, "loop_info": [5], "related_expression": ["bb=buf.b", "v=buf.idx", "tmp=mload(uint256)(bb+32+v)", "v=0", "i=0", "v|=(b&0x7F)<<(i*7)", "b&0x80==0", "i++", "i<10", "b=byte(uint256,uint256)(i,tmp)", "b=byte(uint256,uint256)(i,tmp)", "v|=(b&0x7F)<<(i*7)", "b&0x80==0", "buf.idx+=i+1"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_|=", "Condition", "Expression", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_|=", "Condition", "AssignmentOperation_+="], "isloop": true}, {"visibility": "internal", "return_vars": ["v--variables"], "modifier": [], "return_expressions": ["v"], "info": ["Pb", "decVarint", "buf"], "vars": {"b": "uint256", "bb": "bytes", "buf": "Pb.Buffer", "i": "uint256", "tmp": "bytes10", "v": "uint256"}, "loop_info": [5], "related_expression": ["bb=buf.b", "v=buf.idx", "tmp=mload(uint256)(bb+32+v)", "v=0", "i=0", "i<10", "b=byte(uint256,uint256)(i,tmp)", "v|=(b&0x7F)<<(i*7)", "v|=(b&0x7F)<<(i*7)", "b&0x80==0", "i++", "i<10", "b=byte(uint256,uint256)(i,tmp)", "buf.idx+=i+1"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_|=", "AssignmentOperation_|=", "Condition", "Expression", "Condition", "AssignmentOperation_=", "AssignmentOperation_+="], "isloop": true}, {"visibility": "internal", "return_vars": ["v--variables"], "modifier": [], "return_expressions": ["v"], "info": ["Pb", "decVarint", "buf"], "vars": {"b": "uint256", "bb": "bytes", "buf": "Pb.Buffer", "i": "uint256", "tmp": "bytes10", "v": "uint256"}, "loop_info": [5], "related_expression": ["bb=buf.b", "v=buf.idx", "tmp=mload(uint256)(bb+32+v)", "v=0", "i=0", "i<10", "b=byte(uint256,uint256)(i,tmp)", "v|=(b&0x7F)<<(i*7)", "b&0x80==0", "buf.idx+=i+1"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_|=", "Condition", "AssignmentOperation_+="], "isloop": true}, {"visibility": "internal", "return_vars": ["t--variables"], "modifier": [], "return_expressions": ["t"], "info": ["Pb", "decPacked", "buf"], "vars": {"buf": "Pb.Buffer", "end": "uint256", "i": "uint256", "j": "uint256", "len": "uint256", "t": "uint256[]", "tmp": "uint256[]"}, "loop_info": [5, 7, 10, 10], "related_expression": ["len=decVarint(buf)", "end=buf.idx+len", "end<=buf.b.length", "tmp=newuint256[](len)", "i=0", "buf.idx<end", "tmp[i]=decVarint(buf)", "i++", "t=newuint256[](i)", "j=0", "not(j<i)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Expression", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"], "isloop": true}, {"visibility": "internal", "return_vars": ["t--variables"], "modifier": [], "return_expressions": ["t"], "info": ["Pb", "decPacked", "buf"], "vars": {"buf": "Pb.Buffer", "end": "uint256", "i": "uint256", "j": "uint256", "len": "uint256", "t": "uint256[]", "tmp": "uint256[]"}, "loop_info": [5, 5, 8, 10], "related_expression": ["len=decVarint(buf)", "end=buf.idx+len", "end<=buf.b.length", "tmp=newuint256[](len)", "i=0", "not(buf.idx<end)", "t=newuint256[](i)", "j=0", "j<i", "t[j]=tmp[j]", "j++"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Expression"], "isloop": true}, {"visibility": "internal", "return_vars": ["t--variables"], "modifier": [], "return_expressions": ["t"], "info": ["Pb", "decPacked", "buf"], "vars": {"buf": "Pb.Buffer", "end": "uint256", "i": "uint256", "j": "uint256", "len": "uint256", "t": "uint256[]", "tmp": "uint256[]"}, "loop_info": [5, 5, 8, 8], "related_expression": ["len=decVarint(buf)", "end=buf.idx+len", "end<=buf.b.length", "tmp=newuint256[](len)", "i=0", "not(buf.idx<end)", "t=newuint256[](i)", "j=0", "not(j<i)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"], "isloop": true}, {"visibility": "internal", "return_vars": ["x--variables"], "modifier": [], "return_expressions": ["x!=0"], "info": ["Pb", "_bool", "x"], "vars": {"x": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["transfer--variables"], "modifier": [], "return_expressions": ["transfer"], "info": ["OriginalTokenVaultV2", "_executeDelayedTransfer", "id"], "vars": {"block.timestamp": "uint256", "delayPeriod": "uint256", "delayedTransfers": "mapping(bytes32 => DelayedTransfer.delayedTransfer)", "id": "bytes32", "transfer": "DelayedTransfer.delayedTransfer"}, "loop_info": [], "related_expression": ["transfer=delayedTransfers[id]", "transfer.timestamp>0", "block.timestamp>transfer.timestamp+delayPeriod", "deletedelayedTransfers[id]", "DelayedTransferExecuted(id,transfer.receiver,transfer.token,transfer.amount)"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition", "Expression", "CallExpression"]}, {"visibility": "public", "return_vars": ["_account--variables"], "modifier": [], "return_expressions": ["governors[_account]"], "info": ["OriginalTokenVaultV2", "isGovernor", "_account"], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["OriginalTokenVaultV2", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["account--variables"], "modifier": [], "return_expressions": ["pausers[account]"], "info": ["OriginalTokenVaultV2", "isPauser", "account"], "vars": {"account": "address", "pausers": "mapping(address => bool)"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_paused"], "info": ["OriginalTokenVaultV2", "paused"], "vars": {"_paused": "bool"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["OriginalTokenVaultV2", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["OriginalTokenVaultV2", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["depId--variables"], "modifier": ["nonReentrant", "whenNotPaused"], "return_expressions": ["depId"], "info": ["OriginalTokenVaultV2", "deposit", "_token", "_amount", "_mintChainId", "_mintAccount", "_nonce"], "vars": {"_amount": "uint256", "_mintAccount": "address", "_mintChainId": "uint64", "_nonce": "uint64", "_token": "address", "depId": "bytes32", "msg.sender": "address", "this": "address"}, "loop_info": [], "related_expression": ["depId=_deposit(_token,_amount,_mintChainId,_mintAccount,_nonce)", "Deposited(depId,msg.sender,_token,_amount,_mintChainId,_mintAccount,_nonce)"], "related_expression_type": ["AssignmentOperation_=", "CallExpression"]}, {"visibility": "external", "return_vars": ["depId--variables"], "modifier": ["nonReentrant", "whenNotPaused"], "return_expressions": ["depId"], "info": ["OriginalTokenVaultV2", "depositNative", "_amount", "_mintChainId", "_mintAccount", "_nonce"], "vars": {"_amount": "uint256", "_mintAccount": "address", "_mintChainId": "uint64", "_nonce": "uint64", "depId": "bytes32", "msg.sender": "address", "msg.value": "uint256", "nativeWrap": "address"}, "loop_info": [], "related_expression": ["msg.value==_amount", "nativeWrap!=address(0)", "depId=_deposit(nativeWrap,_amount,_mintChainId,_mintAccount,_nonce)", "Deposited(depId,msg.sender,nativeWrap,_amount,_mintChainId,_mintAccount,_nonce)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "private", "return_vars": ["depId--variables"], "modifier": [], "return_expressions": ["depId"], "info": ["OriginalTokenVaultV2", "_deposit", "_token", "_amount", "_mintChainId", "_mintAccount", "_nonce"], "vars": {"_amount": "uint256", "_mintAccount": "address", "_mintChainId": "uint64", "_nonce": "uint64", "_token": "address", "block.chainid": "uint256", "depId": "bytes32", "maxDeposit": "mapping(address => uint256)", "minDeposit": "mapping(address => uint256)", "msg.sender": "address", "records": "mapping(bytes32 => bool)", "this": "address"}, "loop_info": [], "related_expression": ["_amount>minDeposit[_token]", "maxDeposit[_token]==0||_amount<=maxDeposit[_token]", "depId=keccak256(bytes)(abi.encodePacked(msg.sender,_token,_amount,_mintChainId,_mintAccount,_nonce,uint64(block.chainid),address(this)))", "records[depId]==false", "records[depId]=true"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="]}, {"visibility": "external", "return_vars": ["wdId--variables"], "modifier": ["whenNotPaused"], "return_expressions": ["wdId"], "info": ["OriginalTokenVaultV2", "withdraw", "_request", "_sigs", "_signers", "_powers"], "vars": {"_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "block.chainid": "uint256", "delayThreshold": "uint256", "delayThresholds": "mapping(address => uint256)", "domain": "bytes32", "records": "mapping(bytes32 => bool)", "request": "PbPegged.Withdraw", "sigsVerifier": "ISigsVerifier", "this": "address", "wdId": "bytes32"}, "loop_info": [], "related_expression": ["sigsVerifier.verifySigs(abi.encodePacked(domain,_request),_sigs,_signers,_powers)", "request=PbPegged.decWithdraw(_request)", "wdId=keccak256(bytes)(abi.encodePacked(request.receiver,request.token,request.amount,request.burnAccount,request.refChainId,request.refId,address(this)))", "records[wdId]==false", "records[wdId]=true", "_updateVolume(request.token,request.amount)", "delayThreshold=delayThresholds[request.token]", "delayThreshold>0&&request.amount>delayThreshold", "_addDelayedTransfer(wdId,request.receiver,request.token,request.amount)", "Withdrawn(wdId,request.receiver,request.token,request.amount,request.refChainId,request.refId,request.burnAccount)"], "related_expression_type": ["CallExpression", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression", "CallExpression"]}, {"visibility": "external", "return_vars": ["wdId--variables"], "modifier": ["whenNotPaused"], "return_expressions": ["wdId"], "info": ["OriginalTokenVaultV2", "withdraw", "_request", "_sigs", "_signers", "_powers"], "vars": {"_powers": "uint256[]", "_request": "bytes", "_signers": "address[]", "_sigs": "bytes[]", "block.chainid": "uint256", "delayThreshold": "uint256", "delayThresholds": "mapping(address => uint256)", "domain": "bytes32", "records": "mapping(bytes32 => bool)", "request": "PbPegged.Withdraw", "sigsVerifier": "ISigsVerifier", "this": "address", "wdId": "bytes32"}, "loop_info": [], "related_expression": ["sigsVerifier.verifySigs(abi.encodePacked(domain,_request),_sigs,_signers,_powers)", "request=PbPegged.decWithdraw(_request)", "wdId=keccak256(bytes)(abi.encodePacked(request.receiver,request.token,request.amount,request.burnAccount,request.refChainId,request.refId,address(this)))", "records[wdId]==false", "records[wdId]=true", "_updateVolume(request.token,request.amount)", "delayThreshold=delayThresholds[request.token]", "not(delayThreshold>0&&request.amount>delayThreshold)", "_sendToken(request.receiver,request.token,request.amount)", "Withdrawn(wdId,request.receiver,request.token,request.amount,request.refChainId,request.refId,request.burnAccount)"], "related_expression_type": ["CallExpression", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "Condition", "CallExpression", "CallExpression"]}, {"visibility": "public", "return_vars": ["_account--variables"], "modifier": [], "return_expressions": ["governors[_account]"], "info": ["DelayedTransfer", "isGovernor", "_account"], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["DelayedTransfer", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["transfer--variables"], "modifier": [], "return_expressions": ["transfer"], "info": ["DelayedTransfer", "_executeDelayedTransfer", "id"], "vars": {"block.timestamp": "uint256", "delayPeriod": "uint256", "delayedTransfers": "mapping(bytes32 => DelayedTransfer.delayedTransfer)", "id": "bytes32", "transfer": "DelayedTransfer.delayedTransfer"}, "loop_info": [], "related_expression": ["transfer=delayedTransfers[id]", "transfer.timestamp>0", "block.timestamp>transfer.timestamp+delayPeriod", "deletedelayedTransfers[id]", "DelayedTransferExecuted(id,transfer.receiver,transfer.token,transfer.amount)"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition", "Expression", "CallExpression"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["Governor", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["_account--variables"], "modifier": [], "return_expressions": ["governors[_account]"], "info": ["Governor", "isGovernor", "_account"], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["Ownable", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_paused"], "info": ["Pauser", "paused"], "vars": {"_paused": "bool"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Pauser", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Pauser", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["Pauser", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["account--variables"], "modifier": [], "return_expressions": ["pausers[account]"], "info": ["Pauser", "isPauser", "account"], "vars": {"account": "address", "pausers": "mapping(address => bool)"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["_account--variables"], "modifier": [], "return_expressions": ["governors[_account]"], "info": ["VolumeControl", "isGovernor", "_account"], "vars": {"_account": "address", "governors": "mapping(address => bool)"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["VolumeControl", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Pausable", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Pausable", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_paused"], "info": ["Pausable", "paused"], "vars": {"_paused": "bool"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["account--variables"], "modifier": [], "return_expressions": ["account.code.length>0"], "info": ["Address", "isContract", "account"], "vars": {"TMP_522": "bytes", "account": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionCall(target,data,Address:low-levelcallfailed)"], "info": ["Address", "functionCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,0,errorMessage)"], "info": ["Address", "functionCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["data--variables", "value--variables", "target--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,value,Address:low-levelcallwithvaluefailed)"], "info": ["Address", "functionCallWithValue", "target", "data", "value"], "vars": {"data": "bytes", "target": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["success--variables", "errorMessage--variables", "returndata--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionCallWithValue", "target", "data", "value", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address", "this": "address", "value": "uint256"}, "loop_info": [], "related_expression": ["address(this).balance>=value", "isContract(target)", "(success,returndata)=target.call{value:value}(data)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionStaticCall(target,data,Address:low-levelstaticcallfailed)"], "info": ["Address", "functionStaticCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["success--variables", "errorMessage--variables", "returndata--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionStaticCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.staticcall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionDelegateCall(target,data,Address:low-leveldelegatecallfailed)"], "info": ["Address", "functionDelegateCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["returndata--variables", "success--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionDelegateCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.delegatecall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["returndata--variables"], "modifier": [], "return_expressions": ["returndata"], "info": ["Address", "verifyCallResult", "success", "returndata", "errorMessage"], "vars": {"errorMessage": "string", "returndata": "bytes", "returndata_size_verifyCallResult_asm_0": "uint256", "success": "bool"}, "loop_info": [], "related_expression": ["success"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Context", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Context", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}]