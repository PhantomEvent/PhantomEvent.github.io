[{"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "tryAdd", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["c=a+b", "c<a"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["(true,c)"], "info": ["SafeMath", "tryAdd", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["c=a+b", "not(c<a)"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "trySub", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b>a"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["(true,a-b)"], "info": ["SafeMath", "trySub", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["not(b>a)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(true,0)"], "info": ["SafeMath", "tryMul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["a==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "tryMul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["not(a==0)", "c=a*b", "c/a!=b"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["(true,c)"], "info": ["SafeMath", "tryMul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["not(a==0)", "c=a*b", "not(c/a!=b)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "tryDiv", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["(true,a/b)"], "info": ["SafeMath", "tryDiv", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["not(b==0)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "tryMod", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["(true,a%b)"], "info": ["SafeMath", "tryMod", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["not(b==0)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["a+b"], "info": ["SafeMath", "add", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a-b"], "info": ["SafeMath", "sub", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["a*b"], "info": ["SafeMath", "mul", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a/b"], "info": ["SafeMath", "div", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["a%b"], "info": ["SafeMath", "mod", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a-b"], "info": ["SafeMath", "sub", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b<=a"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["a/b"], "info": ["SafeMath", "div", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b>0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["a%b"], "info": ["SafeMath", "mod", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b>0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Context", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Context", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["ERC20", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["ERC20", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_name"], "info": ["ERC20", "name"], "vars": {"_name": "string"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_symbol"], "info": ["ERC20", "symbol"], "vars": {"_symbol": "string"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["18"], "info": ["ERC20", "decimals"], "vars": {}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_totalSupply"], "info": ["ERC20", "totalSupply"], "vars": {"_totalSupply": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["account--variables"], "modifier": [], "return_expressions": ["_balances[account]"], "info": ["ERC20", "balanceOf", "account"], "vars": {"_balances": "mapping(address => uint256)", "account": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20", "transfer", "recipient", "amount"], "vars": {"amount": "uint256", "recipient": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["owner--variables", "spender--variables"], "modifier": [], "return_expressions": ["_allowances[owner][spender]"], "info": ["ERC20", "allowance", "owner", "spender"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "owner": "address", "spender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20", "approve", "spender", "amount"], "vars": {"amount": "uint256", "spender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20", "transferFrom", "sender", "recipient", "amount"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "amount": "uint256", "currentAllowance": "uint256", "recipient": "address", "sender": "address"}, "loop_info": [], "related_expression": ["currentAllowance>=amount"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20", "increaseAllowance", "spender", "addedValue"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "addedValue": "uint256", "spender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20", "decreaseAllowance", "spender", "subtractedValue"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "currentAllowance": "uint256", "spender": "address", "subtractedValue": "uint256"}, "loop_info": [], "related_expression": ["currentAllowance>=subtractedValue"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["size--variables"], "modifier": [], "return_expressions": ["size>0"], "info": ["Address", "isContract", "account"], "vars": {"account": "address", "size": "uint256"}, "loop_info": [], "related_expression": ["size=extcodesize(uint256)(account)"], "related_expression_type": ["AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionCall(target,data,Address:low-levelcallfailed)"], "info": ["Address", "functionCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["data--variables", "errorMessage--variables", "target--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,0,errorMessage)"], "info": ["Address", "functionCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["data--variables", "value--variables", "target--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,value,Address:low-levelcallwithvaluefailed)"], "info": ["Address", "functionCallWithValue", "target", "data", "value"], "vars": {"data": "bytes", "target": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["errorMessage--variables", "success--variables", "returndata--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionCallWithValue", "target", "data", "value", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address", "this": "address", "value": "uint256"}, "loop_info": [], "related_expression": ["address(this).balance>=value", "isContract(target)", "(success,returndata)=target.call{value:value}(data)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionStaticCall(target,data,Address:low-levelstaticcallfailed)"], "info": ["Address", "functionStaticCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["returndata--variables", "success--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionStaticCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.staticcall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionDelegateCall(target,data,Address:low-leveldelegatecallfailed)"], "info": ["Address", "functionDelegateCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["errorMessage--variables", "returndata--variables", "success--variables"], "modifier": [], "return_expressions": ["verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionDelegateCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.delegatecall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["returndata--variables"], "modifier": [], "return_expressions": ["returndata"], "info": ["Address", "verifyCallResult", "success", "returndata", "errorMessage"], "vars": {"errorMessage": "string", "returndata": "bytes", "returndata_size_verifyCallResult_asm_0": "uint256", "success": "bool"}, "loop_info": [], "related_expression": ["success"], "related_expression_type": ["Condition"]}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["EnumerableSet", "_add", "set", "value"], "vars": {"set": "EnumerableSet.Set", "value": "bytes32"}, "loop_info": [], "related_expression": ["!_contains(set,value)"], "related_expression_type": ["Condition"]}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["false"], "info": ["EnumerableSet", "_add", "set", "value"], "vars": {"set": "EnumerableSet.Set", "value": "bytes32"}, "loop_info": [], "related_expression": ["not(!_contains(set,value))"], "related_expression_type": ["Condition"]}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["EnumerableSet", "_remove", "set", "value"], "vars": {"lastIndex": "uint256", "lastvalue": "bytes32", "set": "EnumerableSet.Set", "toDeleteIndex": "uint256", "value": "bytes32", "valueIndex": "uint256"}, "loop_info": [], "related_expression": ["valueIndex!=0", "lastIndex!=toDeleteIndex"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["EnumerableSet", "_remove", "set", "value"], "vars": {"lastIndex": "uint256", "lastvalue": "bytes32", "set": "EnumerableSet.Set", "toDeleteIndex": "uint256", "value": "bytes32", "valueIndex": "uint256"}, "loop_info": [], "related_expression": ["valueIndex!=0", "not(lastIndex!=toDeleteIndex)"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["false"], "info": ["EnumerableSet", "_remove", "set", "value"], "vars": {"lastIndex": "uint256", "lastvalue": "bytes32", "set": "EnumerableSet.Set", "toDeleteIndex": "uint256", "value": "bytes32", "valueIndex": "uint256"}, "loop_info": [], "related_expression": ["not(valueIndex!=0)"], "related_expression_type": ["Condition"]}, {"visibility": "private", "return_vars": ["set--variables", "value--variables"], "modifier": [], "return_expressions": ["set._indexes[value]!=0"], "info": ["EnumerableSet", "_contains", "set", "value"], "vars": {"set": "EnumerableSet.Set", "value": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": ["set--variables"], "modifier": [], "return_expressions": ["set._values.length"], "info": ["EnumerableSet", "_length", "set"], "vars": {"set": "EnumerableSet.Set"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": ["set--variables", "index--variables"], "modifier": [], "return_expressions": ["set._values[index]"], "info": ["EnumerableSet", "_at", "set", "index"], "vars": {"index": "uint256", "set": "EnumerableSet.Set"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": ["set--variables"], "modifier": [], "return_expressions": ["set._values"], "info": ["EnumerableSet", "_values", "set"], "vars": {"set": "EnumerableSet.Set"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables", "value--variables"], "modifier": [], "return_expressions": ["_add(set._inner,value)"], "info": ["EnumerableSet", "add", "set", "value"], "vars": {"set": "EnumerableSet.Bytes32Set", "value": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables", "value--variables"], "modifier": [], "return_expressions": ["_remove(set._inner,value)"], "info": ["EnumerableSet", "remove", "set", "value"], "vars": {"set": "EnumerableSet.Bytes32Set", "value": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["value--variables", "set--variables"], "modifier": [], "return_expressions": ["_contains(set._inner,value)"], "info": ["EnumerableSet", "contains", "set", "value"], "vars": {"set": "EnumerableSet.Bytes32Set", "value": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables"], "modifier": [], "return_expressions": ["_length(set._inner)"], "info": ["EnumerableSet", "length", "set"], "vars": {"set": "EnumerableSet.Bytes32Set"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables", "index--variables"], "modifier": [], "return_expressions": ["_at(set._inner,index)"], "info": ["EnumerableSet", "at", "set", "index"], "vars": {"index": "uint256", "set": "EnumerableSet.Bytes32Set"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables"], "modifier": [], "return_expressions": ["_values(set._inner)"], "info": ["EnumerableSet", "values", "set"], "vars": {"set": "EnumerableSet.Bytes32Set"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables", "value--variables"], "modifier": [], "return_expressions": ["_add(set._inner,bytes32(uint256(uint160(value))))"], "info": ["EnumerableSet", "add", "set", "value"], "vars": {"set": "EnumerableSet.AddressSet", "value": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables", "value--variables"], "modifier": [], "return_expressions": ["_remove(set._inner,bytes32(uint256(uint160(value))))"], "info": ["EnumerableSet", "remove", "set", "value"], "vars": {"set": "EnumerableSet.AddressSet", "value": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables", "value--variables"], "modifier": [], "return_expressions": ["_contains(set._inner,bytes32(uint256(uint160(value))))"], "info": ["EnumerableSet", "contains", "set", "value"], "vars": {"set": "EnumerableSet.AddressSet", "value": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables"], "modifier": [], "return_expressions": ["_length(set._inner)"], "info": ["EnumerableSet", "length", "set"], "vars": {"set": "EnumerableSet.AddressSet"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables", "index--variables"], "modifier": [], "return_expressions": ["address(uint160(uint256(_at(set._inner,index))))"], "info": ["EnumerableSet", "at", "set", "index"], "vars": {"index": "uint256", "set": "EnumerableSet.AddressSet"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["result--variables"], "modifier": [], "return_expressions": ["result"], "info": ["EnumerableSet", "values", "set"], "vars": {"result": "address[]", "set": "EnumerableSet.AddressSet", "store": "bytes32[]"}, "loop_info": [], "related_expression": ["store=_values(set._inner)", "result=store"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["set--variables", "value--variables"], "modifier": [], "return_expressions": ["_add(set._inner,bytes32(value))"], "info": ["EnumerableSet", "add", "set", "value"], "vars": {"set": "EnumerableSet.UintSet", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables", "value--variables"], "modifier": [], "return_expressions": ["_remove(set._inner,bytes32(value))"], "info": ["EnumerableSet", "remove", "set", "value"], "vars": {"set": "EnumerableSet.UintSet", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["value--variables", "set--variables"], "modifier": [], "return_expressions": ["_contains(set._inner,bytes32(value))"], "info": ["EnumerableSet", "contains", "set", "value"], "vars": {"set": "EnumerableSet.UintSet", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables"], "modifier": [], "return_expressions": ["_length(set._inner)"], "info": ["EnumerableSet", "length", "set"], "vars": {"set": "EnumerableSet.UintSet"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables", "index--variables"], "modifier": [], "return_expressions": ["uint256(_at(set._inner,index))"], "info": ["EnumerableSet", "at", "set", "index"], "vars": {"index": "uint256", "set": "EnumerableSet.UintSet"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["result--variables"], "modifier": [], "return_expressions": ["result"], "info": ["EnumerableSet", "values", "set"], "vars": {"result": "uint256[]", "set": "EnumerableSet.UintSet", "store": "bytes32[]"}, "loop_info": [], "related_expression": ["store=_values(set._inner)", "result=store"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Ownable", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Ownable", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["Ownable", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["UNIT"], "info": ["SafeDecimalMath", "unit"], "vars": {"UNIT": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["PRECISE_UNIT"], "info": ["SafeDecimalMath", "preciseUnit"], "vars": {"PRECISE_UNIT": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["y--variables", "x--variables"], "modifier": [], "return_expressions": ["x.mul(y)/UNIT"], "info": ["SafeDecimalMath", "multiplyDecimal", "x", "y"], "vars": {"UNIT": "uint256", "x": "uint256", "y": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": ["quotientTimesTen--variables"], "modifier": [], "return_expressions": ["quotientTimesTen/10"], "info": ["SafeDecimalMath", "_multiplyDecimalRound", "x", "y", "precisionUnit"], "vars": {"precisionUnit": "uint256", "quotientTimesTen": "uint256", "x": "uint256", "y": "uint256"}, "loop_info": [], "related_expression": ["quotientTimesTen=x.mul(y)/(precisionUnit/10)", "quotientTimesTen%10>=5", "quotientTimesTen+=10"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_+="]}, {"visibility": "private", "return_vars": ["quotientTimesTen--variables"], "modifier": [], "return_expressions": ["quotientTimesTen/10"], "info": ["SafeDecimalMath", "_multiplyDecimalRound", "x", "y", "precisionUnit"], "vars": {"precisionUnit": "uint256", "quotientTimesTen": "uint256", "x": "uint256", "y": "uint256"}, "loop_info": [], "related_expression": ["quotientTimesTen=x.mul(y)/(precisionUnit/10)", "not(quotientTimesTen%10>=5)"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["y--variables", "x--variables"], "modifier": [], "return_expressions": ["_multiplyDecimalRound(x,y,PRECISE_UNIT)"], "info": ["SafeDecimalMath", "multiplyDecimalRoundPrecise", "x", "y"], "vars": {"PRECISE_UNIT": "uint256", "x": "uint256", "y": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["x--variables", "y--variables"], "modifier": [], "return_expressions": ["_multiplyDecimalRound(x,y,UNIT)"], "info": ["SafeDecimalMath", "multiplyDecimalRound", "x", "y"], "vars": {"UNIT": "uint256", "x": "uint256", "y": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["x--variables", "y--variables"], "modifier": [], "return_expressions": ["x.mul(UNIT).div(y)"], "info": ["SafeDecimalMath", "divideDecimal", "x", "y"], "vars": {"UNIT": "uint256", "x": "uint256", "y": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": ["resultTimesTen--variables"], "modifier": [], "return_expressions": ["resultTimesTen/10"], "info": ["SafeDecimalMath", "_divideDecimalRound", "x", "y", "precisionUnit"], "vars": {"precisionUnit": "uint256", "resultTimesTen": "uint256", "x": "uint256", "y": "uint256"}, "loop_info": [], "related_expression": ["resultTimesTen=x.mul(precisionUnit*10).div(y)", "resultTimesTen%10>=5", "resultTimesTen+=10"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_+="]}, {"visibility": "private", "return_vars": ["resultTimesTen--variables"], "modifier": [], "return_expressions": ["resultTimesTen/10"], "info": ["SafeDecimalMath", "_divideDecimalRound", "x", "y", "precisionUnit"], "vars": {"precisionUnit": "uint256", "resultTimesTen": "uint256", "x": "uint256", "y": "uint256"}, "loop_info": [], "related_expression": ["resultTimesTen=x.mul(precisionUnit*10).div(y)", "not(resultTimesTen%10>=5)"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["y--variables", "x--variables"], "modifier": [], "return_expressions": ["_divideDecimalRound(x,y,UNIT)"], "info": ["SafeDecimalMath", "divideDecimalRound", "x", "y"], "vars": {"UNIT": "uint256", "x": "uint256", "y": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["x--variables", "y--variables"], "modifier": [], "return_expressions": ["_divideDecimalRound(x,y,PRECISE_UNIT)"], "info": ["SafeDecimalMath", "divideDecimalRoundPrecise", "x", "y"], "vars": {"PRECISE_UNIT": "uint256", "x": "uint256", "y": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["i--variables"], "modifier": [], "return_expressions": ["i.mul(UNIT_TO_HIGH_PRECISION_CONVERSION_FACTOR)"], "info": ["SafeDecimalMath", "decimalToPreciseDecimal", "i"], "vars": {"UNIT_TO_HIGH_PRECISION_CONVERSION_FACTOR": "uint256", "i": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["quotientTimesTen--variables"], "modifier": [], "return_expressions": ["quotientTimesTen/10"], "info": ["SafeDecimalMath", "preciseDecimalToDecimal", "i"], "vars": {"UNIT_TO_HIGH_PRECISION_CONVERSION_FACTOR": "uint256", "i": "uint256", "quotientTimesTen": "uint256"}, "loop_info": [], "related_expression": ["quotientTimesTen=i/(UNIT_TO_HIGH_PRECISION_CONVERSION_FACTOR/10)", "quotientTimesTen%10>=5", "quotientTimesTen+=10"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_+="]}, {"visibility": "internal", "return_vars": ["quotientTimesTen--variables"], "modifier": [], "return_expressions": ["quotientTimesTen/10"], "info": ["SafeDecimalMath", "preciseDecimalToDecimal", "i"], "vars": {"UNIT_TO_HIGH_PRECISION_CONVERSION_FACTOR": "uint256", "i": "uint256", "quotientTimesTen": "uint256"}, "loop_info": [], "related_expression": ["quotientTimesTen=i/(UNIT_TO_HIGH_PRECISION_CONVERSION_FACTOR/10)", "not(quotientTimesTen%10>=5)"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["SwapPair", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["SwapPair", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["SwapPair", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_name"], "info": ["SwapPair", "name"], "vars": {"_name": "string"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_symbol"], "info": ["SwapPair", "symbol"], "vars": {"_symbol": "string"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["18"], "info": ["SwapPair", "decimals"], "vars": {}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_totalSupply"], "info": ["SwapPair", "totalSupply"], "vars": {"_totalSupply": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["account--variables"], "modifier": [], "return_expressions": ["_balances[account]"], "info": ["SwapPair", "balanceOf", "account"], "vars": {"_balances": "mapping(address => uint256)", "account": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["SwapPair", "transfer", "recipient", "amount"], "vars": {"amount": "uint256", "recipient": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["spender--variables", "owner--variables"], "modifier": [], "return_expressions": ["_allowances[owner][spender]"], "info": ["SwapPair", "allowance", "owner", "spender"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "owner": "address", "spender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["SwapPair", "approve", "spender", "amount"], "vars": {"amount": "uint256", "spender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["SwapPair", "transferFrom", "sender", "recipient", "amount"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "amount": "uint256", "currentAllowance": "uint256", "recipient": "address", "sender": "address"}, "loop_info": [], "related_expression": ["currentAllowance>=amount"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["SwapPair", "increaseAllowance", "spender", "addedValue"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "addedValue": "uint256", "spender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["SwapPair", "decreaseAllowance", "spender", "subtractedValue"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "currentAllowance": "uint256", "spender": "address", "subtractedValue": "uint256"}, "loop_info": [], "related_expression": ["currentAllowance>=subtractedValue"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": ["chainId--variables"], "modifier": [], "return_expressions": ["(reserve0,reserve1s[chainId])"], "info": ["SwapPair", "getReserves", "chainId"], "vars": {"chainId": "uint256", "reserve0": "uint256", "reserve1s": "mapping(uint256 => uint256)"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["chainids--variables"], "modifier": [], "return_expressions": ["chainids"], "info": ["SwapPair", "getSupportChainIDs"], "vars": {"chainids": "uint256[]", "i": "uint256", "supportChainids": "EnumerableSet.UintSet"}, "loop_info": [1, 3], "related_expression": ["chainids=newuint256[](supportChainids.length())", "i<supportChainids.length()", "chainids[i]=supportChainids.at(i)", "i++"], "related_expression_type": ["AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Expression"], "isloop": true}, {"visibility": "external", "return_vars": ["chainids--variables"], "modifier": [], "return_expressions": ["chainids"], "info": ["SwapPair", "getSupportChainIDs"], "vars": {"chainids": "uint256[]", "i": "uint256", "supportChainids": "EnumerableSet.UintSet"}, "loop_info": [1, 1], "related_expression": ["chainids=newuint256[](supportChainids.length())", "not(i<supportChainids.length())"], "related_expression_type": ["AssignmentOperation_=", "Condition"], "isloop": true}, {"visibility": "external", "return_vars": ["amount1s--variables", "chainids--variables", "amount0--variables"], "modifier": ["onlyTwoWay"], "return_expressions": ["(amount0,chainids,amount1s)"], "info": ["SwapPair", "burn", "from", "to", "lpAmount", "feeTo", "feeAmount"], "vars": {"amount0": "uint256", "amount1s": "uint256[]", "balance0": "uint256", "chainids": "uint256[]", "feeAmount": "uint256", "feeTo": "address", "from": "address", "i": "uint256", "lpAmount": "uint256", "msg.sender": "address", "reserve1s": "mapping(uint256 => uint256)", "this": "address", "to": "address", "token0": "address", "totalRemove": "uint256", "totalReserve1s": "uint256", "reserve0": "uint256"}, "loop_info": [3, 7], "related_expression": ["(amount0,chainids,amount1s)=calculateBurn(lpAmount)", "IERC20(token0).transfer(from,amount0-feeAmount)", "feeAmount>0", "i<chainids.length", "amount1s[i]>0", "reserve1s[chainids[i]]-=amount1s[i]", "totalRemove+=amount1s[i]", "i++", "reserve0=balance0", "Burn(msg.sender,amount0,totalRemove,to)"], "related_expression_type": ["AssignmentOperation_=", "CallExpression", "Condition", "Condition", "Condition", "AssignmentOperation_-=", "AssignmentOperation_+=", "Expression", "AssignmentOperation_=", "CallExpression"], "isloop": true}, {"visibility": "external", "return_vars": ["amount1s--variables", "chainids--variables", "amount0--variables"], "modifier": ["onlyTwoWay"], "return_expressions": ["(amount0,chainids,amount1s)"], "info": ["SwapPair", "burn", "from", "to", "lpAmount", "feeTo", "feeAmount"], "vars": {"amount0": "uint256", "amount1s": "uint256[]", "balance0": "uint256", "chainids": "uint256[]", "feeAmount": "uint256", "feeTo": "address", "from": "address", "i": "uint256", "lpAmount": "uint256", "msg.sender": "address", "reserve1s": "mapping(uint256 => uint256)", "this": "address", "to": "address", "token0": "address", "totalRemove": "uint256", "totalReserve1s": "uint256", "reserve0": "uint256"}, "loop_info": [3, 3], "related_expression": ["(amount0,chainids,amount1s)=calculateBurn(lpAmount)", "IERC20(token0).transfer(from,amount0-feeAmount)", "feeAmount>0", "not(i<chainids.length)", "reserve0=balance0", "Burn(msg.sender,amount0,totalRemove,to)"], "related_expression_type": ["AssignmentOperation_=", "CallExpression", "Condition", "Condition", "AssignmentOperation_=", "CallExpression"], "isloop": true}, {"visibility": "external", "return_vars": ["amount1s--variables", "chainids--variables", "amount0--variables"], "modifier": ["onlyTwoWay"], "return_expressions": ["(amount0,chainids,amount1s)"], "info": ["SwapPair", "burn", "from", "to", "lpAmount", "feeTo", "feeAmount"], "vars": {"amount0": "uint256", "amount1s": "uint256[]", "balance0": "uint256", "chainids": "uint256[]", "feeAmount": "uint256", "feeTo": "address", "from": "address", "i": "uint256", "lpAmount": "uint256", "msg.sender": "address", "reserve1s": "mapping(uint256 => uint256)", "this": "address", "to": "address", "token0": "address", "totalRemove": "uint256", "totalReserve1s": "uint256", "reserve0": "uint256"}, "loop_info": [3, 7], "related_expression": ["(amount0,chainids,amount1s)=calculateBurn(lpAmount)", "IERC20(token0).transfer(from,amount0-feeAmount)", "not(feeAmount>0)", "i<chainids.length", "amount1s[i]>0", "reserve1s[chainids[i]]-=amount1s[i]", "totalRemove+=amount1s[i]", "i++", "reserve0=balance0", "Burn(msg.sender,amount0,totalRemove,to)"], "related_expression_type": ["AssignmentOperation_=", "CallExpression", "Condition", "Condition", "Condition", "AssignmentOperation_-=", "AssignmentOperation_+=", "Expression", "AssignmentOperation_=", "CallExpression"], "isloop": true}, {"visibility": "external", "return_vars": ["amount1s--variables", "chainids--variables", "amount0--variables"], "modifier": ["onlyTwoWay"], "return_expressions": ["(amount0,chainids,amount1s)"], "info": ["SwapPair", "burn", "from", "to", "lpAmount", "feeTo", "feeAmount"], "vars": {"amount0": "uint256", "amount1s": "uint256[]", "balance0": "uint256", "chainids": "uint256[]", "feeAmount": "uint256", "feeTo": "address", "from": "address", "i": "uint256", "lpAmount": "uint256", "msg.sender": "address", "reserve1s": "mapping(uint256 => uint256)", "this": "address", "to": "address", "token0": "address", "totalRemove": "uint256", "totalReserve1s": "uint256", "reserve0": "uint256"}, "loop_info": [3, 3], "related_expression": ["(amount0,chainids,amount1s)=calculateBurn(lpAmount)", "IERC20(token0).transfer(from,amount0-feeAmount)", "not(feeAmount>0)", "not(i<chainids.length)", "reserve0=balance0", "Burn(msg.sender,amount0,totalRemove,to)"], "related_expression_type": ["AssignmentOperation_=", "CallExpression", "Condition", "Condition", "AssignmentOperation_=", "CallExpression"], "isloop": true}, {"visibility": "public", "return_vars": ["amount0--variables", "chainids--variables", "amounts--variables"], "modifier": [], "return_expressions": ["(amount0,chainids,amounts)"], "info": ["SwapPair", "calculateBurn", "lpAmount"], "vars": {"_reserve0": "uint256", "_totalSupply": "uint256", "amount": "uint256", "amount0": "uint256", "amounts": "uint256[]", "amounts_scope_1": "uint256[]", "chainid": "uint256", "chainidLength": "uint256", "chainids": "uint256[]", "chainids_scope_0": "uint256[]", "diff0": "uint256", "i": "uint256", "lpAmount": "uint256", "reserve0": "uint256", "reserve1s": "mapping(uint256 => uint256)", "supportChainids": "EnumerableSet.UintSet", "totalReserve1s": "uint256", "value": "uint256"}, "loop_info": [], "related_expression": ["_reserve0=reserve0*diff0", "_totalSupply=totalSupply()", "value=(lpAmount*(_reserve0+totalReserve1s))/_totalSupply", "value<=_reserve0", "amount0=value/diff0", "chainids=newuint256[](0)", "amounts=newuint256[](0)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "public", "return_vars": ["chainids_scope_0--variables", "amounts_scope_1--variables"], "modifier": [], "return_expressions": ["(reserve0,chainids_scope_0,amounts_scope_1)"], "info": ["SwapPair", "calculateBurn", "lpAmount"], "vars": {"_reserve0": "uint256", "_totalSupply": "uint256", "amount": "uint256", "amount0": "uint256", "amounts": "uint256[]", "amounts_scope_1": "uint256[]", "chainid": "uint256", "chainidLength": "uint256", "chainids": "uint256[]", "chainids_scope_0": "uint256[]", "diff0": "uint256", "i": "uint256", "lpAmount": "uint256", "reserve0": "uint256", "reserve1s": "mapping(uint256 => uint256)", "supportChainids": "EnumerableSet.UintSet", "totalReserve1s": "uint256", "value": "uint256"}, "loop_info": [8, 18], "related_expression": ["_reserve0=reserve0*diff0", "_totalSupply=totalSupply()", "value=(lpAmount*(_reserve0+totalReserve1s))/_totalSupply", "not(value<=_reserve0)", "amount=value-_reserve0", "chainidLength=supportChainids.length()", "chainids_scope_0=newuint256[](chainidLength)", "amounts_scope_1=newuint256[](chainidLength)", "amounts_scope_1[i]=reserve1s[chainid]", "amount=amount-reserve1s[chainid]", "i++", "i<chainidLength", "chainid=supportChainids.at(i)", "reserve1s[chainid]>=amount", "chainids_scope_0[i]=chainid", "chainid=supportChainids.at(i)", "reserve1s[chainid]>=amount", "chainids_scope_0[i]=chainid", "amounts_scope_1[i]=amount"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_="], "isloop": true}, {"visibility": "public", "return_vars": ["chainids_scope_0--variables", "amounts_scope_1--variables"], "modifier": [], "return_expressions": ["(reserve0,chainids_scope_0,amounts_scope_1)"], "info": ["SwapPair", "calculateBurn", "lpAmount"], "vars": {"_reserve0": "uint256", "_totalSupply": "uint256", "amount": "uint256", "amount0": "uint256", "amounts": "uint256[]", "amounts_scope_1": "uint256[]", "chainid": "uint256", "chainidLength": "uint256", "chainids": "uint256[]", "chainids_scope_0": "uint256[]", "diff0": "uint256", "i": "uint256", "lpAmount": "uint256", "reserve0": "uint256", "reserve1s": "mapping(uint256 => uint256)", "supportChainids": "EnumerableSet.UintSet", "totalReserve1s": "uint256", "value": "uint256"}, "loop_info": [8, 18], "related_expression": ["_reserve0=reserve0*diff0", "_totalSupply=totalSupply()", "value=(lpAmount*(_reserve0+totalReserve1s))/_totalSupply", "not(value<=_reserve0)", "amount=value-_reserve0", "chainidLength=supportChainids.length()", "chainids_scope_0=newuint256[](chainidLength)", "amounts_scope_1=newuint256[](chainidLength)", "i<chainidLength", "chainid=supportChainids.at(i)", "amounts_scope_1[i]=reserve1s[chainid]", "amount=amount-reserve1s[chainid]", "i++", "i<chainidLength", "chainid=supportChainids.at(i)", "reserve1s[chainid]>=amount", "chainids_scope_0[i]=chainid", "chainids_scope_0[i]=chainid", "amounts_scope_1[i]=amount"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_="], "isloop": true}, {"visibility": "public", "return_vars": ["chainids_scope_0--variables", "amounts_scope_1--variables"], "modifier": [], "return_expressions": ["(reserve0,chainids_scope_0,amounts_scope_1)"], "info": ["SwapPair", "calculateBurn", "lpAmount"], "vars": {"_reserve0": "uint256", "_totalSupply": "uint256", "amount": "uint256", "amount0": "uint256", "amounts": "uint256[]", "amounts_scope_1": "uint256[]", "chainid": "uint256", "chainidLength": "uint256", "chainids": "uint256[]", "chainids_scope_0": "uint256[]", "diff0": "uint256", "i": "uint256", "lpAmount": "uint256", "reserve0": "uint256", "reserve1s": "mapping(uint256 => uint256)", "supportChainids": "EnumerableSet.UintSet", "totalReserve1s": "uint256", "value": "uint256"}, "loop_info": [8, 12], "related_expression": ["_reserve0=reserve0*diff0", "_totalSupply=totalSupply()", "value=(lpAmount*(_reserve0+totalReserve1s))/_totalSupply", "not(value<=_reserve0)", "amount=value-_reserve0", "chainidLength=supportChainids.length()", "chainids_scope_0=newuint256[](chainidLength)", "amounts_scope_1=newuint256[](chainidLength)", "i<chainidLength", "chainid=supportChainids.at(i)", "reserve1s[chainid]>=amount", "chainids_scope_0[i]=chainid", "amounts_scope_1[i]=amount"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_="], "isloop": true}, {"visibility": "public", "return_vars": ["chainids_scope_0--variables", "amounts_scope_1--variables"], "modifier": [], "return_expressions": ["(reserve0,chainids_scope_0,amounts_scope_1)"], "info": ["SwapPair", "calculateBurn", "lpAmount"], "vars": {"_reserve0": "uint256", "_totalSupply": "uint256", "amount": "uint256", "amount0": "uint256", "amounts": "uint256[]", "amounts_scope_1": "uint256[]", "chainid": "uint256", "chainidLength": "uint256", "chainids": "uint256[]", "chainids_scope_0": "uint256[]", "diff0": "uint256", "i": "uint256", "lpAmount": "uint256", "reserve0": "uint256", "reserve1s": "mapping(uint256 => uint256)", "supportChainids": "EnumerableSet.UintSet", "totalReserve1s": "uint256", "value": "uint256"}, "loop_info": [8, 14], "related_expression": ["_reserve0=reserve0*diff0", "_totalSupply=totalSupply()", "value=(lpAmount*(_reserve0+totalReserve1s))/_totalSupply", "not(value<=_reserve0)", "amount=value-_reserve0", "chainidLength=supportChainids.length()", "chainids_scope_0=newuint256[](chainidLength)", "amounts_scope_1=newuint256[](chainidLength)", "amounts_scope_1[i]=reserve1s[chainid]", "amount=amount-reserve1s[chainid]", "i++", "i<chainidLength", "chainid=supportChainids.at(i)", "not(reserve1s[chainid]>=amount)", "chainids_scope_0[i]=chainid"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Expression", "Condition", "AssignmentOperation_=", "Condition", "AssignmentOperation_="], "isloop": true}, {"visibility": "public", "return_vars": ["chainids_scope_0--variables", "amounts_scope_1--variables"], "modifier": [], "return_expressions": ["(reserve0,chainids_scope_0,amounts_scope_1)"], "info": ["SwapPair", "calculateBurn", "lpAmount"], "vars": {"_reserve0": "uint256", "_totalSupply": "uint256", "amount": "uint256", "amount0": "uint256", "amounts": "uint256[]", "amounts_scope_1": "uint256[]", "chainid": "uint256", "chainidLength": "uint256", "chainids": "uint256[]", "chainids_scope_0": "uint256[]", "diff0": "uint256", "i": "uint256", "lpAmount": "uint256", "reserve0": "uint256", "reserve1s": "mapping(uint256 => uint256)", "supportChainids": "EnumerableSet.UintSet", "totalReserve1s": "uint256", "value": "uint256"}, "loop_info": [8, 8], "related_expression": ["_reserve0=reserve0*diff0", "_totalSupply=totalSupply()", "value=(lpAmount*(_reserve0+totalReserve1s))/_totalSupply", "not(value<=_reserve0)", "amount=value-_reserve0", "chainidLength=supportChainids.length()", "chainids_scope_0=newuint256[](chainidLength)", "amounts_scope_1=newuint256[](chainidLength)", "not(i<chainidLength)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"], "isloop": true}]