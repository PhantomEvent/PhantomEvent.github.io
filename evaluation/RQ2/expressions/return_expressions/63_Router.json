[{"visibility": "external", "return_vars": ["_account--variables", "_collateralToken--variables", "_sizeDelta--variables", "_isLong--variables", "_indexToken--variables", "_receiver--variables", "_collateralDelta--variables"], "modifier": [], "return_expressions": ["IVault(vault).decreasePosition(_account,_collateralToken,_indexToken,_collateralDelta,_sizeDelta,_isLong,_receiver)"], "info": ["Router", "pluginDecreasePosition", "_account", "_collateralToken", "_indexToken", "_collateralDelta", "_sizeDelta", "_isLong", "_receiver"], "vars": {"_account": "address", "_collateralDelta": "uint256", "_collateralToken": "address", "_indexToken": "address", "_isLong": "bool", "_receiver": "address", "_sizeDelta": "uint256", "vault": "address"}, "loop_info": [], "related_expression": ["_validatePlugin(_account)"], "related_expression_type": ["CallExpression"]}, {"visibility": "private", "return_vars": ["_collateralDelta--variables", "_isLong--variables", "_sizeDelta--variables", "_collateralToken--variables", "_receiver--variables", "_indexToken--variables"], "modifier": [], "return_expressions": ["IVault(vault).decreasePosition(_sender(),_collateralToken,_indexToken,_collateralDelta,_sizeDelta,_isLong,_receiver)"], "info": ["Router", "_decreasePosition", "_collateralToken", "_indexToken", "_collateralDelta", "_sizeDelta", "_isLong", "_receiver", "_price"], "vars": {"_collateralDelta": "uint256", "_collateralToken": "address", "_indexToken": "address", "_isLong": "bool", "_price": "uint256", "_receiver": "address", "_sizeDelta": "uint256", "vault": "address"}, "loop_info": [], "related_expression": ["_isLong", "IVault(vault).getMinPrice(_indexToken)>=_price"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "private", "return_vars": ["_collateralDelta--variables", "_isLong--variables", "_sizeDelta--variables", "_collateralToken--variables", "_receiver--variables", "_indexToken--variables"], "modifier": [], "return_expressions": ["IVault(vault).decreasePosition(_sender(),_collateralToken,_indexToken,_collateralDelta,_sizeDelta,_isLong,_receiver)"], "info": ["Router", "_decreasePosition", "_collateralToken", "_indexToken", "_collateralDelta", "_sizeDelta", "_isLong", "_receiver", "_price"], "vars": {"_collateralDelta": "uint256", "_collateralToken": "address", "_indexToken": "address", "_isLong": "bool", "_price": "uint256", "_receiver": "address", "_sizeDelta": "uint256", "vault": "address"}, "loop_info": [], "related_expression": ["not(_isLong)", "IVault(vault).getMaxPrice(_indexToken)<=_price"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "private", "return_vars": ["_path--variables", "_receiver--variables", "_minOut--variables"], "modifier": [], "return_expressions": ["_vaultSwap(_path[0],_path[1],_minOut,_receiver)"], "info": ["Router", "_swap", "_path", "_minOut", "_receiver"], "vars": {"_minOut": "uint256", "_path": "address[]", "_receiver": "address", "midOut": "uint256", "this": "address", "vault": "address"}, "loop_info": [], "related_expression": ["_path.length==2"], "related_expression_type": ["Condition"]}, {"visibility": "private", "return_vars": ["_path--variables", "_receiver--variables", "_minOut--variables"], "modifier": [], "return_expressions": ["_vaultSwap(_path[1],_path[2],_minOut,_receiver)"], "info": ["Router", "_swap", "_path", "_minOut", "_receiver"], "vars": {"_minOut": "uint256", "_path": "address[]", "_receiver": "address", "midOut": "uint256", "this": "address", "vault": "address"}, "loop_info": [], "related_expression": ["not(_path.length==2)", "_path.length==3"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "private", "return_vars": ["amountOut--variables"], "modifier": [], "return_expressions": ["amountOut"], "info": ["Router", "_vaultSwap", "_tokenIn", "_tokenOut", "_minOut", "_receiver"], "vars": {"_minOut": "uint256", "_receiver": "address", "_tokenIn": "address", "_tokenOut": "address", "amountOut": "uint256", "usdg": "address", "vault": "address"}, "loop_info": [], "related_expression": ["_tokenOut==usdg", "amountOut=IVault(vault).buyUSDG(_tokenIn,_receiver)", "amountOut>=_minOut"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "private", "return_vars": ["amountOut--variables"], "modifier": [], "return_expressions": ["amountOut"], "info": ["Router", "_vaultSwap", "_tokenIn", "_tokenOut", "_minOut", "_receiver"], "vars": {"_minOut": "uint256", "_receiver": "address", "_tokenIn": "address", "_tokenOut": "address", "amountOut": "uint256", "usdg": "address", "vault": "address"}, "loop_info": [], "related_expression": ["not(_tokenOut==usdg)", "_tokenIn==usdg", "amountOut=IVault(vault).sellUSDG(_tokenOut,_receiver)", "amountOut>=_minOut"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "private", "return_vars": ["amountOut--variables"], "modifier": [], "return_expressions": ["amountOut"], "info": ["Router", "_vaultSwap", "_tokenIn", "_tokenOut", "_minOut", "_receiver"], "vars": {"_minOut": "uint256", "_receiver": "address", "_tokenIn": "address", "_tokenOut": "address", "amountOut": "uint256", "usdg": "address", "vault": "address"}, "loop_info": [], "related_expression": ["not(_tokenOut==usdg)", "not(_tokenIn==usdg)", "amountOut=IVault(vault).swap(_tokenIn,_tokenOut,_receiver)", "amountOut>=_minOut"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Router", "_sender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "add", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["c=a+b", "c>=a"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["sub(a,b,SafeMath:subtractionoverflow)"], "info": ["SafeMath", "sub", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "sub", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b<=a", "c=a-b"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0"], "info": ["SafeMath", "mul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["a==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "mul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["not(a==0)", "c=a*b", "c/a==b"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["div(a,b,SafeMath:divisionbyzero)"], "info": ["SafeMath", "div", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "div", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b>0", "c=a/b"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["mod(a,b,SafeMath:modulobyzero)"], "info": ["SafeMath", "mod", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a%b"], "info": ["SafeMath", "mod", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b!=0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["size--variables"], "modifier": [], "return_expressions": ["size>0"], "info": ["Address", "isContract", "account"], "vars": {"account": "address", "size": "uint256"}, "loop_info": [], "related_expression": ["size=extcodesize(uint256)(account)"], "related_expression_type": ["AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionCall(target,data,Address:low-levelcallfailed)"], "info": ["Address", "functionCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["data--variables", "errorMessage--variables", "target--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,0,errorMessage)"], "info": ["Address", "functionCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["value--variables", "target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,value,Address:low-levelcallwithvaluefailed)"], "info": ["Address", "functionCallWithValue", "target", "data", "value"], "vars": {"data": "bytes", "target": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["returndata--variables", "success--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionCallWithValue", "target", "data", "value", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address", "this": "address", "value": "uint256"}, "loop_info": [], "related_expression": ["address(this).balance>=value", "isContract(target)", "(success,returndata)=target.call{value:value}(data)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionStaticCall(target,data,Address:low-levelstaticcallfailed)"], "info": ["Address", "functionStaticCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["errorMessage--variables", "success--variables", "returndata--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionStaticCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.staticcall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionDelegateCall(target,data,Address:low-leveldelegatecallfailed)"], "info": ["Address", "functionDelegateCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["success--variables", "returndata--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionDelegateCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.delegatecall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "private", "return_vars": ["returndata--variables"], "modifier": [], "return_expressions": ["returndata"], "info": ["Address", "_verifyCallResult", "success", "returndata", "errorMessage"], "vars": {"errorMessage": "string", "returndata": "bytes", "returndata_size__verifyCallResult_asm_0": "uint256", "success": "bool"}, "loop_info": [], "related_expression": ["success"], "related_expression_type": ["Condition"]}]