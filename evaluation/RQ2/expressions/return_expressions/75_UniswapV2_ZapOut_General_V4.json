[{"visibility": "internal", "return_vars": ["allowance--variables"], "modifier": [], "return_expressions": ["allowance"], "info": ["UniswapV2_ZapOut_General_V4_0_1", "_pullTokens", "token", "amount", "shouldSellEntireBalance"], "vars": {"allowance": "uint256", "amount": "uint256", "msg.sender": "address", "shouldSellEntireBalance": "bool", "this": "address", "token": "address"}, "loop_info": [], "related_expression": ["shouldSellEntireBalance", "Address.isContract(msg.sender)", "allowance=IERC20(token).allowance(msg.sender,address(this))", "IERC20(token).safeTransferFrom(msg.sender,address(this),allowance)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "internal", "return_vars": ["amount--variables"], "modifier": [], "return_expressions": ["amount"], "info": ["UniswapV2_ZapOut_General_V4_0_1", "_pullTokens", "token", "amount", "shouldSellEntireBalance"], "vars": {"allowance": "uint256", "amount": "uint256", "msg.sender": "address", "shouldSellEntireBalance": "bool", "this": "address", "token": "address"}, "loop_info": [], "related_expression": ["not(shouldSellEntireBalance)", "IERC20(token).safeTransferFrom(msg.sender,address(this),amount)"], "related_expression_type": ["Condition", "CallExpression"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["UniswapV2_ZapOut_General_V4_0_1", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["UniswapV2_ZapOut_General_V4_0_1", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["UniswapV2_ZapOut_General_V4_0_1", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["tokensRec--variables"], "modifier": ["stopInEmergency"], "return_expressions": ["tokensRec"], "info": ["UniswapV2_ZapOut_General_V4_0_1", "ZapOut", "toTokenAddress", "fromPoolAddress", "incomingLP", "minTokensRec", "swapTargets", "swapData", "affiliate", "shouldSellEntireBalance"], "vars": {"ETHAddress": "address", "affiliate": "address", "amount0": "uint256", "amount1": "uint256", "fromPoolAddress": "address", "incomingLP": "uint256", "minTokensRec": "uint256", "msg.sender": "address", "shouldSellEntireBalance": "bool", "swapData": "bytes[]", "swapTargets": "address[]", "toTokenAddress": "address", "tokensRec": "uint256", "totalGoodwillPortion": "uint256"}, "loop_info": [], "related_expression": ["tokensRec=_swapTokens(fromPoolAddress,amount0,amount1,toTokenAddress,swapTargets,swapData)", "tokensRec>=minTokensRec", "toTokenAddress==address(0)", "totalGoodwillPortion=_subtractGoodwill(ETHAddress,tokensRec,affiliate,true)", "address(msg.sender).transfer(tokensRec-totalGoodwillPortion)", "tokensRec=tokensRec-totalGoodwillPortion", "zapOut(msg.sender,fromPoolAddress,toTokenAddress,tokensRec)"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "public", "return_vars": ["tokensRec--variables"], "modifier": ["stopInEmergency"], "return_expressions": ["tokensRec"], "info": ["UniswapV2_ZapOut_General_V4_0_1", "ZapOut", "toTokenAddress", "fromPoolAddress", "incomingLP", "minTokensRec", "swapTargets", "swapData", "affiliate", "shouldSellEntireBalance"], "vars": {"ETHAddress": "address", "affiliate": "address", "amount0": "uint256", "amount1": "uint256", "fromPoolAddress": "address", "incomingLP": "uint256", "minTokensRec": "uint256", "msg.sender": "address", "shouldSellEntireBalance": "bool", "swapData": "bytes[]", "swapTargets": "address[]", "toTokenAddress": "address", "tokensRec": "uint256", "totalGoodwillPortion": "uint256"}, "loop_info": [], "related_expression": ["tokensRec=_swapTokens(fromPoolAddress,amount0,amount1,toTokenAddress,swapTargets,swapData)", "tokensRec>=minTokensRec", "not(toTokenAddress==address(0))", "totalGoodwillPortion=_subtractGoodwill(toTokenAddress,tokensRec,affiliate,true)", "IERC20(toTokenAddress).safeTransfer(msg.sender,tokensRec-totalGoodwillPortion)", "tokensRec=tokensRec-totalGoodwillPortion", "zapOut(msg.sender,fromPoolAddress,toTokenAddress,tokensRec)"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition", "AssignmentOperation_=", "CallExpression", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "public", "return_vars": ["minTokensRec--variables", "swapData--variables", "incomingLP--variables", "swapTargets--variables", "affiliate--variables", "toTokenAddress--variables", "fromPoolAddress--variables"], "modifier": ["stopInEmergency"], "return_expressions": ["(ZapOut(toTokenAddress,fromPoolAddress,incomingLP,minTokensRec,swapTargets,swapData,affiliate,false))"], "info": ["UniswapV2_ZapOut_General_V4_0_1", "ZapOutWithPermit", "toTokenAddress", "fromPoolAddress", "incomingLP", "minTokensRec", "permitData", "swapTargets", "swapData", "affiliate"], "vars": {"affiliate": "address", "fromPoolAddress": "address", "incomingLP": "uint256", "minTokensRec": "uint256", "permitData": "bytes", "success": "bool", "swapData": "bytes[]", "swapTargets": "address[]", "toTokenAddress": "address"}, "loop_info": [], "related_expression": ["success"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["amount--variables"], "modifier": [], "return_expressions": ["amount"], "info": ["UniswapV2_ZapOut_General_V4_0_1", "_fillQuote", "fromTokenAddress", "toToken", "amount", "swapTarget", "swapData"], "vars": {"amount": "uint256", "approvedTargets": "mapping(address => bool)", "finalBalance": "uint256", "fromTokenAddress": "address", "initialBalance": "uint256", "success": "bool", "swapData": "bytes", "swapTarget": "address", "toToken": "address", "valueToSend": "uint256", "wethTokenAddress": "address"}, "loop_info": [], "related_expression": ["fromTokenAddress==wethTokenAddress&&toToken==address(0)", "IWETH(wethTokenAddress).withdraw(amount)"], "related_expression_type": ["Condition", "CallExpression"]}, {"visibility": "internal", "return_vars": ["finalBalance--variables"], "modifier": [], "return_expressions": ["finalBalance"], "info": ["UniswapV2_ZapOut_General_V4_0_1", "_fillQuote", "fromTokenAddress", "toToken", "amount", "swapTarget", "swapData"], "vars": {"amount": "uint256", "approvedTargets": "mapping(address => bool)", "finalBalance": "uint256", "fromTokenAddress": "address", "initialBalance": "uint256", "success": "bool", "swapData": "bytes", "swapTarget": "address", "toToken": "address", "valueToSend": "uint256", "wethTokenAddress": "address"}, "loop_info": [], "related_expression": ["not(fromTokenAddress==wethTokenAddress&&toToken==address(0))", "fromTokenAddress==address(0)", "valueToSend=amount", "initialBalance=_getBalance(toToken)", "approvedTargets[swapTarget]", "success", "finalBalance=_getBalance(toToken)-initialBalance", "finalBalance>0"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["finalBalance--variables"], "modifier": [], "return_expressions": ["finalBalance"], "info": ["UniswapV2_ZapOut_General_V4_0_1", "_fillQuote", "fromTokenAddress", "toToken", "amount", "swapTarget", "swapData"], "vars": {"amount": "uint256", "approvedTargets": "mapping(address => bool)", "finalBalance": "uint256", "fromTokenAddress": "address", "initialBalance": "uint256", "success": "bool", "swapData": "bytes", "swapTarget": "address", "toToken": "address", "valueToSend": "uint256", "wethTokenAddress": "address"}, "loop_info": [], "related_expression": ["not(fromTokenAddress==wethTokenAddress&&toToken==address(0))", "not(fromTokenAddress==address(0))", "_approveToken(fromTokenAddress,swapTarget,amount)", "initialBalance=_getBalance(toToken)", "approvedTargets[swapTarget]", "success", "finalBalance=_getBalance(toToken)-initialBalance", "finalBalance>0"], "related_expression_type": ["Condition", "Condition", "CallExpression", "AssignmentOperation_=", "Condition", "Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["ZapBaseV2", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["ZapBaseV2", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["ZapBaseV2", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["ZapOutBaseV3", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["ZapOutBaseV3", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["ZapOutBaseV3", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["allowance--variables"], "modifier": [], "return_expressions": ["allowance"], "info": ["ZapOutBaseV3", "_pullTokens", "token", "amount", "shouldSellEntireBalance"], "vars": {"allowance": "uint256", "amount": "uint256", "msg.sender": "address", "shouldSellEntireBalance": "bool", "this": "address", "token": "address"}, "loop_info": [], "related_expression": ["shouldSellEntireBalance", "Address.isContract(msg.sender)", "allowance=IERC20(token).allowance(msg.sender,address(this))", "IERC20(token).safeTransferFrom(msg.sender,address(this),allowance)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "CallExpression"]}, {"visibility": "internal", "return_vars": ["amount--variables"], "modifier": [], "return_expressions": ["amount"], "info": ["ZapOutBaseV3", "_pullTokens", "token", "amount", "shouldSellEntireBalance"], "vars": {"allowance": "uint256", "amount": "uint256", "msg.sender": "address", "shouldSellEntireBalance": "bool", "this": "address", "token": "address"}, "loop_info": [], "related_expression": ["not(shouldSellEntireBalance)", "IERC20(token).safeTransferFrom(msg.sender,address(this),amount)"], "related_expression_type": ["Condition", "CallExpression"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Ownable", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Ownable", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["Ownable", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["size--variables"], "modifier": [], "return_expressions": ["size>0"], "info": ["Address", "isContract", "account"], "vars": {"account": "address", "size": "uint256"}, "loop_info": [], "related_expression": ["size=extcodesize(uint256)(account)"], "related_expression_type": ["AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCall(target,data,Address:low-levelcallfailed)"], "info": ["Address", "functionCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["errorMessage--variables", "target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,0,errorMessage)"], "info": ["Address", "functionCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["value--variables", "target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,value,Address:low-levelcallwithvaluefailed)"], "info": ["Address", "functionCallWithValue", "target", "data", "value"], "vars": {"data": "bytes", "target": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["success--variables", "returndata--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionCallWithValue", "target", "data", "value", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address", "this": "address", "value": "uint256"}, "loop_info": [], "related_expression": ["address(this).balance>=value", "isContract(target)", "(success,returndata)=target.call{value:value}(data)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionStaticCall(target,data,Address:low-levelstaticcallfailed)"], "info": ["Address", "functionStaticCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["success--variables", "errorMessage--variables", "returndata--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionStaticCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.staticcall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionDelegateCall(target,data,Address:low-leveldelegatecallfailed)"], "info": ["Address", "functionDelegateCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["returndata--variables", "errorMessage--variables", "success--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionDelegateCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.delegatecall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "private", "return_vars": ["returndata--variables"], "modifier": [], "return_expressions": ["returndata"], "info": ["Address", "_verifyCallResult", "success", "returndata", "errorMessage"], "vars": {"errorMessage": "string", "returndata": "bytes", "returndata_size__verifyCallResult_asm_0": "uint256", "success": "bool"}, "loop_info": [], "related_expression": ["success"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Context", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Context", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}]