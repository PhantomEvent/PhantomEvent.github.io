[{"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["GenToken", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["GenToken", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["GenToken", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_name"], "info": ["GenToken", "name"], "vars": {"_name": "string"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_symbol"], "info": ["GenToken", "symbol"], "vars": {"_symbol": "string"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["18"], "info": ["GenToken", "decimals"], "vars": {}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_totalSupply"], "info": ["GenToken", "totalSupply"], "vars": {"_totalSupply": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["account--variables"], "modifier": [], "return_expressions": ["_balances[account]"], "info": ["GenToken", "balanceOf", "account"], "vars": {"_balances": "mapping(address => uint256)", "account": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["GenToken", "transfer", "recipient", "amount"], "vars": {"amount": "uint256", "recipient": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["owner--variables", "spender--variables"], "modifier": [], "return_expressions": ["_allowances[owner][spender]"], "info": ["GenToken", "allowance", "owner", "spender"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "owner": "address", "spender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["GenToken", "approve", "spender", "amount"], "vars": {"amount": "uint256", "spender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["GenToken", "transferFrom", "sender", "recipient", "amount"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "amount": "uint256", "currentAllowance": "uint256", "recipient": "address", "sender": "address"}, "loop_info": [], "related_expression": ["currentAllowance>=amount"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["GenToken", "increaseAllowance", "spender", "addedValue"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "addedValue": "uint256", "spender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["GenToken", "decreaseAllowance", "spender", "subtractedValue"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "currentAllowance": "uint256", "spender": "address", "subtractedValue": "uint256"}, "loop_info": [], "related_expression": ["currentAllowance>=subtractedValue"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["this.onERC721Received.selector"], "info": ["MasterChef", "onERC721Received", "", "", "", ""], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["MasterChef", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["MasterChef", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["MasterChef", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["poolInfo.length"], "info": ["MasterChef", "poolLength"], "vars": {"poolInfo": "MasterChef.PoolInfo[]"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["_pid--variables", "_user--variables"], "modifier": [], "return_expressions": ["_pendingGen(_pid,_user)"], "info": ["MasterChef", "pendingGen", "_pid", "_user"], "vars": {"_pid": "uint256", "_user": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["truePower--variables", "user--variables", "accGenPerPower--variables"], "modifier": [], "return_expressions": ["user.power.mul(accGenPerPower).div(1e12).sub(user.rewardDebt)*truePower/user.power"], "info": ["MasterChef", "_pendingGen", "_pid", "_user"], "vars": {"_pid": "uint256", "_user": "address", "accGenPerPower": "uint256", "block.number": "uint256", "blockAmount": "uint256", "genPerBlock": "uint256", "genReward": "uint256", "lpSupply": "uint256", "msg.sender": "address", "pool": "MasterChef.PoolInfo", "poolInfo": "MasterChef.PoolInfo[]", "powerBonus": "uint256", "proxy": "IProxy", "this": "address", "totalAllocPoint": "uint256", "truePower": "uint256", "user": "MasterChef.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MasterChef.UserInfo))"}, "loop_info": [], "related_expression": ["pool=poolInfo[_pid]", "user=userInfo[_pid][_user]", "accGenPerPower=pool.accGenPerPower", "lpSupply=pool.lpToken.balanceOf(address(this))", "block.number>pool.lastRewardBlock&&lpSupply!=0&&pool.totalPower!=0", "blockAmount=block.number.sub(pool.lastRewardBlock)", "genReward=blockAmount.mul(genPerBlock).mul(pool.allocPoint).div(totalAllocPoint)", "accGenPerPower=accGenPerPower.add(genReward.mul(1e12).div(pool.totalPower))", "(user.lastClaimedBlock<user.lastPoweredBlock)&&(block.number>user.lastPoweredBlock)&&(user.power>0)", "powerBonus=100", "powerBonus+=proxy.getNFTPowerBonus()*(user.lastPoweredBlock-user.lastClaimedBlock)/(block.number-user.lastClaimedBlock)", "powerBonus+=proxy.bonus(msg.sender)", "truePower=user.amount.mul(powerBonus).div(100)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_+=", "AssignmentOperation_+=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["truePower--variables", "user--variables", "accGenPerPower--variables"], "modifier": [], "return_expressions": ["user.power.mul(accGenPerPower).div(1e12).sub(user.rewardDebt)*truePower/user.power"], "info": ["MasterChef", "_pendingGen", "_pid", "_user"], "vars": {"_pid": "uint256", "_user": "address", "accGenPerPower": "uint256", "block.number": "uint256", "blockAmount": "uint256", "genPerBlock": "uint256", "genReward": "uint256", "lpSupply": "uint256", "msg.sender": "address", "pool": "MasterChef.PoolInfo", "poolInfo": "MasterChef.PoolInfo[]", "powerBonus": "uint256", "proxy": "IProxy", "this": "address", "totalAllocPoint": "uint256", "truePower": "uint256", "user": "MasterChef.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MasterChef.UserInfo))"}, "loop_info": [], "related_expression": ["pool=poolInfo[_pid]", "user=userInfo[_pid][_user]", "accGenPerPower=pool.accGenPerPower", "lpSupply=pool.lpToken.balanceOf(address(this))", "not(block.number>pool.lastRewardBlock&&lpSupply!=0&&pool.totalPower!=0)", "(user.lastClaimedBlock<user.lastPoweredBlock)&&(block.number>user.lastPoweredBlock)&&(user.power>0)", "powerBonus=100", "powerBonus+=proxy.getNFTPowerBonus()*(user.lastPoweredBlock-user.lastClaimedBlock)/(block.number-user.lastClaimedBlock)", "powerBonus+=proxy.bonus(msg.sender)", "truePower=user.amount.mul(powerBonus).div(100)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "Condition", "AssignmentOperation_=", "AssignmentOperation_+=", "AssignmentOperation_+=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["user--variables", "accGenPerPower--variables"], "modifier": [], "return_expressions": ["user.power.mul(accGenPerPower).div(1e12).sub(user.rewardDebt)"], "info": ["MasterChef", "_pendingGen", "_pid", "_user"], "vars": {"_pid": "uint256", "_user": "address", "accGenPerPower": "uint256", "block.number": "uint256", "blockAmount": "uint256", "genPerBlock": "uint256", "genReward": "uint256", "lpSupply": "uint256", "msg.sender": "address", "pool": "MasterChef.PoolInfo", "poolInfo": "MasterChef.PoolInfo[]", "powerBonus": "uint256", "proxy": "IProxy", "this": "address", "totalAllocPoint": "uint256", "truePower": "uint256", "user": "MasterChef.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MasterChef.UserInfo))"}, "loop_info": [], "related_expression": ["pool=poolInfo[_pid]", "user=userInfo[_pid][_user]", "accGenPerPower=pool.accGenPerPower", "lpSupply=pool.lpToken.balanceOf(address(this))", "block.number>pool.lastRewardBlock&&lpSupply!=0&&pool.totalPower!=0", "blockAmount=block.number.sub(pool.lastRewardBlock)", "genReward=blockAmount.mul(genPerBlock).mul(pool.allocPoint).div(totalAllocPoint)", "accGenPerPower=accGenPerPower.add(genReward.mul(1e12).div(pool.totalPower))", "not((user.lastClaimedBlock<user.lastPoweredBlock)&&(block.number>user.lastPoweredBlock)&&(user.power>0))"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["user--variables", "accGenPerPower--variables"], "modifier": [], "return_expressions": ["user.power.mul(accGenPerPower).div(1e12).sub(user.rewardDebt)"], "info": ["MasterChef", "_pendingGen", "_pid", "_user"], "vars": {"_pid": "uint256", "_user": "address", "accGenPerPower": "uint256", "block.number": "uint256", "blockAmount": "uint256", "genPerBlock": "uint256", "genReward": "uint256", "lpSupply": "uint256", "msg.sender": "address", "pool": "MasterChef.PoolInfo", "poolInfo": "MasterChef.PoolInfo[]", "powerBonus": "uint256", "proxy": "IProxy", "this": "address", "totalAllocPoint": "uint256", "truePower": "uint256", "user": "MasterChef.UserInfo", "userInfo": "mapping(uint256 => mapping(address => MasterChef.UserInfo))"}, "loop_info": [], "related_expression": ["pool=poolInfo[_pid]", "user=userInfo[_pid][_user]", "accGenPerPower=pool.accGenPerPower", "lpSupply=pool.lpToken.balanceOf(address(this))", "not(block.number>pool.lastRewardBlock&&lpSupply!=0&&pool.totalPower!=0)", "not((user.lastClaimedBlock<user.lastPoweredBlock)&&(block.number>user.lastPoweredBlock)&&(user.power>0))"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["OwnableToken", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["OwnableToken", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["OwnableToken", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_name"], "info": ["OwnableToken", "name"], "vars": {"_name": "string"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_symbol"], "info": ["OwnableToken", "symbol"], "vars": {"_symbol": "string"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["18"], "info": ["OwnableToken", "decimals"], "vars": {}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_totalSupply"], "info": ["OwnableToken", "totalSupply"], "vars": {"_totalSupply": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["account--variables"], "modifier": [], "return_expressions": ["_balances[account]"], "info": ["OwnableToken", "balanceOf", "account"], "vars": {"_balances": "mapping(address => uint256)", "account": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["OwnableToken", "transfer", "recipient", "amount"], "vars": {"amount": "uint256", "recipient": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["owner--variables", "spender--variables"], "modifier": [], "return_expressions": ["_allowances[owner][spender]"], "info": ["OwnableToken", "allowance", "owner", "spender"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "owner": "address", "spender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["OwnableToken", "approve", "spender", "amount"], "vars": {"amount": "uint256", "spender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["OwnableToken", "transferFrom", "sender", "recipient", "amount"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "amount": "uint256", "currentAllowance": "uint256", "recipient": "address", "sender": "address"}, "loop_info": [], "related_expression": ["currentAllowance>=amount"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["OwnableToken", "increaseAllowance", "spender", "addedValue"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "addedValue": "uint256", "spender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["OwnableToken", "decreaseAllowance", "spender", "subtractedValue"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "currentAllowance": "uint256", "spender": "address", "subtractedValue": "uint256"}, "loop_info": [], "related_expression": ["currentAllowance>=subtractedValue"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Ownable", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Ownable", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["Ownable", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["ERC20", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["ERC20", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_name"], "info": ["ERC20", "name"], "vars": {"_name": "string"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_symbol"], "info": ["ERC20", "symbol"], "vars": {"_symbol": "string"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["18"], "info": ["ERC20", "decimals"], "vars": {}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_totalSupply"], "info": ["ERC20", "totalSupply"], "vars": {"_totalSupply": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["account--variables"], "modifier": [], "return_expressions": ["_balances[account]"], "info": ["ERC20", "balanceOf", "account"], "vars": {"_balances": "mapping(address => uint256)", "account": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20", "transfer", "recipient", "amount"], "vars": {"amount": "uint256", "recipient": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["owner--variables", "spender--variables"], "modifier": [], "return_expressions": ["_allowances[owner][spender]"], "info": ["ERC20", "allowance", "owner", "spender"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "owner": "address", "spender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20", "approve", "spender", "amount"], "vars": {"amount": "uint256", "spender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20", "transferFrom", "sender", "recipient", "amount"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "amount": "uint256", "currentAllowance": "uint256", "recipient": "address", "sender": "address"}, "loop_info": [], "related_expression": ["currentAllowance>=amount"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20", "increaseAllowance", "spender", "addedValue"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "addedValue": "uint256", "spender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["ERC20", "decreaseAllowance", "spender", "subtractedValue"], "vars": {"_allowances": "mapping(address => mapping(address => uint256))", "currentAllowance": "uint256", "spender": "address", "subtractedValue": "uint256"}, "loop_info": [], "related_expression": ["currentAllowance>=subtractedValue"], "related_expression_type": ["Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["this.onERC721Received.selector"], "info": ["ERC721Holder", "onERC721Received", "", "", "", ""], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["size--variables"], "modifier": [], "return_expressions": ["size>0"], "info": ["Address", "isContract", "account"], "vars": {"account": "address", "size": "uint256"}, "loop_info": [], "related_expression": ["size=extcodesize(uint256)(account)"], "related_expression_type": ["AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCall(target,data,Address:low-levelcallfailed)"], "info": ["Address", "functionCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,0,errorMessage)"], "info": ["Address", "functionCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["target--variables", "value--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,value,Address:low-levelcallwithvaluefailed)"], "info": ["Address", "functionCallWithValue", "target", "data", "value"], "vars": {"data": "bytes", "target": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["success--variables", "errorMessage--variables", "returndata--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionCallWithValue", "target", "data", "value", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address", "this": "address", "value": "uint256"}, "loop_info": [], "related_expression": ["address(this).balance>=value", "isContract(target)", "(success,returndata)=target.call{value:value}(data)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionStaticCall(target,data,Address:low-levelstaticcallfailed)"], "info": ["Address", "functionStaticCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["returndata--variables", "success--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionStaticCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.staticcall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionDelegateCall(target,data,Address:low-leveldelegatecallfailed)"], "info": ["Address", "functionDelegateCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["success--variables", "returndata--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionDelegateCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.delegatecall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "private", "return_vars": ["returndata--variables"], "modifier": [], "return_expressions": ["returndata"], "info": ["Address", "_verifyCallResult", "success", "returndata", "errorMessage"], "vars": {"errorMessage": "string", "returndata": "bytes", "returndata_size__verifyCallResult_asm_0": "uint256", "success": "bool"}, "loop_info": [], "related_expression": ["success"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Context", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Context", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "tryAdd", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["c=a+b", "c<a"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["(true,c)"], "info": ["SafeMath", "tryAdd", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["c=a+b", "not(c<a)"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "trySub", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b>a"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["(true,a-b)"], "info": ["SafeMath", "trySub", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["not(b>a)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(true,0)"], "info": ["SafeMath", "tryMul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["a==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "tryMul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["not(a==0)", "c=a*b", "c/a!=b"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["(true,c)"], "info": ["SafeMath", "tryMul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["not(a==0)", "c=a*b", "not(c/a!=b)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "tryDiv", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["(true,a/b)"], "info": ["SafeMath", "tryDiv", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["not(b==0)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "tryMod", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["(true,a%b)"], "info": ["SafeMath", "tryMod", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["not(b==0)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a+b"], "info": ["SafeMath", "add", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["a-b"], "info": ["SafeMath", "sub", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a*b"], "info": ["SafeMath", "mul", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["a/b"], "info": ["SafeMath", "div", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a%b"], "info": ["SafeMath", "mod", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a-b"], "info": ["SafeMath", "sub", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b<=a"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a/b"], "info": ["SafeMath", "div", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b>0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a%b"], "info": ["SafeMath", "mod", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b>0"], "related_expression_type": ["Condition"]}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["EnumerableSet", "_add", "set", "value"], "vars": {"set": "EnumerableSet.Set", "value": "bytes32"}, "loop_info": [], "related_expression": ["!_contains(set,value)"], "related_expression_type": ["Condition"]}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["false"], "info": ["EnumerableSet", "_add", "set", "value"], "vars": {"set": "EnumerableSet.Set", "value": "bytes32"}, "loop_info": [], "related_expression": ["not(!_contains(set,value))"], "related_expression_type": ["Condition"]}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["EnumerableSet", "_remove", "set", "value"], "vars": {"lastIndex": "uint256", "lastvalue": "bytes32", "set": "EnumerableSet.Set", "toDeleteIndex": "uint256", "value": "bytes32", "valueIndex": "uint256"}, "loop_info": [], "related_expression": ["valueIndex!=0"], "related_expression_type": ["Condition"]}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["false"], "info": ["EnumerableSet", "_remove", "set", "value"], "vars": {"lastIndex": "uint256", "lastvalue": "bytes32", "set": "EnumerableSet.Set", "toDeleteIndex": "uint256", "value": "bytes32", "valueIndex": "uint256"}, "loop_info": [], "related_expression": ["not(valueIndex!=0)"], "related_expression_type": ["Condition"]}, {"visibility": "private", "return_vars": ["set--variables", "value--variables"], "modifier": [], "return_expressions": ["set._indexes[value]!=0"], "info": ["EnumerableSet", "_contains", "set", "value"], "vars": {"set": "EnumerableSet.Set", "value": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": ["set--variables"], "modifier": [], "return_expressions": ["set._values.length"], "info": ["EnumerableSet", "_length", "set"], "vars": {"set": "EnumerableSet.Set"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": ["index--variables", "set--variables"], "modifier": [], "return_expressions": ["set._values[index]"], "info": ["EnumerableSet", "_at", "set", "index"], "vars": {"index": "uint256", "set": "EnumerableSet.Set"}, "loop_info": [], "related_expression": ["set._values.length>index"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["value--variables", "set--variables"], "modifier": [], "return_expressions": ["_add(set._inner,value)"], "info": ["EnumerableSet", "add", "set", "value"], "vars": {"set": "EnumerableSet.Bytes32Set", "value": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables", "value--variables"], "modifier": [], "return_expressions": ["_remove(set._inner,value)"], "info": ["EnumerableSet", "remove", "set", "value"], "vars": {"set": "EnumerableSet.Bytes32Set", "value": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["value--variables", "set--variables"], "modifier": [], "return_expressions": ["_contains(set._inner,value)"], "info": ["EnumerableSet", "contains", "set", "value"], "vars": {"set": "EnumerableSet.Bytes32Set", "value": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables"], "modifier": [], "return_expressions": ["_length(set._inner)"], "info": ["EnumerableSet", "length", "set"], "vars": {"set": "EnumerableSet.Bytes32Set"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables", "index--variables"], "modifier": [], "return_expressions": ["_at(set._inner,index)"], "info": ["EnumerableSet", "at", "set", "index"], "vars": {"index": "uint256", "set": "EnumerableSet.Bytes32Set"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables", "value--variables"], "modifier": [], "return_expressions": ["_add(set._inner,bytes32(uint256(uint160(value))))"], "info": ["EnumerableSet", "add", "set", "value"], "vars": {"set": "EnumerableSet.AddressSet", "value": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["value--variables", "set--variables"], "modifier": [], "return_expressions": ["_remove(set._inner,bytes32(uint256(uint160(value))))"], "info": ["EnumerableSet", "remove", "set", "value"], "vars": {"set": "EnumerableSet.AddressSet", "value": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables", "value--variables"], "modifier": [], "return_expressions": ["_contains(set._inner,bytes32(uint256(uint160(value))))"], "info": ["EnumerableSet", "contains", "set", "value"], "vars": {"set": "EnumerableSet.AddressSet", "value": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables"], "modifier": [], "return_expressions": ["_length(set._inner)"], "info": ["EnumerableSet", "length", "set"], "vars": {"set": "EnumerableSet.AddressSet"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables", "index--variables"], "modifier": [], "return_expressions": ["address(uint160(uint256(_at(set._inner,index))))"], "info": ["EnumerableSet", "at", "set", "index"], "vars": {"index": "uint256", "set": "EnumerableSet.AddressSet"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables", "value--variables"], "modifier": [], "return_expressions": ["_add(set._inner,bytes32(value))"], "info": ["EnumerableSet", "add", "set", "value"], "vars": {"set": "EnumerableSet.UintSet", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["value--variables", "set--variables"], "modifier": [], "return_expressions": ["_remove(set._inner,bytes32(value))"], "info": ["EnumerableSet", "remove", "set", "value"], "vars": {"set": "EnumerableSet.UintSet", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables", "value--variables"], "modifier": [], "return_expressions": ["_contains(set._inner,bytes32(value))"], "info": ["EnumerableSet", "contains", "set", "value"], "vars": {"set": "EnumerableSet.UintSet", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["set--variables"], "modifier": [], "return_expressions": ["_length(set._inner)"], "info": ["EnumerableSet", "length", "set"], "vars": {"set": "EnumerableSet.UintSet"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["index--variables", "set--variables"], "modifier": [], "return_expressions": ["uint256(_at(set._inner,index))"], "info": ["EnumerableSet", "at", "set", "index"], "vars": {"index": "uint256", "set": "EnumerableSet.UintSet"}, "loop_info": [], "related_expression": [], "related_expression_type": []}]