[{"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["xAppConnectionManager.home()"], "info": ["Router", "_home"], "vars": {"xAppConnectionManager": "XAppConnectionManager"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_potentialReplica--variables"], "modifier": [], "return_expressions": ["xAppConnectionManager.isReplica(_potentialReplica)"], "info": ["Router", "_isReplica", "_potentialReplica"], "vars": {"_potentialReplica": "address", "xAppConnectionManager": "XAppConnectionManager"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["xAppConnectionManager.localDomain()"], "info": ["Router", "_localDomain"], "vars": {"xAppConnectionManager": "XAppConnectionManager"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["Router", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Router", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Router", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["Router", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_router--variables", "_domain--variables"], "modifier": [], "return_expressions": ["remotes[_domain]==_router"], "info": ["Router", "_isRemoteRouter", "_domain", "_router"], "vars": {"_domain": "uint32", "_router": "bytes32", "remotes": "mapping(uint32 => bytes32)"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["XAppConnectionClient", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["XAppConnectionClient", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["XAppConnectionClient", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["XAppConnectionClient", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["xAppConnectionManager.home()"], "info": ["XAppConnectionClient", "_home"], "vars": {"xAppConnectionManager": "XAppConnectionManager"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_potentialReplica--variables"], "modifier": [], "return_expressions": ["xAppConnectionManager.isReplica(_potentialReplica)"], "info": ["XAppConnectionClient", "_isReplica", "_potentialReplica"], "vars": {"_potentialReplica": "address", "xAppConnectionManager": "XAppConnectionManager"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["xAppConnectionManager.localDomain()"], "info": ["XAppConnectionClient", "_localDomain"], "vars": {"xAppConnectionManager": "XAppConnectionManager"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_action--variables"], "modifier": [], "return_expressions": ["isTransfer(_action)||isFastTransfer(_action)"], "info": ["BridgeMessage", "isValidAction", "_action"], "vars": {"_action": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_len--variables"], "modifier": [], "return_expressions": ["_len==TOKEN_ID_LEN+TRANSFER_LEN"], "info": ["BridgeMessage", "isValidMessageLength", "_view"], "vars": {"TOKEN_ID_LEN": "uint256", "TRANSFER_LEN": "uint256", "_len": "uint256", "_view": "bytes29"}, "loop_info": [], "related_expression": ["_len=_view.len()"], "related_expression_type": ["AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["_views--variables"], "modifier": ["typeAssert"], "return_expressions": ["TypedMemView.join(_views)"], "info": ["BridgeMessage", "formatMessage", "_tokenId", "_action"], "vars": {"_action": "bytes29", "_tokenId": "bytes29", "_views": "bytes29[]"}, "loop_info": [], "related_expression": ["typeAssert(_tokenId,Types.TokenId)", "isValidAction(_action)", "_views=newbytes29[](2)", "_views[0]=_tokenId", "_views[1]=_action"], "related_expression_type": ["CallExpression", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["_view--variables"], "modifier": [], "return_expressions": ["BridgeMessage.Types(uint8(_view.typeOf()))"], "info": ["BridgeMessage", "messageType", "_view"], "vars": {"_view": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_type--variables", "_action--variables"], "modifier": [], "return_expressions": ["actionType(_action)==uint8(_type)&&messageType(_action)==_type"], "info": ["BridgeMessage", "isType", "_action", "_type"], "vars": {"_action": "bytes29", "_type": "BridgeMessage.Types"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_action--variables"], "modifier": [], "return_expressions": ["isType(_action,Types.Transfer)"], "info": ["BridgeMessage", "isTransfer", "_action"], "vars": {"_action": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_action--variables"], "modifier": [], "return_expressions": ["isType(_action,Types.FastTransfer)"], "info": ["BridgeMessage", "isFastTransfer", "_action"], "vars": {"_action": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_amnt--variables", "_type--variables", "_detailsHash--variables", "_to--variables"], "modifier": [], "return_expressions": ["abi.encodePacked(_type,_to,_amnt,_detailsHash).ref(0).castTo(uint40(_type))"], "info": ["BridgeMessage", "formatTransfer", "_to", "_amnt", "_detailsHash", "_enableFast"], "vars": {"_amnt": "uint256", "_detailsHash": "bytes32", "_enableFast": "bool", "_to": "bytes32", "_type": "BridgeMessage.Types"}, "loop_info": [], "related_expression": ["_enableFast", "_type=Types.FastTransfer"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["_amnt--variables", "_type--variables", "_detailsHash--variables", "_to--variables"], "modifier": [], "return_expressions": ["abi.encodePacked(_type,_to,_amnt,_detailsHash).ref(0).castTo(uint40(_type))"], "info": ["BridgeMessage", "formatTransfer", "_to", "_amnt", "_detailsHash", "_enableFast"], "vars": {"_amnt": "uint256", "_detailsHash": "bytes32", "_enableFast": "bool", "_to": "bytes32", "_type": "BridgeMessage.Types"}, "loop_info": [], "related_expression": ["not(_enableFast)", "_type=Types.Transfer"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["_tokenId--variables"], "modifier": [], "return_expressions": ["formatTokenId(_tokenId.domain,_tokenId.id)"], "info": ["BridgeMessage", "formatTokenId", "_tokenId"], "vars": {"_tokenId": "BridgeMessage.TokenId"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_domain--variables", "_id--variables"], "modifier": [], "return_expressions": ["abi.encodePacked(_domain,_id).ref(0).castTo(uint40(Types.TokenId))"], "info": ["BridgeMessage", "formatTokenId", "_domain", "_id"], "vars": {"_domain": "uint32", "_id": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_name--variables", "_decimals--variables", "_symbol--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(bytes(_name).length,_name,bytes(_symbol).length,_symbol,_decimals))"], "info": ["BridgeMessage", "getDetailsHash", "_name", "_symbol", "_decimals"], "vars": {"TMP_123": "bytes", "TMP_124": "bytes", "_decimals": "uint8", "_name": "string", "_symbol": "string"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_views--variables"], "modifier": [], "return_expressions": ["TypedMemView.joinKeccak(_views)"], "info": ["BridgeMessage", "getPreFillId", "_origin", "_nonce", "_tokenId", "_action"], "vars": {"_action": "bytes29", "_nonce": "uint32", "_origin": "uint32", "_tokenId": "bytes29", "_views": "bytes29[]"}, "loop_info": [], "related_expression": ["_views=newbytes29[](3)", "_views[0]=abi.encodePacked(_origin,_nonce).ref(0)", "_views[1]=_tokenId", "_views[2]=_action"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["_tokenId--variables"], "modifier": ["typeAssert"], "return_expressions": ["uint32(_tokenId.indexUint(0,4))"], "info": ["BridgeMessage", "domain", "_tokenId"], "vars": {"_tokenId": "bytes29"}, "loop_info": [], "related_expression": ["typeAssert(_tokenId,Types.TokenId)"], "related_expression_type": ["CallExpression"]}, {"visibility": "internal", "return_vars": ["_tokenId--variables"], "modifier": ["typeAssert"], "return_expressions": ["_tokenId.index(4,32)"], "info": ["BridgeMessage", "id", "_tokenId"], "vars": {"_tokenId": "bytes29"}, "loop_info": [], "related_expression": ["typeAssert(_tokenId,Types.TokenId)"], "related_expression_type": ["CallExpression"]}, {"visibility": "internal", "return_vars": ["_tokenId--variables"], "modifier": ["typeAssert"], "return_expressions": ["_tokenId.indexAddress(16)"], "info": ["BridgeMessage", "evmId", "_tokenId"], "vars": {"_tokenId": "bytes29"}, "loop_info": [], "related_expression": ["typeAssert(_tokenId,Types.TokenId)"], "related_expression_type": ["CallExpression"]}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["uint8(_message.indexUint(TOKEN_ID_LEN,1))"], "info": ["BridgeMessage", "msgType", "_message"], "vars": {"TOKEN_ID_LEN": "uint256", "_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_action--variables"], "modifier": [], "return_expressions": ["uint8(_action.indexUint(0,1))"], "info": ["BridgeMessage", "actionType", "_action"], "vars": {"_action": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_transferAction--variables"], "modifier": [], "return_expressions": ["_transferAction.index(1,32)"], "info": ["BridgeMessage", "recipient", "_transferAction"], "vars": {"_transferAction": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_transferAction--variables"], "modifier": [], "return_expressions": ["_transferAction.indexAddress(13)"], "info": ["BridgeMessage", "evmRecipient", "_transferAction"], "vars": {"_transferAction": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_transferAction--variables"], "modifier": [], "return_expressions": ["_transferAction.indexUint(33,32)"], "info": ["BridgeMessage", "amnt", "_transferAction"], "vars": {"_transferAction": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_transferAction--variables"], "modifier": [], "return_expressions": ["_transferAction.index(65,32)"], "info": ["BridgeMessage", "detailsHash", "_transferAction"], "vars": {"_transferAction": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": ["typeAssert"], "return_expressions": ["_message.slice(0,TOKEN_ID_LEN,uint40(Types.TokenId))"], "info": ["BridgeMessage", "tokenId", "_message"], "vars": {"TOKEN_ID_LEN": "uint256", "_message": "bytes29"}, "loop_info": [], "related_expression": ["typeAssert(_message,Types.Message)"], "related_expression_type": ["CallExpression"]}, {"visibility": "internal", "return_vars": ["_message--variables", "_type--variables", "_actionLen--variables"], "modifier": ["typeAssert"], "return_expressions": ["_message.slice(TOKEN_ID_LEN,_actionLen,_type)"], "info": ["BridgeMessage", "action", "_message"], "vars": {"TOKEN_ID_LEN": "uint256", "_actionLen": "uint256", "_message": "bytes29", "_type": "uint40"}, "loop_info": [], "related_expression": ["typeAssert(_message,Types.Message)", "_actionLen=_message.len()-TOKEN_ID_LEN", "_type=uint40(msgType(_message))"], "related_expression_type": ["CallExpression", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["_message.castTo(uint40(Types.Message))"], "info": ["BridgeMessage", "tryAsMessage", "_message"], "vars": {"_message": "bytes29"}, "loop_info": [], "related_expression": ["isValidMessageLength(_message)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["TypedMemView.nullView()"], "info": ["BridgeMessage", "tryAsMessage", "_message"], "vars": {"_message": "bytes29"}, "loop_info": [], "related_expression": ["not(isValidMessageLength(_message))"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["_view--variables"], "modifier": [], "return_expressions": ["tryAsMessage(_view).assertValid()"], "info": ["BridgeMessage", "mustBeMessage", "_view"], "vars": {"_view": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_router--variables", "_domain--variables"], "modifier": [], "return_expressions": ["remotes[_domain]==_router"], "info": ["BridgeRouter", "_isRemoteRouter", "_domain", "_router"], "vars": {"_domain": "uint32", "_router": "bytes32", "remotes": "mapping(uint32 => bytes32)"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["xAppConnectionManager.home()"], "info": ["BridgeRouter", "_home"], "vars": {"xAppConnectionManager": "XAppConnectionManager"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_potentialReplica--variables"], "modifier": [], "return_expressions": ["xAppConnectionManager.isReplica(_potentialReplica)"], "info": ["BridgeRouter", "_isReplica", "_potentialReplica"], "vars": {"_potentialReplica": "address", "xAppConnectionManager": "XAppConnectionManager"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["xAppConnectionManager.localDomain()"], "info": ["BridgeRouter", "_localDomain"], "vars": {"xAppConnectionManager": "XAppConnectionManager"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["BridgeRouter", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["BridgeRouter", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["BridgeRouter", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["BridgeRouter", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["XAppConnectionClient._localDomain()"], "info": ["BridgeRouter", "_localDomain"], "vars": {}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_origin--variables", "_nonce--variables"], "modifier": [], "return_expressions": ["(uint64(_origin)<<32)|_nonce"], "info": ["BridgeRouter", "_originAndNonce", "_origin", "_nonce"], "vars": {"_nonce": "uint32", "_origin": "uint32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_homeDomain--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(_homeDomain,NOMAD))"], "info": ["Home", "_homeDomainHash", "_homeDomain"], "vars": {"_homeDomain": "uint32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_digest--variables", "_signature--variables"], "modifier": [], "return_expressions": ["(ECDSA.recover(_digest,_signature)==updater)"], "info": ["Home", "_isUpdaterSignature", "_oldRoot", "_newRoot", "_signature"], "vars": {"_digest": "bytes32", "_newRoot": "bytes32", "_oldRoot": "bytes32", "_signature": "bytes", "updater": "address"}, "loop_info": [], "related_expression": ["_digest=keccak256(bytes)(abi.encodePacked(homeDomainHash(),_oldRoot,_newRoot))", "_digest=ECDSA.toEthSignedMessageHash(_digest)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["Home", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Home", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Home", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["Home", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["tree.root()"], "info": ["Home", "root"], "vars": {"tree": "MerkleLib.Tree"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["tree.count"], "info": ["Home", "count"], "vars": {"tree": "MerkleLib.Tree"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["queue.length()"], "info": ["Home", "queueLength"], "vars": {"queue": "QueueLib.Queue"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["_item--variables"], "modifier": [], "return_expressions": ["queue.contains(_item)"], "info": ["Home", "queueContains", "_item"], "vars": {"_item": "bytes32", "queue": "QueueLib.Queue"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["queue.lastItem()"], "info": ["Home", "queueEnd"], "vars": {"queue": "QueueLib.Queue"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_homeDomainHash(localDomain)"], "info": ["Home", "homeDomainHash"], "vars": {"localDomain": "uint32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": ["notFailed"], "return_expressions": ["true"], "info": ["Home", "improperUpdate", "_oldRoot", "_newRoot", "_signature"], "vars": {"_newRoot": "bytes32", "_oldRoot": "bytes32", "_signature": "bytes", "committedRoot": "bytes32", "queue": "QueueLib.Queue"}, "loop_info": [], "related_expression": ["_isUpdaterSignature(_oldRoot,_newRoot,_signature)", "_oldRoot==committedRoot", "!queue.contains(_newRoot)"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "public", "return_vars": [], "modifier": ["notFailed"], "return_expressions": ["false"], "info": ["Home", "improperUpdate", "_oldRoot", "_newRoot", "_signature"], "vars": {"_newRoot": "bytes32", "_oldRoot": "bytes32", "_signature": "bytes", "committedRoot": "bytes32", "queue": "QueueLib.Queue"}, "loop_info": [], "related_expression": ["_isUpdaterSignature(_oldRoot,_newRoot,_signature)", "_oldRoot==committedRoot", "not(!queue.contains(_newRoot))"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["_destination--variables", "_nonce--variables"], "modifier": [], "return_expressions": ["(uint64(_destination)<<32)|_nonce"], "info": ["Home", "_destinationAndNonce", "_destination", "_nonce"], "vars": {"_destination": "uint32", "_nonce": "uint32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["tree.root()"], "info": ["MerkleTreeManager", "root"], "vars": {"tree": "MerkleLib.Tree"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["tree.count"], "info": ["MerkleTreeManager", "count"], "vars": {"tree": "MerkleLib.Tree"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["NomadBase", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["NomadBase", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["NomadBase", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["NomadBase", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_homeDomain--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(_homeDomain,NOMAD))"], "info": ["NomadBase", "_homeDomainHash", "_homeDomain"], "vars": {"_homeDomain": "uint32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_digest--variables", "_signature--variables"], "modifier": [], "return_expressions": ["(ECDSA.recover(_digest,_signature)==updater)"], "info": ["NomadBase", "_isUpdaterSignature", "_oldRoot", "_newRoot", "_signature"], "vars": {"_digest": "bytes32", "_newRoot": "bytes32", "_oldRoot": "bytes32", "_signature": "bytes", "updater": "address"}, "loop_info": [], "related_expression": ["_digest=keccak256(bytes)(abi.encodePacked(homeDomainHash(),_oldRoot,_newRoot))", "_digest=ECDSA.toEthSignedMessageHash(_digest)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["QueueManager", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["queue.length()"], "info": ["QueueManager", "queueLength"], "vars": {"queue": "QueueLib.Queue"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["_item--variables"], "modifier": [], "return_expressions": ["queue.contains(_item)"], "info": ["QueueManager", "queueContains", "_item"], "vars": {"_item": "bytes32", "queue": "QueueLib.Queue"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["queue.lastItem()"], "info": ["QueueManager", "queueEnd"], "vars": {"queue": "QueueLib.Queue"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_homeDomain--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(_homeDomain,NOMAD))"], "info": ["Replica", "_homeDomainHash", "_homeDomain"], "vars": {"_homeDomain": "uint32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_digest--variables", "_signature--variables"], "modifier": [], "return_expressions": ["(ECDSA.recover(_digest,_signature)==updater)"], "info": ["Replica", "_isUpdaterSignature", "_oldRoot", "_newRoot", "_signature"], "vars": {"_digest": "bytes32", "_newRoot": "bytes32", "_oldRoot": "bytes32", "_signature": "bytes", "updater": "address"}, "loop_info": [], "related_expression": ["_digest=keccak256(bytes)(abi.encodePacked(homeDomainHash(),_oldRoot,_newRoot))", "_digest=ECDSA.toEthSignedMessageHash(_digest)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["Replica", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Replica", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Replica", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["Replica", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["false"], "info": ["Replica", "acceptableRoot", "_root"], "vars": {"_root": "bytes32", "_time": "uint256", "block.timestamp": "uint256", "confirmAt": "mapping(bytes32 => uint256)"}, "loop_info": [], "related_expression": ["_time=confirmAt[_root]", "_time==0"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "public", "return_vars": ["_time--variables"], "modifier": [], "return_expressions": ["block.timestamp>=_time"], "info": ["Replica", "acceptableRoot", "_root"], "vars": {"_root": "bytes32", "_time": "uint256", "block.timestamp": "uint256", "confirmAt": "mapping(bytes32 => uint256)"}, "loop_info": [], "related_expression": ["_time=confirmAt[_root]", "not(_time==0)"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["Replica", "prove", "_leaf", "_proof", "_index"], "vars": {"_calculatedRoot": "bytes32", "_index": "uint256", "_leaf": "bytes32", "_proof": "bytes32[32]", "messages": "mapping(bytes32 => Replica.MessageStatus)"}, "loop_info": [], "related_expression": ["messages[_leaf]==MessageStatus.None", "acceptableRoot(_calculatedRoot)"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["false"], "info": ["Replica", "prove", "_leaf", "_proof", "_index"], "vars": {"_calculatedRoot": "bytes32", "_index": "uint256", "_leaf": "bytes32", "_proof": "bytes32[32]", "messages": "mapping(bytes32 => Replica.MessageStatus)"}, "loop_info": [], "related_expression": ["messages[_leaf]==MessageStatus.None", "not(acceptableRoot(_calculatedRoot))"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_homeDomainHash(remoteDomain)"], "info": ["Replica", "homeDomainHash"], "vars": {"remoteDomain": "uint32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["XAppConnectionManager", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["XAppConnectionManager", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["XAppConnectionManager", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": [], "modifier": [], "return_expressions": ["home.localDomain()"], "info": ["XAppConnectionManager", "localDomain"], "vars": {"home": "Home"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "external", "return_vars": ["_watcher--variables", "_domain--variables"], "modifier": [], "return_expressions": ["watcherPermissions[_watcher][_domain]"], "info": ["XAppConnectionManager", "watcherPermission", "_watcher", "_domain"], "vars": {"_domain": "uint32", "_watcher": "address", "watcherPermissions": "mapping(address => mapping(uint32 => bool))"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": ["_replica--variables"], "modifier": [], "return_expressions": ["replicaToDomain[_replica]!=0"], "info": ["XAppConnectionManager", "isReplica", "_replica"], "vars": {"_replica": "address", "replicaToDomain": "mapping(address => uint32)"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_signature--variables", "_digest--variables"], "modifier": [], "return_expressions": ["ECDSA.recover(_digest,_signature)"], "info": ["XAppConnectionManager", "_recoverWatcherFromSig", "_domain", "_replica", "_updater", "_signature"], "vars": {"_digest": "bytes32", "_domain": "uint32", "_homeDomainHash": "bytes32", "_replica": "bytes32", "_signature": "bytes", "_updater": "bytes32"}, "loop_info": [], "related_expression": ["_homeDomainHash=Replica(TypeCasts.bytes32ToAddress(_replica)).homeDomainHash()", "_digest=keccak256(bytes)(abi.encodePacked(_homeDomainHash,_domain,_updater))", "_digest=ECDSA.toEthSignedMessageHash(_digest)"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["_tree--variables"], "modifier": [], "return_expressions": ["rootWithCtx(_tree,zeroHashes())"], "info": ["MerkleLib", "root", "_tree"], "vars": {"_tree": "MerkleLib.Tree"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_sender--variables", "_destinationDomain--variables", "_originDomain--variables", "_recipient--variables", "_messageBody--variables", "_nonce--variables"], "modifier": [], "return_expressions": ["abi.encodePacked(_originDomain,_sender,_nonce,_destinationDomain,_recipient,_messageBody)"], "info": ["Message", "formatMessage", "_originDomain", "_sender", "_nonce", "_destinationDomain", "_recipient", "_messageBody"], "vars": {"_destinationDomain": "uint32", "_messageBody": "bytes", "_nonce": "uint32", "_originDomain": "uint32", "_recipient": "bytes32", "_sender": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_destination--variables", "_nonce--variables", "_sender--variables", "_body--variables", "_origin--variables", "_recipient--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(formatMessage(_origin,_sender,_nonce,_destination,_recipient,_body))"], "info": ["Message", "messageHash", "_origin", "_sender", "_nonce", "_destination", "_recipient", "_body"], "vars": {"_body": "bytes", "_destination": "uint32", "_nonce": "uint32", "_origin": "uint32", "_recipient": "bytes32", "_sender": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["uint32(_message.indexUint(0,4))"], "info": ["Message", "origin", "_message"], "vars": {"_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["_message.index(4,32)"], "info": ["Message", "sender", "_message"], "vars": {"_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["uint32(_message.indexUint(36,4))"], "info": ["Message", "nonce", "_message"], "vars": {"_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["uint32(_message.indexUint(40,4))"], "info": ["Message", "destination", "_message"], "vars": {"_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["_message.index(44,32)"], "info": ["Message", "recipient", "_message"], "vars": {"_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["TypeCasts.bytes32ToAddress(recipient(_message))"], "info": ["Message", "recipientAddress", "_message"], "vars": {"_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["_message.slice(PREFIX_LENGTH,_message.len()-PREFIX_LENGTH,0)"], "info": ["Message", "body", "_message"], "vars": {"PREFIX_LENGTH": "uint256", "_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_message--variables"], "modifier": [], "return_expressions": ["messageHash(origin(_message),sender(_message),nonce(_message),destination(_message),recipient(_message),TypedMemView.clone(body(_message)))"], "info": ["Message", "leaf", "_message"], "vars": {"_message": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_items--variables"], "modifier": [], "return_expressions": ["_items"], "info": ["QueueLib", "dequeue", "_q", "_number"], "vars": {"_first": "uint128", "_items": "bytes32[]", "_last": "uint128", "_number": "uint256", "_q": "QueueLib.Queue", "i": "uint256"}, "loop_info": [5, 9], "related_expression": ["_last=_q.last", "_first=_q.first", "_length(_last,_first)>=_number", "_items=newbytes32[](_number)", "i=0", "_items[i]=_q.queue[_first]", "delete_q.queue[_first]", "_first++", "i++", "i<_number", "_q.first=_first"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "AssignmentOperation_=", "Expression", "Expression", "Expression", "Condition", "AssignmentOperation_="], "isloop": true}, {"visibility": "internal", "return_vars": ["_items--variables"], "modifier": [], "return_expressions": ["_items"], "info": ["QueueLib", "dequeue", "_q", "_number"], "vars": {"_first": "uint128", "_items": "bytes32[]", "_last": "uint128", "_number": "uint256", "_q": "QueueLib.Queue", "i": "uint256"}, "loop_info": [5, 5], "related_expression": ["_last=_q.last", "_first=_q.first", "_length(_last,_first)>=_number", "_items=newbytes32[](_number)", "i=0", "not(i<_number)", "_q.first=_first"], "related_expression_type": ["AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_=", "AssignmentOperation_=", "Condition", "AssignmentOperation_="], "isloop": true}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["QueueLib", "contains", "_q", "_item"], "vars": {"_item": "bytes32", "_q": "QueueLib.Queue", "i": "uint256"}, "loop_info": [1], "related_expression": ["i=_q.first", "i++", "i<=_q.last", "_q.queue[i]==_item", "_q.queue[i]==_item"], "related_expression_type": ["AssignmentOperation_=", "Expression", "Condition", "Condition", "Condition"], "isloop": true}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["QueueLib", "contains", "_q", "_item"], "vars": {"_item": "bytes32", "_q": "QueueLib.Queue", "i": "uint256"}, "loop_info": [1], "related_expression": ["i=_q.first", "i<=_q.last", "i++", "i<=_q.last", "_q.queue[i]==_item"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Expression", "Condition", "Condition"], "isloop": true}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["true"], "info": ["QueueLib", "contains", "_q", "_item"], "vars": {"_item": "bytes32", "_q": "QueueLib.Queue", "i": "uint256"}, "loop_info": [1], "related_expression": ["i=_q.first", "i<=_q.last", "_q.queue[i]==_item"], "related_expression_type": ["AssignmentOperation_=", "Condition", "Condition"], "isloop": true}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["false"], "info": ["QueueLib", "contains", "_q", "_item"], "vars": {"_item": "bytes32", "_q": "QueueLib.Queue", "i": "uint256"}, "loop_info": [1, 3], "related_expression": ["i=_q.first", "i++", "i<=_q.last", "not(_q.queue[i]==_item)"], "related_expression_type": ["AssignmentOperation_=", "Expression", "Condition", "Condition"], "isloop": true}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["false"], "info": ["QueueLib", "contains", "_q", "_item"], "vars": {"_item": "bytes32", "_q": "QueueLib.Queue", "i": "uint256"}, "loop_info": [1, 1], "related_expression": ["i=_q.first", "not(i<=_q.last)"], "related_expression_type": ["AssignmentOperation_=", "Condition"], "isloop": true}, {"visibility": "internal", "return_vars": ["_q--variables"], "modifier": [], "return_expressions": ["_q.queue[_q.last]"], "info": ["QueueLib", "lastItem", "_q"], "vars": {"_q": "QueueLib.Queue"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_q--variables"], "modifier": [], "return_expressions": ["_q.last<_q.first"], "info": ["QueueLib", "isEmpty", "_q"], "vars": {"_q": "QueueLib.Queue"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_last--variables", "_first--variables"], "modifier": [], "return_expressions": ["_length(_last,_first)"], "info": ["QueueLib", "length", "_q"], "vars": {"_first": "uint128", "_last": "uint128", "_q": "QueueLib.Queue"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_first--variables", "_last--variables"], "modifier": [], "return_expressions": ["uint256(_last+1-_first)"], "info": ["QueueLib", "_length", "_last", "_first"], "vars": {"_first": "uint128", "_last": "uint128"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_addr--variables"], "modifier": [], "return_expressions": ["bytes32(uint256(uint160(_addr)))"], "info": ["TypeCasts", "addressToBytes32", "_addr"], "vars": {"_addr": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_buf--variables"], "modifier": [], "return_expressions": ["address(uint160(uint256(_buf)))"], "info": ["TypeCasts", "bytes32ToAddress", "_buf"], "vars": {"_buf": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["OwnableUpgradeable", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["OwnableUpgradeable", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["OwnableUpgradeable", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["OwnableUpgradeable", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["Initializable", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["size--variables"], "modifier": [], "return_expressions": ["size>0"], "info": ["AddressUpgradeable", "isContract", "account"], "vars": {"account": "address", "size": "uint256"}, "loop_info": [], "related_expression": ["size=extcodesize(uint256)(account)"], "related_expression_type": ["AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionCall(target,data,Address:low-levelcallfailed)"], "info": ["AddressUpgradeable", "functionCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["errorMessage--variables", "target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,0,errorMessage)"], "info": ["AddressUpgradeable", "functionCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["value--variables", "target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,value,Address:low-levelcallwithvaluefailed)"], "info": ["AddressUpgradeable", "functionCallWithValue", "target", "data", "value"], "vars": {"data": "bytes", "target": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["success--variables", "returndata--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["AddressUpgradeable", "functionCallWithValue", "target", "data", "value", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address", "this": "address", "value": "uint256"}, "loop_info": [], "related_expression": ["address(this).balance>=value", "isContract(target)", "(success,returndata)=target.call{value:value}(data)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionStaticCall(target,data,Address:low-levelstaticcallfailed)"], "info": ["AddressUpgradeable", "functionStaticCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["errorMessage--variables", "returndata--variables", "success--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["AddressUpgradeable", "functionStaticCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.staticcall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "private", "return_vars": ["returndata--variables"], "modifier": [], "return_expressions": ["returndata"], "info": ["AddressUpgradeable", "_verifyCallResult", "success", "returndata", "errorMessage"], "vars": {"errorMessage": "string", "returndata": "bytes", "returndata_size__verifyCallResult_asm_0": "uint256", "success": "bool"}, "loop_info": [], "related_expression": ["success"], "related_expression_type": ["Condition"]}, {"visibility": "private", "return_vars": [], "modifier": [], "return_expressions": ["!AddressUpgradeable.isContract(address(this))"], "info": ["ContextUpgradeable", "_isConstructor"], "vars": {"this": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["ContextUpgradeable", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["ContextUpgradeable", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Ownable", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Ownable", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "public", "return_vars": [], "modifier": [], "return_expressions": ["_owner"], "info": ["Ownable", "owner"], "vars": {"_owner": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["v--variables", "hash--variables", "s--variables", "r--variables"], "modifier": [], "return_expressions": ["recover(hash,v,r,s)"], "info": ["ECDSA", "recover", "hash", "signature"], "vars": {"hash": "bytes32", "r": "bytes32", "s": "bytes32", "signature": "bytes", "v": "uint8"}, "loop_info": [], "related_expression": ["signature.length!=65"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["v--variables", "hash--variables", "s--variables", "r--variables"], "modifier": [], "return_expressions": ["recover(hash,v,r,s)"], "info": ["ECDSA", "recover", "hash", "signature"], "vars": {"hash": "bytes32", "r": "bytes32", "s": "bytes32", "signature": "bytes", "v": "uint8"}, "loop_info": [], "related_expression": ["not(signature.length!=65)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["signer--variables"], "modifier": [], "return_expressions": ["signer"], "info": ["ECDSA", "recover", "hash", "v", "r", "s"], "vars": {"hash": "bytes32", "r": "bytes32", "s": "bytes32", "signer": "address", "v": "uint8"}, "loop_info": [], "related_expression": ["uint256(s)<=0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0", "v==27||v==28", "signer=ecrecover(bytes32,uint8,bytes32,bytes32)(hash,v,r,s)", "signer!=address(0)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["hash--variables"], "modifier": [], "return_expressions": ["keccak256(bytes)(abi.encodePacked(\u0019EthereumSignedMessage:\n32,hash))"], "info": ["ECDSA", "toEthSignedMessageHash", "hash"], "vars": {"hash": "bytes32"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "tryAdd", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["c=a+b", "c<a"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["(true,c)"], "info": ["SafeMath", "tryAdd", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["c=a+b", "not(c<a)"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "trySub", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b>a"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["(true,a-b)"], "info": ["SafeMath", "trySub", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["not(b>a)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(true,0)"], "info": ["SafeMath", "tryMul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["a==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "tryMul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["not(a==0)", "c=a*b", "c/a!=b"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["(true,c)"], "info": ["SafeMath", "tryMul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["not(a==0)", "c=a*b", "not(c/a!=b)"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "tryDiv", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["(true,a/b)"], "info": ["SafeMath", "tryDiv", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["not(b==0)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["(false,0)"], "info": ["SafeMath", "tryMod", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["(true,a%b)"], "info": ["SafeMath", "tryMod", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["not(b==0)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "add", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["c=a+b", "c>=a"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a-b"], "info": ["SafeMath", "sub", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b<=a"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0"], "info": ["SafeMath", "mul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["a==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "mul", "a", "b"], "vars": {"a": "uint256", "b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["not(a==0)", "c=a*b", "c/a==b"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a/b"], "info": ["SafeMath", "div", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b>0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a%b"], "info": ["SafeMath", "mod", "a", "b"], "vars": {"a": "uint256", "b": "uint256"}, "loop_info": [], "related_expression": ["b>0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["a--variables", "b--variables"], "modifier": [], "return_expressions": ["a-b"], "info": ["SafeMath", "sub", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b<=a"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["a/b"], "info": ["SafeMath", "div", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b>0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["b--variables", "a--variables"], "modifier": [], "return_expressions": ["a%b"], "info": ["SafeMath", "mod", "a", "b", "errorMessage"], "vars": {"a": "uint256", "b": "uint256", "errorMessage": "string"}, "loop_info": [], "related_expression": ["b>0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["size--variables"], "modifier": [], "return_expressions": ["size>0"], "info": ["Address", "isContract", "account"], "vars": {"account": "address", "size": "uint256"}, "loop_info": [], "related_expression": ["size=extcodesize(uint256)(account)"], "related_expression_type": ["AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCall(target,data,Address:low-levelcallfailed)"], "info": ["Address", "functionCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["target--variables", "errorMessage--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,0,errorMessage)"], "info": ["Address", "functionCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["value--variables", "target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionCallWithValue(target,data,value,Address:low-levelcallwithvaluefailed)"], "info": ["Address", "functionCallWithValue", "target", "data", "value"], "vars": {"data": "bytes", "target": "address", "value": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["returndata--variables", "errorMessage--variables", "success--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionCallWithValue", "target", "data", "value", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address", "this": "address", "value": "uint256"}, "loop_info": [], "related_expression": ["address(this).balance>=value", "isContract(target)", "(success,returndata)=target.call{value:value}(data)"], "related_expression_type": ["Condition", "Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["data--variables", "target--variables"], "modifier": [], "return_expressions": ["functionStaticCall(target,data,Address:low-levelstaticcallfailed)"], "info": ["Address", "functionStaticCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["returndata--variables", "success--variables", "errorMessage--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionStaticCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.staticcall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["target--variables", "data--variables"], "modifier": [], "return_expressions": ["functionDelegateCall(target,data,Address:low-leveldelegatecallfailed)"], "info": ["Address", "functionDelegateCall", "target", "data"], "vars": {"data": "bytes", "target": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["success--variables", "errorMessage--variables", "returndata--variables"], "modifier": [], "return_expressions": ["_verifyCallResult(success,returndata,errorMessage)"], "info": ["Address", "functionDelegateCall", "target", "data", "errorMessage"], "vars": {"data": "bytes", "errorMessage": "string", "returndata": "bytes", "success": "bool", "target": "address"}, "loop_info": [], "related_expression": ["isContract(target)", "(success,returndata)=target.delegatecall(data)"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "private", "return_vars": ["returndata--variables"], "modifier": [], "return_expressions": ["returndata"], "info": ["Address", "_verifyCallResult", "success", "returndata", "errorMessage"], "vars": {"errorMessage": "string", "returndata": "bytes", "returndata_size__verifyCallResult_asm_0": "uint256", "success": "bool"}, "loop_info": [], "related_expression": ["success"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.sender"], "info": ["Context", "_msgSender"], "vars": {"msg.sender": "address"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["msg.data"], "info": ["Context", "_msgData"], "vars": {"msg.data": "bytes"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0"], "info": ["SafeMath", "mul", "_a", "_b"], "vars": {"_a": "uint256", "_b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["_a==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "mul", "_a", "_b"], "vars": {"_a": "uint256", "_b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["not(_a==0)", "c=_a*_b", "c/_a==_b"], "related_expression_type": ["Condition", "AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": ["_a--variables", "_b--variables"], "modifier": [], "return_expressions": ["_a/_b"], "info": ["SafeMath", "div", "_a", "_b"], "vars": {"_a": "uint256", "_b": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_a--variables", "_b--variables"], "modifier": [], "return_expressions": ["_a-_b"], "info": ["SafeMath", "sub", "_a", "_b"], "vars": {"_a": "uint256", "_b": "uint256"}, "loop_info": [], "related_expression": ["_b<=_a"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["c--variables"], "modifier": [], "return_expressions": ["c"], "info": ["SafeMath", "add", "_a", "_b"], "vars": {"_a": "uint256", "_b": "uint256", "c": "uint256"}, "loop_info": [], "related_expression": ["c=_a+_b", "c>=_a"], "related_expression_type": ["AssignmentOperation_=", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x30"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["_nibble==0xf0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x31"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "_nibble==0xf1"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x32"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "_nibble==0xf2"], "related_expression_type": ["Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x33"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "_nibble==0xf3"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x34"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "_nibble==0xf4"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x35"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "_nibble==0xf5"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x36"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "_nibble==0xf6"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x37"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "_nibble==0xf7"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x38"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "not(_nibble==0xf7)", "_nibble==0xf8"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x39"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "not(_nibble==0xf7)", "not(_nibble==0xf8)", "_nibble==0xf9"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x61"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "not(_nibble==0xf7)", "not(_nibble==0xf8)", "not(_nibble==0xf9)", "_nibble==0xfa"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x62"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "not(_nibble==0xf7)", "not(_nibble==0xf8)", "not(_nibble==0xf9)", "not(_nibble==0xfa)", "_nibble==0xfb"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x63"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "not(_nibble==0xf7)", "not(_nibble==0xf8)", "not(_nibble==0xf9)", "not(_nibble==0xfa)", "not(_nibble==0xfb)", "_nibble==0xfc"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x64"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "not(_nibble==0xf7)", "not(_nibble==0xf8)", "not(_nibble==0xf9)", "not(_nibble==0xfa)", "not(_nibble==0xfb)", "not(_nibble==0xfc)", "_nibble==0xfd"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x65"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "not(_nibble==0xf7)", "not(_nibble==0xf8)", "not(_nibble==0xf9)", "not(_nibble==0xfa)", "not(_nibble==0xfb)", "not(_nibble==0xfc)", "not(_nibble==0xfd)", "_nibble==0xfe"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["0x66"], "info": ["TypedMemView", "nibbleHex", "_b"], "vars": {"_b": "uint8", "_nibble": "uint8"}, "loop_info": [], "related_expression": ["not(_nibble==0xf0)", "not(_nibble==0xf1)", "not(_nibble==0xf2)", "not(_nibble==0xf3)", "not(_nibble==0xf4)", "not(_nibble==0xf5)", "not(_nibble==0xf6)", "not(_nibble==0xf7)", "not(_nibble==0xf8)", "not(_nibble==0xf9)", "not(_nibble==0xfa)", "not(_nibble==0xfb)", "not(_nibble==0xfc)", "not(_nibble==0xfd)", "not(_nibble==0xfe)", "_nibble==0xff"], "related_expression_type": ["Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["NULL"], "info": ["TypedMemView", "nullView"], "vars": {"NULL": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memView--variables"], "modifier": [], "return_expressions": ["memView==NULL"], "info": ["TypedMemView", "isNull", "memView"], "vars": {"NULL": "bytes29", "memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memView--variables"], "modifier": [], "return_expressions": ["!isNull(memView)"], "info": ["TypedMemView", "notNull", "memView"], "vars": {"memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["false"], "info": ["TypedMemView", "isValid", "memView"], "vars": {"_end": "uint256", "memView": "bytes29", "ret": "bool"}, "loop_info": [], "related_expression": ["typeOf(memView)==0xffffffffff"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["memView--variables"], "modifier": [], "return_expressions": ["memView"], "info": ["TypedMemView", "assertValid", "memView"], "vars": {"memView": "bytes29"}, "loop_info": [], "related_expression": ["isValid(memView)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["_expected--variables", "memView--variables"], "modifier": [], "return_expressions": ["typeOf(memView)==_expected"], "info": ["TypedMemView", "isType", "memView", "_expected"], "vars": {"_expected": "uint40", "memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memView--variables"], "modifier": [], "return_expressions": ["memView"], "info": ["TypedMemView", "assertType", "memView", "_expected"], "vars": {"_expected": "uint40", "e": "uint256", "err": "string", "g": "uint256", "memView": "bytes29"}, "loop_info": [], "related_expression": ["!isType(memView,_expected)", "(g)=encodeHex(uint256(typeOf(memView)))"], "related_expression_type": ["Condition", "AssignmentOperation_="]}, {"visibility": "internal", "return_vars": ["memView--variables"], "modifier": [], "return_expressions": ["memView"], "info": ["TypedMemView", "assertType", "memView", "_expected"], "vars": {"_expected": "uint40", "e": "uint256", "err": "string", "g": "uint256", "memView": "bytes29"}, "loop_info": [], "related_expression": ["not(!isType(memView,_expected))"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["NULL"], "info": ["TypedMemView", "build", "_type", "_loc", "_len"], "vars": {"NULL": "bytes29", "_end": "uint256", "_len": "uint256", "_loc": "uint256", "_type": "uint256", "newView": "bytes29"}, "loop_info": [], "related_expression": ["_end>mload(uint256)(0x40)", "_end==0"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["NULL"], "info": ["TypedMemView", "build", "_type", "_loc", "_len"], "vars": {"NULL": "bytes29", "_end": "uint256", "_len": "uint256", "_loc": "uint256", "_type": "uint256", "newView": "bytes29"}, "loop_info": [], "related_expression": ["not(_end>mload(uint256)(0x40))", "_end==0"], "related_expression_type": ["Condition", "Condition"]}, {"visibility": "internal", "return_vars": ["newType--variables", "_loc--variables", "_len--variables"], "modifier": [], "return_expressions": ["build(newType,_loc,_len)"], "info": ["TypedMemView", "ref", "arr", "newType"], "vars": {"_len": "uint256", "_loc": "uint256", "arr": "bytes", "newType": "uint40"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["right--variables", "left--variables"], "modifier": [], "return_expressions": ["(left^right)>>(2*TWELVE_BYTES)==0"], "info": ["TypedMemView", "sameType", "left", "right"], "vars": {"TWELVE_BYTES": "uint8", "left": "bytes29", "right": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memView--variables"], "modifier": [], "return_expressions": ["uint256(len(memView)).add(32)/32"], "info": ["TypedMemView", "words", "memView"], "vars": {"memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memView--variables"], "modifier": [], "return_expressions": ["words(memView)*32"], "info": ["TypedMemView", "footprint", "memView"], "vars": {"memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memView--variables"], "modifier": [], "return_expressions": ["loc(memView)+len(memView)"], "info": ["TypedMemView", "end", "memView"], "vars": {"memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["NULL"], "info": ["TypedMemView", "slice", "memView", "_index", "_len", "newType"], "vars": {"NULL": "bytes29", "_index": "uint256", "_len": "uint256", "_loc": "uint256", "memView": "bytes29", "newType": "uint40"}, "loop_info": [], "related_expression": ["_loc.add(_index).add(_len)>end(memView)"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["newType--variables", "_len--variables", "_loc--variables"], "modifier": [], "return_expressions": ["build(newType,_loc,_len)"], "info": ["TypedMemView", "slice", "memView", "_index", "_len", "newType"], "vars": {"NULL": "bytes29", "_index": "uint256", "_len": "uint256", "_loc": "uint256", "memView": "bytes29", "newType": "uint40"}, "loop_info": [], "related_expression": ["not(_loc.add(_index).add(_len)>end(memView))"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["memView--variables", "newType--variables", "_len--variables"], "modifier": [], "return_expressions": ["slice(memView,0,_len,newType)"], "info": ["TypedMemView", "prefix", "memView", "_len", "newType"], "vars": {"_len": "uint256", "memView": "bytes29", "newType": "uint40"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memView--variables", "newType--variables", "_len--variables"], "modifier": [], "return_expressions": ["slice(memView,uint256(len(memView)).sub(_len),_len,newType)"], "info": ["TypedMemView", "postfix", "memView", "_len", "newType"], "vars": {"_len": "uint256", "memView": "bytes29", "newType": "uint40"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": [], "modifier": [], "return_expressions": ["bytes32(0)"], "info": ["TypedMemView", "index", "memView", "_index", "_bytes"], "vars": {"_bytes": "uint8", "_index": "uint256", "_loc": "uint256", "_mask": "uint256", "bitLength": "int256", "memView": "bytes29", "result": "bytes32"}, "loop_info": [], "related_expression": ["_bytes==0"], "related_expression_type": ["Condition"]}, {"visibility": "internal", "return_vars": ["memView--variables", "_index--variables", "_bytes--variables"], "modifier": [], "return_expressions": ["uint256(index(memView,_index,_bytes))>>((32-_bytes)*8)"], "info": ["TypedMemView", "indexUint", "memView", "_index", "_bytes"], "vars": {"_bytes": "uint8", "_index": "uint256", "memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_index--variables", "memView--variables", "_bytes--variables"], "modifier": [], "return_expressions": ["reverseUint256(uint256(index(memView,_index,_bytes)))"], "info": ["TypedMemView", "indexLEUint", "memView", "_index", "_bytes"], "vars": {"_bytes": "uint8", "_index": "uint256", "memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["_index--variables", "memView--variables"], "modifier": [], "return_expressions": ["address(uint160(indexUint(memView,_index,20)))"], "info": ["TypedMemView", "indexAddress", "memView", "_index"], "vars": {"_index": "uint256", "memView": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["right--variables", "left--variables"], "modifier": [], "return_expressions": ["(loc(left)==loc(right)&&len(left)==len(right))||keccak(left)==keccak(right)"], "info": ["TypedMemView", "untypedEqual", "left", "right"], "vars": {"left": "bytes29", "right": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["right--variables", "left--variables"], "modifier": [], "return_expressions": ["!untypedEqual(left,right)"], "info": ["TypedMemView", "untypedNotEqual", "left", "right"], "vars": {"left": "bytes29", "right": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["left--variables", "right--variables"], "modifier": [], "return_expressions": ["left==right||(typeOf(left)==typeOf(right)&&keccak(left)==keccak(right))"], "info": ["TypedMemView", "equal", "left", "right"], "vars": {"left": "bytes29", "right": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["right--variables", "left--variables"], "modifier": [], "return_expressions": ["!equal(left,right)"], "info": ["TypedMemView", "notEqual", "left", "right"], "vars": {"left": "bytes29", "right": "bytes29"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["ptr--variables", "memViews--variables"], "modifier": [], "return_expressions": ["keccak(unsafeJoin(memViews,ptr))"], "info": ["TypedMemView", "joinKeccak", "memViews"], "vars": {"memViews": "bytes29[]", "ptr": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}, {"visibility": "internal", "return_vars": ["memViews--variables", "ptr--variables"], "modifier": [], "return_expressions": ["sha2(unsafeJoin(memViews,ptr))"], "info": ["TypedMemView", "joinSha2", "memViews"], "vars": {"memViews": "bytes29[]", "ptr": "uint256"}, "loop_info": [], "related_expression": [], "related_expression_type": []}]